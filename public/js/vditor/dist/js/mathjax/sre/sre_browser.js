$jscomp=$jscomp||{},$jscomp.scope={},$jscomp.arrayIteratorImpl=function(e){var t=0;return function(){return t<e.length?{done:!1,value:e[t++]}:{done:!0}}},$jscomp.arrayIterator=function(e){return{next:$jscomp.arrayIteratorImpl(e)}},$jscomp.makeIterator=function(e){var t="undefined"!=typeof Symbol&&Symbol.iterator&&e[Symbol.iterator];return t?t.call(e):$jscomp.arrayIterator(e)},$jscomp.arrayFromIterator=function(e){for(var t,n=[];!(t=e.next()).done;)n.push(t.value);return n},$jscomp.ASSUME_ES5=!1,$jscomp.ASSUME_NO_NATIVE_MAP=!1,$jscomp.ASSUME_NO_NATIVE_SET=!1,$jscomp.SIMPLE_FROUND_POLYFILL=!1,$jscomp.ISOLATE_POLYFILLS=!1,$jscomp.defineProperty=$jscomp.ASSUME_ES5||"function"==typeof Object.defineProperties?Object.defineProperty:function(e,t,n){return e==Array.prototype||e==Object.prototype?e:(e[t]=n.value,e)},$jscomp.getGlobal=function(e){e=["object"==typeof globalThis&&globalThis,e,"object"==typeof window&&window,"object"==typeof self&&self,"object"==typeof global&&global];for(var t,n=0;n<e.length;++n)if(t=e[n],t&&t.Math==Math)return t;throw Error("Cannot find global object")},$jscomp.global=$jscomp.getGlobal(this),$jscomp.IS_SYMBOL_NATIVE="function"==typeof Symbol&&"symbol"==typeof Symbol("x"),$jscomp.TRUST_ES6_POLYFILLS=!$jscomp.ISOLATE_POLYFILLS||$jscomp.IS_SYMBOL_NATIVE,$jscomp.polyfills={},$jscomp.propertyToPolyfillSymbol={},$jscomp.POLYFILL_PREFIX="$jscp$",$jscomp$lookupPolyfilledValue=function(e,t){var n=$jscomp.propertyToPolyfillSymbol[t];return n==null?e[t]:(n=e[n],void 0!==n?n:e[t])},$jscomp.polyfill=function(e,t,n,s){t&&($jscomp.ISOLATE_POLYFILLS?$jscomp.polyfillIsolated(e,t,n,s):$jscomp.polyfillUnisolated(e,t,n,s))},$jscomp.polyfillUnisolated=function(e,t,n,s){n=$jscomp.global,e=e.split(".");for(s=0;s<e.length-1;s++){var o=e[s];if(!(o in n))return;n=n[o]}e=e[e.length-1],s=n[e],t=t(s),t!=s&&t!=null&&$jscomp.defineProperty(n,e,{configurable:!0,writable:!0,value:t})},$jscomp.polyfillIsolated=function(e,t,n,s){var i,a,o=e.split(".");e=1===o.length,s=o[0],s=!e&&s in $jscomp.polyfills?$jscomp.polyfills:$jscomp.global;for(i=0;i<o.length-1;i++){if(a=o[i],!(a in s))return;s=s[a]}o=o[o.length-1],n=$jscomp.IS_SYMBOL_NATIVE&&"es6"===n?s[o]:null,t=t(n),t!=null&&(e?$jscomp.defineProperty($jscomp.polyfills,o,{configurable:!0,writable:!0,value:t}):t!==n&&($jscomp.propertyToPolyfillSymbol[o]=$jscomp.IS_SYMBOL_NATIVE?$jscomp.global.Symbol(o):$jscomp.POLYFILL_PREFIX+o,o=$jscomp.propertyToPolyfillSymbol[o],$jscomp.defineProperty(s,o,{configurable:!0,writable:!0,value:t})))},$jscomp.initSymbol=function(){},$jscomp.polyfill("Symbol",function(e){if(e)return e;t=function(e,t){this.$jscomp$symbol$id_=e,$jscomp.defineProperty(this,"description",{configurable:!0,writable:!0,value:t})},t.prototype.toString=function(){return this.$jscomp$symbol$id_};var t,s=0,n=function(e){if(this instanceof n)throw new TypeError("Symbol is not a constructor");return new t("jscomp_symbol_"+(e||"")+"_"+s++,e)};return n},"es6","es3"),$jscomp.initSymbolIterator=function(){},$jscomp.polyfill("Symbol.iterator",function(e){if(e)return e;e=Symbol("Symbol.iterator");for(var t,s="Array Int8Array Uint8Array Uint8ClampedArray Int16Array Uint16Array Int32Array Uint32Array Float32Array Float64Array".split(" "),n=0;n<s.length;n++)t=$jscomp.global[s[n]],"function"==typeof t&&"function"!=typeof t.prototype[e]&&$jscomp.defineProperty(t.prototype,e,{configurable:!0,writable:!0,value:function(){return $jscomp.iteratorPrototype($jscomp.arrayIteratorImpl(this))}});return e},"es6","es3"),$jscomp.initSymbolAsyncIterator=function(){},$jscomp.iteratorPrototype=function(e){return e={next:e},e[Symbol.iterator]=function(){return this},e},$jscomp.iteratorFromArray=function(e,t){e instanceof String&&(e+="");var s=0,n={next:function(){if(s<e.length){var o=s++;return{value:t(o,e[o]),done:!1}}return n.next=function(){return{done:!0,value:void 0}},n.next()}};return n[Symbol.iterator]=function(){return n},n},$jscomp.polyfill("Array.prototype.keys",function(e){return e||function(){return $jscomp.iteratorFromArray(this,function(e){return e})}},"es6","es3"),$jscomp.findInternal=function(e,t,n){e instanceof String&&(e=String(e));for(var o,i=e.length,s=0;s<i;s++)if(o=e[s],t.call(n,o,s,e))return{i:s,v:o};return{i:-1,v:void 0}},$jscomp.polyfill("Array.prototype.find",function(e){return e||function(e,t){return $jscomp.findInternal(this,e,t).v}},"es6","es3"),$jscomp.checkStringArgs=function(e,t,n){if(e==null)throw new TypeError("The 'this' value for String.prototype."+n+" must not be null or undefined");if(t instanceof RegExp)throw new TypeError("First argument to String.prototype."+n+" must not be a regular expression");return e+""},$jscomp.polyfill("String.prototype.repeat",function(e){return e||function(e){var t,n=$jscomp.checkStringArgs(this,null,"repeat");if(0>e||1342177279<e)throw new RangeError("Invalid count value");e|=0;for(t="";e;)(e&1&&(t+=n),e>>>=1)&&(n+=n);return t}},"es6","es3"),COMPILED=!0,goog=goog||{},goog.global=this||self,goog.exportPath_=function(e,t,n){e=e.split("."),n=n||goog.global,e[0]in n||"undefined"==typeof n.execScript||n.execScript("var "+e[0]);for(var s;e.length&&(s=e.shift());)e.length||void 0===t?n=n[s]&&n[s]!==Object.prototype[s]?n[s]:n[s]={}:n[s]=t},goog.define=function(e,t){if(!COMPILED){var n=goog.global.CLOSURE_UNCOMPILED_DEFINES,s=goog.global.CLOSURE_DEFINES;n&&void 0===n.nodeType&&Object.prototype.hasOwnProperty.call(n,e)?t=n[e]:s&&void 0===s.nodeType&&Object.prototype.hasOwnProperty.call(s,e)&&(t=s[e])}return t},goog.FEATURESET_YEAR=2012,goog.DEBUG=!0,goog.LOCALE="en",goog.TRUSTED_SITE=!0,goog.STRICT_MODE_COMPATIBLE=!1,goog.DISALLOW_TEST_ONLY_CODE=COMPILED&&!goog.DEBUG,goog.ENABLE_CHROME_APP_SAFE_SCRIPT_LOADING=!1,goog.provide=function(e){if(goog.isInModuleLoader_())throw Error("goog.provide cannot be used within a module.");if(!COMPILED&&goog.isProvided_(e))throw Error('Namespace "'+e+'" already declared.');goog.constructNamespace_(e)},goog.constructNamespace_=function(e,t){if(!COMPILED){delete goog.implicitNamespaces_[e];for(var n=e;(n=n.substring(0,n.lastIndexOf(".")))&&!goog.getObjectByName(n);)goog.implicitNamespaces_[n]=!0}goog.exportPath_(e,t)},goog.getScriptNonce=function(e){return e&&e!=goog.global?goog.getScriptNonce_(e.document):(null===goog.cspNonce_&&(goog.cspNonce_=goog.getScriptNonce_(goog.global.document)),goog.cspNonce_)},goog.NONCE_PATTERN_=/^[\w+/_-]+[=]{0,2}$/,goog.cspNonce_=null,goog.getScriptNonce_=function(e){return(e=e.querySelector&&e.querySelector("script[nonce]"))&&(e=e.nonce||e.getAttribute("nonce"))&&goog.NONCE_PATTERN_.test(e)?e:""},goog.VALID_MODULE_RE_=/^[a-zA-Z_$][a-zA-Z0-9._$]*$/,goog.module=function(e){if("string"!=typeof e||!e||-1==e.search(goog.VALID_MODULE_RE_))throw Error("Invalid module identifier");if(!goog.isInGoogModuleLoader_())throw Error("Module "+e+" has been loaded incorrectly. Note, modules cannot be loaded as normal scripts. They require some kind of pre-processing step. You're likely trying to load a module via a script tag or as a part of a concatenated bundle without rewriting the module. For more info see: https://github.com/google/closure-library/wiki/goog.module:-an-ES6-module-like-alternative-to-goog.provide.");if(goog.moduleLoaderState_.moduleName)throw Error("goog.module may only be called once per module.");if(goog.moduleLoaderState_.moduleName=e,!COMPILED){if(goog.isProvided_(e))throw Error('Namespace "'+e+'" already declared.');delete goog.implicitNamespaces_[e]}},goog.module.get=function(e){return goog.module.getInternal_(e)},goog.module.getInternal_=function(e){if(!COMPILED){if(e in goog.loadedModules_)return goog.loadedModules_[e].exports;if(!goog.implicitNamespaces_[e])return e=goog.getObjectByName(e),e??null}return null},goog.ModuleType={ES6:"es6",GOOG:"goog"},goog.moduleLoaderState_=null,goog.isInModuleLoader_=function(){return goog.isInGoogModuleLoader_()||goog.isInEs6ModuleLoader_()},goog.isInGoogModuleLoader_=function(){return!!goog.moduleLoaderState_&&goog.moduleLoaderState_.type==goog.ModuleType.GOOG},goog.isInEs6ModuleLoader_=function(){if(goog.moduleLoaderState_&&goog.moduleLoaderState_.type==goog.ModuleType.ES6)return!0;var e=goog.global.$jscomp;return!!e&&"function"==typeof e.getCurrentModulePath&&!!e.getCurrentModulePath()},goog.module.declareLegacyNamespace=function(){if(!COMPILED&&!goog.isInGoogModuleLoader_())throw Error("goog.module.declareLegacyNamespace must be called from within a goog.module");if(!COMPILED&&!goog.moduleLoaderState_.moduleName)throw Error("goog.module must be called prior to goog.module.declareLegacyNamespace.");goog.moduleLoaderState_.declareLegacyNamespace=!0},goog.declareModuleId=function(e){if(!COMPILED){if(!goog.isInEs6ModuleLoader_())throw Error("goog.declareModuleId may only be called from within an ES6 module");if(goog.moduleLoaderState_&&goog.moduleLoaderState_.moduleName)throw Error("goog.declareModuleId may only be called once per module.");if(e in goog.loadedModules_)throw Error('Module with namespace "'+e+'" already exists.')}if(goog.moduleLoaderState_)goog.moduleLoaderState_.moduleName=e;else{var t=goog.global.$jscomp;if(!t||"function"!=typeof t.getCurrentModulePath)throw Error('Module with namespace "'+e+'" has been loaded incorrectly.');t=t.require(t.getCurrentModulePath()),goog.loadedModules_[e]={exports:t,type:goog.ModuleType.ES6,moduleId:e}}},goog.setTestOnly=function(e){if(goog.DISALLOW_TEST_ONLY_CODE)throw e=e||"",Error("Importing test-only code into non-debug environment"+(e?": "+e:"."))},goog.forwardDeclare=function(){},COMPILED||(goog.isProvided_=function(e){return e in goog.loadedModules_||!goog.implicitNamespaces_[e]&&null!=goog.getObjectByName(e)},goog.implicitNamespaces_={"goog.module":!0}),goog.getObjectByName=function(e,t){e=e.split("."),t=t||goog.global;for(var n=0;n<e.length;n++)if(t=t[e[n]],t==null)return null;return t},goog.globalize=function(e,t){t=t||goog.global;for(var n in e)t[n]=e[n]},goog.addDependency=function(e,t,n,s){!COMPILED&&goog.DEPENDENCIES_ENABLED&&goog.debugLoader_.addDependency(e,t,n,s)},goog.ENABLE_DEBUG_LOADER=!0,goog.logToConsole_=function(e){goog.global.console&&goog.global.console.error(e)},goog.require=function(e){if(!COMPILED){if(goog.ENABLE_DEBUG_LOADER&&goog.debugLoader_.requested(e),goog.isProvided_(e)){if(goog.isInModuleLoader_())return goog.module.getInternal_(e)}else if(goog.ENABLE_DEBUG_LOADER){var t=goog.moduleLoaderState_;goog.moduleLoaderState_=null;try{goog.debugLoader_.load_(e)}finally{goog.moduleLoaderState_=t}}return null}},goog.requireType=function(){return{}},goog.basePath="",goog.nullFunction=function(){},goog.abstractMethod=function(){throw Error("unimplemented abstract method")},goog.addSingletonGetter=function(e){e.instance_=void 0,e.getInstance=function(){return e.instance_?e.instance_:(goog.DEBUG&&(goog.instantiatedSingletons_[goog.instantiatedSingletons_.length]=e),e.instance_=new e)}},goog.instantiatedSingletons_=[],goog.LOAD_MODULE_USING_EVAL=!0,goog.SEAL_MODULE_EXPORTS=goog.DEBUG,goog.loadedModules_={},goog.DEPENDENCIES_ENABLED=!COMPILED&&goog.ENABLE_DEBUG_LOADER,goog.TRANSPILE="detect",goog.ASSUME_ES_MODULES_TRANSPILED=!1,goog.TRANSPILE_TO_LANGUAGE="",goog.TRANSPILER="transpile.js",goog.hasBadLetScoping=null,goog.useSafari10Workaround=function(){if(null==goog.hasBadLetScoping){try{var e=!eval('"use strict";let x = 1; function f() { return typeof x; };f() == "number";')}catch{e=!1}goog.hasBadLetScoping=e}return goog.hasBadLetScoping},goog.workaroundSafari10EvalBug=function(e){return"(function(){"+e+`
;})();
`},goog.loadModule=function(e){var t,n,s=goog.moduleLoaderState_;try{if(goog.moduleLoaderState_={moduleName:"",declareLegacyNamespace:!1,type:goog.ModuleType.GOOG},goog.isFunction(e))t=e.call(void 0,{});else if("string"==typeof e)goog.useSafari10Workaround()&&(e=goog.workaroundSafari10EvalBug(e)),t=goog.loadModuleFromSource_.call(void 0,e);else throw Error("Invalid module definition");if(n=goog.moduleLoaderState_.moduleName,"string"==typeof n&&n)goog.moduleLoaderState_.declareLegacyNamespace?goog.constructNamespace_(n,t):goog.SEAL_MODULE_EXPORTS&&Object.seal&&"object"==typeof t&&t!=null&&Object.seal(t),goog.loadedModules_[n]={exports:t,type:goog.ModuleType.GOOG,moduleId:goog.moduleLoaderState_.moduleName};else throw Error('Invalid module name "'+n+'"')}finally{goog.moduleLoaderState_=s}},goog.loadModuleFromSource_=function(e){return eval(e),{}},goog.normalizePath_=function(e){e=e.split("/");for(var t=0;t<e.length;)"."==e[t]?e.splice(t,1):t&&".."==e[t]&&e[t-1]&&".."!=e[t-1]?e.splice(--t,2):t++;return e.join("/")},goog.loadFileSync_=function(e){if(goog.global.CLOSURE_LOAD_FILE_SYNC)return goog.global.CLOSURE_LOAD_FILE_SYNC(e);try{var t=new goog.global.XMLHttpRequest;return t.open("get",e,!1),t.send(),0==t.status||200==t.status?t.responseText:null}catch{return null}},goog.transpile_=function(e,t,n){if(s=goog.global.$jscomp,s||(goog.global.$jscomp=s={}),o=s.transpile,!o){var s,o,i=goog.basePath+goog.TRANSPILER,a=goog.loadFileSync_(i);if(a){if(function(){(0,eval)(a+`
//# sourceURL=`+i)}.call(goog.global),goog.global.$gwtExport&&goog.global.$gwtExport.$jscomp&&!goog.global.$gwtExport.$jscomp.transpile)throw Error('The transpiler did not properly export the "transpile" method. $gwtExport: '+JSON.stringify(goog.global.$gwtExport));goog.global.$jscomp.transpile=goog.global.$gwtExport.$jscomp.transpile,s=goog.global.$jscomp,o=s.transpile}}return o||(o=s.transpile=function(e,t){return goog.logToConsole_(t+" requires transpilation but no transpiler was found."),e}),o(e,t,n)},goog.typeOf=function(e){var t,n=typeof e;if("object"==n)if(e){{if(e instanceof Array)return"array";if(e instanceof Object)return n;if(t=Object.prototype.toString.call(e),"[object Window]"==t)return"object";if("[object Array]"==t||"number"==typeof e.length&&"undefined"!=typeof e.splice&&"undefined"!=typeof e.propertyIsEnumerable&&!e.propertyIsEnumerable("splice"))return"array";if("[object Function]"==t||"undefined"!=typeof e.call&&"undefined"!=typeof e.propertyIsEnumerable&&!e.propertyIsEnumerable("call"))return"function"}}else return"null";else if("function"==n&&"undefined"==typeof e.call)return"object";return n},goog.isArray=function(e){return Array.isArray(e)},goog.isArrayLike=function(e){var t=goog.typeOf(e);return"array"==t||"object"==t&&"number"==typeof e.length},goog.isDateLike=function(e){return goog.isObject(e)&&"function"==typeof e.getFullYear},goog.isFunction=function(e){return"function"==goog.typeOf(e)},goog.isObject=function(e){var t=typeof e;return"object"==t&&e!=null||"function"==t},goog.getUid=function(e){return Object.prototype.hasOwnProperty.call(e,goog.UID_PROPERTY_)&&e[goog.UID_PROPERTY_]||(e[goog.UID_PROPERTY_]=++goog.uidCounter_)},goog.hasUid=function(e){return!!e[goog.UID_PROPERTY_]},goog.removeUid=function(e){null!==e&&"removeAttribute"in e&&e.removeAttribute(goog.UID_PROPERTY_);try{delete e[goog.UID_PROPERTY_]}catch{}},goog.UID_PROPERTY_="closure_uid_"+(1e9*Math.random()>>>0),goog.uidCounter_=0,goog.getHashCode=goog.getUid,goog.removeHashCode=goog.removeUid,goog.cloneObject=function(e){var n,t=goog.typeOf(e);if("object"==t||"array"==t){if("function"==typeof e.clone)return e.clone();t="array"==t?[]:{};for(n in e)t[n]=goog.cloneObject(e[n]);return t}return e},goog.bindNative_=function(e){return e.call.apply(e.bind,arguments)},goog.bindJs_=function(e,t){if(!e)throw Error();if(2<arguments.length){var n=Array.prototype.slice.call(arguments,2);return function(){var s=Array.prototype.slice.call(arguments);return Array.prototype.unshift.apply(s,n),e.apply(t,s)}}return function(){return e.apply(t,arguments)}},goog.bind=function(){return Function.prototype.bind&&-1!=Function.prototype.bind.toString().indexOf("native code")?goog.bind=goog.bindNative_:goog.bind=goog.bindJs_,goog.bind.apply(null,arguments)},goog.partial=function(e){var t=Array.prototype.slice.call(arguments,1);return function(){var n=t.slice();return n.push.apply(n,arguments),e.apply(this,n)}},goog.mixin=function(e,t){for(var n in t)e[n]=t[n]},goog.now=goog.TRUSTED_SITE&&Date.now||function(){return+new Date},goog.globalEval=function(e){if(goog.global.execScript)goog.global.execScript(e,"JavaScript");else if(goog.global.eval){if(null==goog.evalWorks_)try{goog.global.eval(""),goog.evalWorks_=!0}catch{goog.evalWorks_=!1}if(goog.evalWorks_)goog.global.eval(e);else{var n=goog.global.document,t=n.createElement("script");t.type="text/javascript",t.defer=!1,t.appendChild(n.createTextNode(e)),n.head.appendChild(t),n.head.removeChild(t)}}else throw Error("goog.globalEval not available")},goog.evalWorks_=null,goog.getCssName=function(e,t){if("."==String(e).charAt(0))throw Error('className passed in goog.getCssName must not start with ".". You passed: '+e);var s=function(e){return goog.cssNameMapping_[e]||e},n=function(e){e=e.split("-");for(var n=[],t=0;t<e.length;t++)n.push(s(e[t]));return n.join("-")},n=goog.cssNameMapping_?"BY_WHOLE"==goog.cssNameMappingStyle_?s:n:function(e){return e};return e=t?e+"-"+n(t):n(e),goog.global.CLOSURE_CSS_NAME_MAP_FN?goog.global.CLOSURE_CSS_NAME_MAP_FN(e):e},goog.setCssNameMapping=function(e,t){goog.cssNameMapping_=e,goog.cssNameMappingStyle_=t},!COMPILED&&goog.global.CLOSURE_CSS_NAME_MAPPING&&(goog.cssNameMapping_=goog.global.CLOSURE_CSS_NAME_MAPPING),goog.getMsg=function(e,t,n){return n&&n.html&&(e=e.replace(/</g,"&lt;")),t&&(e=e.replace(/\{\$([^}]+)}/g,function(e,n){return t!=null&&n in t?t[n]:e})),e},goog.getMsgWithFallback=function(e){return e},goog.exportSymbol=function(e,t,n){goog.exportPath_(e,t,n)},goog.exportProperty=function(e,t,n){e[t]=n},goog.inherits=function(e,t){function n(){}n.prototype=t.prototype,e.superClass_=t.prototype,e.prototype=new n,e.prototype.constructor=e,e.base=function(e,n){for(var o=Array(arguments.length-2),s=2;s<arguments.length;s++)o[s-2]=arguments[s];return t.prototype[n].apply(e,o)}},goog.scope=function(e){if(goog.isInModuleLoader_())throw Error("goog.scope is not supported within a module.");e.call(goog.global)},COMPILED||(goog.global.COMPILED=COMPILED),goog.defineClass=function(e,t){var n=t.constructor,s=t.statics;return n&&n!=Object.prototype.constructor||(n=function(){throw Error("cannot instantiate an interface (no constructor defined).")}),n=goog.defineClass.createSealingConstructor_(n,e),e&&goog.inherits(n,e),delete t.constructor,delete t.statics,goog.defineClass.applyProperties_(n.prototype,t),s!=null&&(s instanceof Function?s(n):goog.defineClass.applyProperties_(n,s)),n},goog.defineClass.SEAL_CLASS_INSTANCES=goog.DEBUG,goog.defineClass.createSealingConstructor_=function(e){return goog.defineClass.SEAL_CLASS_INSTANCES?function(){var t=e.apply(this,arguments)||this;return t[goog.UID_PROPERTY_]=t[goog.UID_PROPERTY_],t}:e},goog.defineClass.OBJECT_PROTOTYPE_FIELDS_="constructor hasOwnProperty isPrototypeOf propertyIsEnumerable toLocaleString toString valueOf".split(" "),goog.defineClass.applyProperties_=function(e,t){for(n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n]);for(var n,s=0;s<goog.defineClass.OBJECT_PROTOTYPE_FIELDS_.length;s++)n=goog.defineClass.OBJECT_PROTOTYPE_FIELDS_[s],Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])},!COMPILED&&goog.DEPENDENCIES_ENABLED&&(goog.inHtmlDocument_=function(){var e=goog.global.document;return e!=null&&"write"in e},goog.isDocumentLoading_=function(){var e=goog.global.document;return e.attachEvent?"complete"!=e.readyState:"loading"==e.readyState},goog.findBasePath_=function(){if(void 0!=goog.global.CLOSURE_BASE_PATH&&"string"==typeof goog.global.CLOSURE_BASE_PATH)goog.basePath=goog.global.CLOSURE_BASE_PATH;else if(goog.inHtmlDocument_()){var e,n,s=goog.global.document,t=s.currentScript,s=t?[t]:s.getElementsByTagName("SCRIPT");for(t=s.length-1;0<=t;--t)if(n=s[t].src,e=n.lastIndexOf("?"),e=-1==e?n.length:e,"base.js"==n.substr(e-7,7)){goog.basePath=n.substr(0,e-7);break}}},goog.findBasePath_(),goog.Transpiler=function(){this.requiresTranspilation_=null,this.transpilationTarget_=goog.TRANSPILE_TO_LANGUAGE},goog.Transpiler.prototype.createRequiresTranspilation_=function(){function e(e,t){o?n[e]=!0:t()?(s=e,n[e]=!1):o=n[e]=!0}function t(e){try{return!!eval(e)}catch{return!1}}var s="es3",n={es3:!1},o=!1,i=goog.global.navigator&&goog.global.navigator.userAgent?goog.global.navigator.userAgent:"";return e("es5",function(){return t("[1,].length==1")}),e("es6",function(){return!i.match(/Edge\/(\d+)(\.\d)*/i)&&t('(()=>{"use strict";class X{constructor(){if(new.target!=String)throw 1;this.x=42}}let q=Reflect.construct(X,[],String);if(q.x!=42||!(q instanceof String))throw 1;for(const a of[2,3]){if(a==2)continue;function f(z={a}){let a=0;return z.a}{function f(){return 0;}}return f()==3}})()')}),e("es7",function(){return t("2 ** 2 == 4")}),e("es8",function(){return t("async () => 1, true")}),e("es9",function(){return t("({...rest} = {}), true")}),e("es_next",function(){return!1}),{target:s,map:n}},goog.Transpiler.prototype.needsTranspile=function(e,t){if("always"==goog.TRANSPILE)return!0;if("never"==goog.TRANSPILE)return!1;if(!this.requiresTranspilation_){var n=this.createRequiresTranspilation_();this.requiresTranspilation_=n.map,this.transpilationTarget_=this.transpilationTarget_||n.target}if(e in this.requiresTranspilation_)return!!this.requiresTranspilation_[e]||!(!goog.inHtmlDocument_()||"es6"!=t||"noModule"in goog.global.document.createElement("script"));throw Error("Unknown language mode: "+e)},goog.Transpiler.prototype.transpile=function(e,t){return goog.transpile_(e,t,this.transpilationTarget_)},goog.transpiler_=new goog.Transpiler,goog.protectScriptTag_=function(e){return e.replace(/<\/(SCRIPT)/ig,"\\x3c/$1")},goog.DebugLoader_=function(){this.dependencies_={},this.idToPath_={},this.written_={},this.loadingDeps_=[],this.depsToLoad_=[],this.paused_=!1,this.factory_=new goog.DependencyFactory(goog.transpiler_),this.deferredCallbacks_={},this.deferredQueue_=[]},goog.DebugLoader_.prototype.bootstrap=function(e,t){function i(){o&&(goog.global.setTimeout(o,0),o=null)}var n,s,a,o=t;if(e.length){t=[];for(n=0;n<e.length;n++){if(s=this.getPathFromDeps_(e[n]),!s)throw Error("Unregonized namespace: "+e[n]);t.push(this.dependencies_[s])}s=goog.require,a=0;for(n=0;n<e.length;n++)s(e[n]),t[n].onLoad(function(){++a==e.length&&i()})}else i()},goog.DebugLoader_.prototype.loadClosureDeps=function(){this.depsToLoad_.push(this.factory_.createDependency(goog.normalizePath_(goog.basePath+"deps.js"),"deps.js",[],[],{},!1)),this.loadDeps_()},goog.DebugLoader_.prototype.requested=function(e,t){(e=this.getPathFromDeps_(e))&&(t||this.areDepsLoaded_(this.dependencies_[e].requires))&&(t=this.deferredCallbacks_[e])&&(delete this.deferredCallbacks_[e],t())},goog.DebugLoader_.prototype.setDependencyFactory=function(e){this.factory_=e},goog.DebugLoader_.prototype.load_=function(e){if(this.getPathFromDeps_(e)){var t=this,n=[],s=function(e){var o=t.getPathFromDeps_(e);if(!o)throw Error("Bad dependency path or symbol: "+e);if(!t.written_[o]){t.written_[o]=!0,e=t.dependencies_[o];for(o=0;o<e.requires.length;o++)goog.isProvided_(e.requires[o])||s(e.requires[o]);n.push(e)}};s(e),e=!!this.depsToLoad_.length,this.depsToLoad_=this.depsToLoad_.concat(n),this.paused_||e||this.loadDeps_()}else throw e="goog.require could not find: "+e,goog.logToConsole_(e),Error(e)},goog.DebugLoader_.prototype.loadDeps_=function(){for(var e=this,t=this.paused_;this.depsToLoad_.length&&!t;)(function(){var o,s=!1,n=e.depsToLoad_.shift(),i=!1;e.loading_(n),o={pause:function(){if(s)throw Error("Cannot call pause after the call to load.");t=!0},resume:function(){s?e.resume_():t=!1},loaded:function(){if(i)throw Error("Double call to loaded.");i=!0,e.loaded_(n)},pending:function(){for(var n=[],t=0;t<e.loadingDeps_.length;t++)n.push(e.loadingDeps_[t]);return n},setModuleState:function(e){goog.moduleLoaderState_={type:e,moduleName:"",declareLegacyNamespace:!1}},registerEs6ModuleExports:function(e,t,n){n&&(goog.loadedModules_[n]={exports:t,type:goog.ModuleType.ES6,moduleId:n||""})},registerGoogModuleExports:function(e,t){goog.loadedModules_[e]={exports:t,type:goog.ModuleType.GOOG,moduleId:e}},clearModuleState:function(){goog.moduleLoaderState_=null},defer:function(t){if(s)throw Error("Cannot register with defer after the call to load.");e.defer_(n,t)},areDepsLoaded:function(){return e.areDepsLoaded_(n.requires)}};try{n.load(o)}finally{s=!0}})();t&&this.pause_()},goog.DebugLoader_.prototype.pause_=function(){this.paused_=!0},goog.DebugLoader_.prototype.resume_=function(){this.paused_&&(this.paused_=!1,this.loadDeps_())},goog.DebugLoader_.prototype.loading_=function(e){this.loadingDeps_.push(e)},goog.DebugLoader_.prototype.loaded_=function(e){for(var t=0;t<this.loadingDeps_.length;t++)if(this.loadingDeps_[t]==e){this.loadingDeps_.splice(t,1);break}for(t=0;t<this.deferredQueue_.length;t++)if(this.deferredQueue_[t]==e.path){this.deferredQueue_.splice(t,1);break}if(this.loadingDeps_.length==this.deferredQueue_.length&&!this.depsToLoad_.length)for(;this.deferredQueue_.length;)this.requested(this.deferredQueue_.shift(),!0);e.loaded()},goog.DebugLoader_.prototype.areDepsLoaded_=function(e){for(var n,t=0;t<e.length;t++)if(n=this.getPathFromDeps_(e[t]),!n||!(n in this.deferredCallbacks_||goog.isProvided_(e[t])))return!1;return!0},goog.DebugLoader_.prototype.getPathFromDeps_=function(e){return e in this.idToPath_?this.idToPath_[e]:e in this.dependencies_?e:null},goog.DebugLoader_.prototype.defer_=function(e,t){this.deferredCallbacks_[e.path]=t,this.deferredQueue_.push(e.path)},goog.LoadController=function(){},goog.LoadController.prototype.pause=function(){},goog.LoadController.prototype.resume=function(){},goog.LoadController.prototype.loaded=function(){},goog.LoadController.prototype.pending=function(){},goog.LoadController.prototype.registerEs6ModuleExports=function(){},goog.LoadController.prototype.setModuleState=function(){},goog.LoadController.prototype.clearModuleState=function(){},goog.LoadController.prototype.defer=function(){},goog.LoadController.prototype.areDepsLoaded=function(){},goog.Dependency=function(e,t,n,s,o){this.path=e,this.relativePath=t,this.provides=n,this.requires=s,this.loadFlags=o,this.loaded_=!1,this.loadCallbacks_=[]},goog.Dependency.prototype.getPathName=function(){var e=this.path,t=e.indexOf("://");return 0<=t&&(e=e.substring(t+3),t=e.indexOf("/"),0<=t&&(e=e.substring(t+1))),e},goog.Dependency.prototype.onLoad=function(e){this.loaded_?e():this.loadCallbacks_.push(e)},goog.Dependency.prototype.loaded=function(){this.loaded_=!0;var e,t=this.loadCallbacks_;this.loadCallbacks_=[];for(e=0;e<t.length;e++)t[e]()},goog.Dependency.defer_=!1,goog.Dependency.callbackMap_={},goog.Dependency.registerCallback_=function(e){var t=Math.random().toString(32);return goog.Dependency.callbackMap_[t]=e,t},goog.Dependency.unregisterCallback_=function(e){delete goog.Dependency.callbackMap_[e]},goog.Dependency.callback_=function(e){if(e in goog.Dependency.callbackMap_){for(var s=goog.Dependency.callbackMap_[e],n=[],t=1;t<arguments.length;t++)n.push(arguments[t]);s.apply(void 0,n)}else throw Error("Callback key "+e+" does not exist (was base.js loaded more than once?).")},goog.Dependency.prototype.load=function(e){if(goog.global.CLOSURE_IMPORT_SCRIPT)goog.global.CLOSURE_IMPORT_SCRIPT(this.path)?e.loaded():e.pause();else if(goog.inHtmlDocument_()){if(s=goog.global.document,"complete"==s.readyState&&!goog.ENABLE_CHROME_APP_SAFE_SCRIPT_LOADING){if(/\bdeps.js$/.test(this.path)){e.loaded();return}throw Error('Cannot write "'+this.path+'" after document load')}if(!goog.ENABLE_CHROME_APP_SAFE_SCRIPT_LOADING&&goog.isDocumentLoading_()){var t,s,o=goog.Dependency.registerCallback_(function(t){goog.DebugLoader_.IS_OLD_IE_&&"complete"!=t.readyState||(goog.Dependency.unregisterCallback_(o),e.loaded())}),n=!goog.DebugLoader_.IS_OLD_IE_&&goog.getScriptNonce()?' nonce="'+goog.getScriptNonce()+'"':"",n='<script src="'+this.path+'" '+(goog.DebugLoader_.IS_OLD_IE_?"onreadystatechange":"onload")+`="goog.Dependency.callback_('`+o+`', this)" type="text/javascript" `+(goog.Dependency.defer_?"defer":"")+n+"><\/script>";s.write(goog.TRUSTED_TYPES_POLICY_?goog.TRUSTED_TYPES_POLICY_.createHTML(n):n)}else t=s.createElement("script"),t.defer=goog.Dependency.defer_,t.async=!1,t.type="text/javascript",(n=goog.getScriptNonce())&&t.setAttribute("nonce",n),goog.DebugLoader_.IS_OLD_IE_?(e.pause(),t.onreadystatechange=function(){("loaded"==t.readyState||"complete"==t.readyState)&&(e.loaded(),e.resume())}):t.onload=function(){t.onload=null,e.loaded()},t.src=goog.TRUSTED_TYPES_POLICY_?goog.TRUSTED_TYPES_POLICY_.createScriptURL(this.path):this.path,s.head.appendChild(t)}else goog.logToConsole_("Cannot use default debug loader outside of HTML documents."),"deps.js"==this.relativePath?(goog.logToConsole_("Consider setting CLOSURE_IMPORT_SCRIPT before loading base.js, or setting CLOSURE_NO_DEPS to true."),e.loaded()):e.pause()},goog.Es6ModuleDependency=function(e,t,n,s,o){goog.Dependency.call(this,e,t,n,s,o)},goog.inherits(goog.Es6ModuleDependency,goog.Dependency),goog.Es6ModuleDependency.prototype.load=function(e){function a(e,t){e=t?'<script type="module" crossorigin>'+t+"<\/script>":'<script type="module" crossorigin src="'+e+'"><\/script>',i.write(goog.TRUSTED_TYPES_POLICY_?goog.TRUSTED_TYPES_POLICY_.createHTML(e):e)}function r(e,t){var s,n=i.createElement("script");n.defer=!0,n.async=!1,n.type="module",n.setAttribute("crossorigin",!0),s=goog.getScriptNonce(),s&&n.setAttribute("nonce",s),t?n.textContent=goog.TRUSTED_TYPES_POLICY_?goog.TRUSTED_TYPES_POLICY_.createScript(t):t:n.src=goog.TRUSTED_TYPES_POLICY_?goog.TRUSTED_TYPES_POLICY_.createScriptURL(e):e,i.head.appendChild(n)}if(goog.global.CLOSURE_IMPORT_SCRIPT)goog.global.CLOSURE_IMPORT_SCRIPT(this.path)?e.loaded():e.pause();else if(goog.inHtmlDocument_()){var t,n,s,o,i=goog.global.document,c=this;goog.isDocumentLoading_()?(t=a,goog.Dependency.defer_=!0):t=r,n=goog.Dependency.registerCallback_(function(){goog.Dependency.unregisterCallback_(n),e.setModuleState(goog.ModuleType.ES6)}),t(void 0,'goog.Dependency.callback_("'+n+'")'),t(this.path,void 0),s=goog.Dependency.registerCallback_(function(t){goog.Dependency.unregisterCallback_(s),e.registerEs6ModuleExports(c.path,t,goog.moduleLoaderState_.moduleName)}),t(void 0,'import * as m from "'+this.path+'"; goog.Dependency.callback_("'+s+'", m)'),o=goog.Dependency.registerCallback_(function(){goog.Dependency.unregisterCallback_(o),e.clearModuleState(),e.loaded()}),t(void 0,'goog.Dependency.callback_("'+o+'")')}else goog.logToConsole_("Cannot use default debug loader outside of HTML documents."),e.pause()},goog.TransformedDependency=function(e,t,n,s,o){goog.Dependency.call(this,e,t,n,s,o),this.contents_=null,this.lazyFetch_=!goog.inHtmlDocument_()||!("noModule"in goog.global.document.createElement("script"))},goog.inherits(goog.TransformedDependency,goog.Dependency),goog.TransformedDependency.prototype.load=function(e){function r(){t.contents_=goog.loadFileSync_(t.path),t.contents_&&(t.contents_=t.transform(t.contents_),t.contents_&&(t.contents_+=`
//# sourceURL=`+t.path))}function o(){if(t.lazyFetch_&&r(),t.contents_){n&&e.setModuleState(goog.ModuleType.ES6);try{var s,o=t.contents_;t.contents_=null,goog.globalEval(o),n&&(s=goog.moduleLoaderState_.moduleName)}finally{n&&e.clearModuleState()}n&&goog.global.$jscomp.require.ensure([t.getPathName()],function(){e.registerEs6ModuleExports(t.path,goog.global.$jscomp.require(t.getPathName()),s)}),e.loaded()}}function l(){var n=goog.global.document,e=goog.Dependency.registerCallback_(function(){goog.Dependency.unregisterCallback_(e),o()}),t='<script type="text/javascript">'+goog.protectScriptTag_('goog.Dependency.callback_("'+e+'");')+"<\/script>";n.write(goog.TRUSTED_TYPES_POLICY_?goog.TRUSTED_TYPES_POLICY_.createHTML(t):t)}if(t=this,goog.global.CLOSURE_IMPORT_SCRIPT)r(),this.contents_&&goog.global.CLOSURE_IMPORT_SCRIPT("",this.contents_)?(this.contents_=null,e.loaded()):e.pause();else{n=this.loadFlags.module==goog.ModuleType.ES6,this.lazyFetch_||r();var t,n,s,i,a=1<e.pending().length,c=a&&goog.DebugLoader_.IS_OLD_IE_,a=goog.Dependency.defer_&&(a||goog.isDocumentLoading_());c||a?e.defer(function(){o()}):(s=goog.global.document,c=goog.inHtmlDocument_()&&"ActiveXObject"in goog.global,n&&goog.inHtmlDocument_()&&goog.isDocumentLoading_()&&!c?(goog.Dependency.defer_=!0,e.pause(),i=s.onreadystatechange,s.onreadystatechange=function(){"interactive"==s.readyState&&(s.onreadystatechange=i,o(),e.resume()),goog.isFunction(i)&&i.apply(void 0,arguments)}):!goog.DebugLoader_.IS_OLD_IE_&&goog.inHtmlDocument_()&&goog.isDocumentLoading_()?l():o())}},goog.TransformedDependency.prototype.transform=function(){},goog.TranspiledDependency=function(e,t,n,s,o,i){goog.TransformedDependency.call(this,e,t,n,s,o),this.transpiler=i},goog.inherits(goog.TranspiledDependency,goog.TransformedDependency),goog.TranspiledDependency.prototype.transform=function(e){return this.transpiler.transpile(e,this.getPathName())},goog.PreTranspiledEs6ModuleDependency=function(e,t,n,s,o){goog.TransformedDependency.call(this,e,t,n,s,o)},goog.inherits(goog.PreTranspiledEs6ModuleDependency,goog.TransformedDependency),goog.PreTranspiledEs6ModuleDependency.prototype.transform=function(e){return e},goog.GoogModuleDependency=function(e,t,n,s,o,i,a){goog.TransformedDependency.call(this,e,t,n,s,o),this.needsTranspile_=i,this.transpiler_=a},goog.inherits(goog.GoogModuleDependency,goog.TransformedDependency),goog.GoogModuleDependency.prototype.transform=function(e){return this.needsTranspile_&&(e=this.transpiler_.transpile(e,this.getPathName())),goog.LOAD_MODULE_USING_EVAL&&void 0!==goog.global.JSON?"goog.loadModule("+goog.global.JSON.stringify(e+`
//# sourceURL=`+this.path+`
`)+");":'goog.loadModule(function(exports) {"use strict";'+e+`
;return exports});
//# sourceURL=`+this.path+`
`},goog.DebugLoader_.IS_OLD_IE_=!(goog.global.atob||!goog.global.document||!goog.global.document.all),goog.DebugLoader_.prototype.addDependency=function(e,t,n,s){t=t||[],e=e.replace(/\\/g,"/");var o=goog.normalizePath_(goog.basePath+e);s&&"boolean"!=typeof s||(s=s?{module:goog.ModuleType.GOOG}:{}),n=this.factory_.createDependency(o,e,t,n,s,goog.transpiler_.needsTranspile(s.lang||"es3",s.module)),this.dependencies_[o]=n;for(n=0;n<t.length;n++)this.idToPath_[t[n]]=o;this.idToPath_[e]=o},goog.DependencyFactory=function(e){this.transpiler=e},goog.DependencyFactory.prototype.createDependency=function(e,t,n,s,o,i){return o.module==goog.ModuleType.GOOG?new goog.GoogModuleDependency(e,t,n,s,o,i,this.transpiler):i?new goog.TranspiledDependency(e,t,n,s,o,this.transpiler):o.module==goog.ModuleType.ES6?"never"==goog.TRANSPILE&&goog.ASSUME_ES_MODULES_TRANSPILED?new goog.PreTranspiledEs6ModuleDependency(e,t,n,s,o):new goog.Es6ModuleDependency(e,t,n,s,o):new goog.Dependency(e,t,n,s,o)},goog.debugLoader_=new goog.DebugLoader_,goog.loadClosureDeps=function(){goog.debugLoader_.loadClosureDeps()},goog.setDependencyFactory=function(e){goog.debugLoader_.setDependencyFactory(e)},goog.TRUSTED_TYPES_POLICY_=goog.TRUSTED_TYPES_POLICY_NAME?goog.createTrustedTypesPolicy(goog.TRUSTED_TYPES_POLICY_NAME+"#base"):null,goog.global.CLOSURE_NO_DEPS||goog.debugLoader_.loadClosureDeps(),goog.bootstrap=function(e,t){goog.debugLoader_.bootstrap(e,t)}),goog.TRUSTED_TYPES_POLICY_NAME="",goog.identity_=function(e){return e},goog.createTrustedTypesPolicy=function(e){var t=null,n=goog.global.trustedTypes;if(!n||!n.createPolicy)return t;try{t=n.createPolicy(e,{createHTML:goog.identity_,createScript:goog.identity_,createScriptURL:goog.identity_})}catch(e){goog.logToConsole_(e.message)}return t},sre={Variables:function(){}},sre.Variables.VERSION="3.1.1",sre.Variables.LOCALES=["de","en","es","fr","nemeth"],sre.Variables.mathjaxVersion="3.0.0",sre.Variables.url="https://cdn.jsdelivr.net/npm/speech-rule-engine@"+sre.Variables.VERSION+"/lib/mathmaps",sre.Variables.WGXpath="https://cdn.jsdelivr.net/npm/wicked-good-xpath@1.3.0/dist/wgxpath.install.js",sre.SystemExternal=function(){},sre.SystemExternal.require=function(e){return"undefined"!=typeof process&&"undefined"!=typeof require?require(e):null},sre.SystemExternal.documentSupported=function(){return"undefined"!=typeof document},sre.SystemExternal.process=sre.SystemExternal.require("process"),sre.SystemExternal.xmldom=sre.SystemExternal.documentSupported()?window:sre.SystemExternal.require("xmldom-sre"),sre.SystemExternal.document=sre.SystemExternal.documentSupported()?document:(new sre.SystemExternal.xmldom.DOMImplementation).createDocument("","",0),sre.SystemExternal.xpath=sre.SystemExternal.documentSupported()?document:function(){var e={document:{},XPathResult:{}};return sre.SystemExternal.require("wicked-good-xpath").install(e),e.document.XPathResult=e.XPathResult,e.document}(),sre.SystemExternal.commander=sre.SystemExternal.documentSupported()?null:sre.SystemExternal.require("commander"),sre.SystemExternal.fs=sre.SystemExternal.documentSupported()?null:sre.SystemExternal.require("fs"),sre.SystemExternal.url=sre.Variables.url,sre.SystemExternal.jsonPath=function(){return(sre.SystemExternal.process&&"undefined"!=typeof global?sre.SystemExternal.process.env.SRE_JSON_PATH||global.SRE_JSON_PATH||sre.SystemExternal.process.cwd():sre.SystemExternal.url)+"/"}(),sre.SystemExternal.WGXpath=sre.Variables.WGXpath,sre.SystemExternal.wgxpath=null,sre.BrowserUtil={},sre.BrowserUtil.detectIE=function(){return"undefined"!=typeof window&&"ActiveXObject"in window&&"clipboardData"in window&&(sre.BrowserUtil.loadMapsForIE_(),sre.BrowserUtil.loadWGXpath_(),!0)},sre.BrowserUtil.detectEdge=function(){return"undefined"!=typeof window&&"MSGestureEvent"in window&&"chrome"in window&&null==window.chrome.loadTimes&&(document.evaluate=null,sre.BrowserUtil.loadWGXpath_(!0),!0)},sre.BrowserUtil.mapsForIE=null,sre.BrowserUtil.loadWGXpath_=function(e){sre.BrowserUtil.loadScript(sre.SystemExternal.WGXpath),sre.BrowserUtil.installWGXpath_(e)},sre.BrowserUtil.installWGXpath_=function(e,t){var n=t||1;"undefined"==typeof wgxpath&&10>n?setTimeout(function(){sre.BrowserUtil.installWGXpath_(e,n++)},200):10<=n||(sre.SystemExternal.wgxpath=wgxpath,e?sre.SystemExternal.wgxpath.install({document}):sre.SystemExternal.wgxpath.install(),sre.XpathUtil.xpathEvaluate=document.evaluate,sre.XpathUtil.xpathResult=XPathResult,sre.XpathUtil.createNSResolver=document.createNSResolver)},sre.BrowserUtil.loadMapsForIE_=function(){sre.BrowserUtil.loadScript(sre.SystemExternal.jsonPath+"mathmaps_ie.js")},sre.BrowserUtil.loadScript=function(e){var t=sre.SystemExternal.document.createElement("script");t.type="text/javascript",t.src=e,sre.SystemExternal.document.head?sre.SystemExternal.document.head.appendChild(t):sre.SystemExternal.document.body.appendChild(t)},sre.DynamicProperties=function(e,t){this.properties_=e,this.order_=t||Object.keys(e)},sre.DynamicProperties.prototype.getProperties=function(){return this.properties_},sre.DynamicProperties.prototype.getOrder=function(){return this.order_},sre.DynamicProperties.prototype.getAxes=function(){return this.order_},sre.DynamicProperties.prototype.getProperty=function(e){return this.properties_[e]},sre.DynamicProperties.prototype.updateProperties=function(e){this.properties_=e},sre.DynamicProperties.prototype.allProperties=function(){var e=[];return this.order_.forEach(goog.bind(function(t){e.push(this.getProperty(t).slice())},this)),e},sre.DynamicProperties.prototype.toString=function(){var e=[];return this.order_.forEach(goog.bind(function(t){e.push(t+": "+this.getProperty(t).toString())},this)),e.join(`
`)},sre.DynamicCstr=function(e,t){this.components_=e;var n,s,o={};for(n in e)s=e[n],o[n]=[s],sre.DynamicCstr.Values_.getInstance().add(n,s);sre.DynamicProperties.call(this,o,t)},goog.inherits(sre.DynamicCstr,sre.DynamicProperties),sre.DynamicCstr.prototype.getComponents=function(){return this.components_},sre.DynamicCstr.prototype.getValue=function(e){return this.components_[e]},sre.DynamicCstr.prototype.getValues=function(){var e=[];return this.order_.forEach(goog.bind(function(t){e.push(this.getValue(t))},this)),e},sre.DynamicCstr.prototype.allProperties=function(){for(var e,t,s=sre.DynamicCstr.superClass_.allProperties.call(this),n=0;t=s[n],e=this.order_[n];n++)e=this.getValue(e),-1===t.indexOf(e)&&t.unshift(e);return s},sre.DynamicCstr.prototype.toString=function(){return this.getValues().join(".")},sre.DynamicCstr.prototype.equal=function(e){var t,n,s,o=e.getAxes();if(this.order_.length!==o.length)return!1;for(t=0;n=o[t];t++)if(s=this.getValue(n),!s||e.getValue(n)!==s)return!1;return!0},sre.DynamicCstr.Axis={DOMAIN:"domain",STYLE:"style",LOCALE:"locale",TOPIC:"topic",MODALITY:"modality"},sre.DynamicCstr.Values_=function(){this.axisToValues=sre.DynamicCstr.Values_.makeAxisValueObject_()},goog.addSingletonGetter(sre.DynamicCstr.Values_),sre.DynamicCstr.Values_.prototype.add=function(e,t){this.axisToValues[e][t]=!0},sre.DynamicCstr.Values_.prototype.get=function(){var e,t={},n=sre.DynamicCstr.Values_.getInstance().axisToValues;for(e in n)t[e]=Object.keys(n[e]);return t},sre.DynamicCstr.Values_.makeAxisValueObject_=function(){var e,t={};for(e in sre.DynamicCstr.Axis)t[sre.DynamicCstr.Axis[e]]={};return t},sre.DynamicCstr.getAxisValues=function(){return sre.DynamicCstr.Values_.getInstance().get()},sre.DynamicCstr.DEFAULT_ORDER=[sre.DynamicCstr.Axis.LOCALE,sre.DynamicCstr.Axis.MODALITY,sre.DynamicCstr.Axis.DOMAIN,sre.DynamicCstr.Axis.STYLE,sre.DynamicCstr.Axis.TOPIC],sre.DynamicCstr.DEFAULT_VALUE="default",sre.DynamicCstr.DEFAULT_VALUES={},sre.DynamicCstr.DEFAULT_VALUES[sre.DynamicCstr.Axis.LOCALE]="en",sre.DynamicCstr.DEFAULT_VALUES[sre.DynamicCstr.Axis.DOMAIN]=sre.DynamicCstr.DEFAULT_VALUE,sre.DynamicCstr.DEFAULT_VALUES[sre.DynamicCstr.Axis.STYLE]=sre.DynamicCstr.DEFAULT_VALUE,sre.DynamicCstr.DEFAULT_VALUES[sre.DynamicCstr.Axis.TOPIC]=sre.DynamicCstr.DEFAULT_VALUE,sre.DynamicCstr.DEFAULT_VALUES[sre.DynamicCstr.Axis.MODALITY]="speech",sre.DynamicCstr.Parser=function(e){this.order_=e},sre.DynamicCstr.Parser.prototype.parse=function(e){e=e.split(".");var t,s,o,n={};if(e.length>this.order_.length)throw Error("Invalid dynamic constraint: "+n);for(t=0;s=this.order_[t],e.length;t++)o=e.shift(),n[s]=o;return new sre.DynamicCstr(n,this.order_.slice(0,t))},sre.DynamicCstr.Comparator=function(){},sre.DynamicCstr.Comparator.prototype.getReference=function(){},sre.DynamicCstr.Comparator.prototype.setReference=function(){},sre.DynamicCstr.Comparator.prototype.match=function(){},sre.DynamicCstr.Comparator.prototype.compare=function(){},sre.DynamicCstr.DefaultComparator=function(e,t){this.reference_=e,this.fallback_=t||new sre.DynamicProperties(e.getProperties(),e.getOrder()),this.order_=this.reference_.getOrder()},sre.DynamicCstr.DefaultComparator.prototype.getReference=function(){return this.reference_},sre.DynamicCstr.DefaultComparator.prototype.setReference=function(e,t){this.reference_=e,this.fallback_=t||new sre.DynamicProperties(e.getProperties(),e.getOrder()),this.order_=this.reference_.getOrder()},sre.DynamicCstr.DefaultComparator.prototype.match=function(e){var t=e.getAxes();return t.length===this.reference_.getAxes().length&&t.every(goog.bind(function(t){var n=e.getValue(t);return n===this.reference_.getValue(t)||-1!==this.fallback_.getProperty(t).indexOf(n)},this))},sre.DynamicCstr.DefaultComparator.prototype.compare=function(e,t){for(var n,s,o,i,a=!1,r=0;i=this.order_[r];r++){if(n=e.getValue(i),s=t.getValue(i),!a){if(o=this.reference_.getValue(i),o===n&&o!==s)return-1;if(o===s&&o!==n)return 1;if(o===n&&o===s)continue;o!==n&&o!==s&&(a=!0)}if(i=this.fallback_.getProperty(i),n=i.indexOf(n),s=i.indexOf(s),n<s)return-1;if(s<n)return 1}return 0},sre.DynamicCstr.DefaultComparator.prototype.toString=function(){return this.reference_.toString()+`
`+this.fallback_.toString()},sre.DynamicProperties.create=function(){for(var t=sre.DynamicCstr.DEFAULT_ORDER,n={},s=Array.prototype.slice.call(arguments,0),e=0,o=s.length,i=t.length;e<o&&e<i;e++)n[t[e]]=s[e];return new sre.DynamicProperties(n)},sre.DynamicCstr.create=function(){for(var t=sre.DynamicCstr.DEFAULT_ORDER,n={},s=Array.prototype.slice.call(arguments,0),e=0,o=s.length,i=t.length;e<o&&e<i;e++)n[t[e]]=s[e];return new sre.DynamicCstr(n)},sre.DynamicCstr.defaultCstr=function(){return sre.DynamicCstr.create.apply(null,sre.DynamicCstr.DEFAULT_ORDER.map(function(e){return sre.DynamicCstr.DEFAULT_VALUES[e]}))},sre.DynamicCstr.validOrder=function(e){var t=sre.DynamicCstr.DEFAULT_ORDER.slice();return e.every(function(e){return e=t.indexOf(e),-1!==e&&t.splice(e,1)})},sre.Engine=function(){this.evaluator=sre.Engine.defaultEvaluator,this.parser=this.defaultParser=new sre.DynamicCstr.Parser(sre.DynamicCstr.DEFAULT_ORDER),this.parsers={},this.dynamicCstr=sre.DynamicCstr.defaultCstr(),this.comparator=null,this.comparators={},this.domain=sre.DynamicCstr.DEFAULT_VALUES[sre.DynamicCstr.Axis.DOMAIN],this.style=sre.DynamicCstr.DEFAULT_VALUES[sre.DynamicCstr.Axis.STYLE],this.locale=sre.DynamicCstr.DEFAULT_VALUES[sre.DynamicCstr.Axis.LOCALE],this.modality=sre.DynamicCstr.DEFAULT_VALUES[sre.DynamicCstr.Axis.MODALITY],this.walker="Table",this.mode=sre.Engine.Mode.SYNC,this.speech=sre.Engine.Speech.NONE,this.structure=!1,this.ruleSets=[],this.cache=!0,this.markup=sre.Engine.Markup.NONE,this.isEdge=this.isIE=this.strict=!1,this.rate="100",this.pprint=!1,this.setupTests_=[],this.config=!1},goog.addSingletonGetter(sre.Engine),sre.Engine.personalityProps={PITCH:"pitch",RATE:"rate",VOLUME:"volume",PAUSE:"pause",JOIN:"join"},sre.Engine.Mode={SYNC:"sync",ASYNC:"async",HTTP:"http"},sre.Engine.Speech={NONE:"none",SHALLOW:"shallow",DEEP:"deep"},sre.Engine.Markup={NONE:"none",PUNCTUATION:"punctuation",SSML:"ssml",SSML_STEP:"ssml_step",ACSS:"acss",SABLE:"sable",VOICEXML:"voicexml"},sre.Engine.registerTest=function(e){sre.Engine.getInstance().setupTests_.push(e)},sre.Engine.isReady=function(){return sre.Engine.getInstance().setupTests_.every(function(e){return e()})},sre.Engine.prototype.setupBrowsers=function(){this.isIE=sre.BrowserUtil.detectIE(),this.isEdge=sre.BrowserUtil.detectEdge()},sre.Engine.prototype.getAxisValues=function(){return sre.DynamicCstr.getAxisValues()},sre.Engine.defaultEvaluator=function(e){return e},sre.Engine.prototype.getRate=function(){var e=parseInt(this.rate,10);return isNaN(e)?100:e},sre.Engine.Error=function(e){Error.call(this),this.message=e||"",this.name="SRE Error"},goog.inherits(sre.Engine.Error,Error),sre.Engine.BINARY_FEATURES=["strict","cache","structure","pprint"],sre.Engine.STRING_FEATURES="markup style domain speech walker locale modality rate".split(" "),sre.Engine.prototype.setDynamicCstr=function(e){if(e)for(var n,s=Object.keys(e),t=0;t<s.length;t++)n=s[t],-1!==sre.DynamicCstr.DEFAULT_ORDER.indexOf(n)&&(this[n]=e[n]);sre.Engine.DOMAIN_TO_STYLES[this.domain]=this.style,e=[this.locale,this.modality,this.domain,this.style].join("."),s=sre.DynamicProperties.create([sre.DynamicCstr.DEFAULT_VALUES[sre.DynamicCstr.Axis.LOCALE]],[sre.DynamicCstr.DEFAULT_VALUES[sre.DynamicCstr.Axis.MODALITY]],[sre.DynamicCstr.DEFAULT_VALUES[sre.DynamicCstr.Axis.DOMAIN]],[sre.DynamicCstr.DEFAULT_VALUES[sre.DynamicCstr.Axis.STYLE]]),t=this.comparators[this.domain],this.parser=(n=this.parsers[this.domain])||this.defaultParser,this.dynamicCstr=this.parser.parse(e),this.dynamicCstr.updateProperties(s.getProperties()),this.comparator=t?t():new sre.DynamicCstr.DefaultComparator(this.dynamicCstr)},sre.Engine.DOMAIN_TO_STYLES={mathspeak:"default",clearspeak:"default"},sre.BaseUtil={},sre.BaseUtil.removeEmpty=function(e){return e.filter(function(e){return e})},sre.BaseUtil.interleaveLists=function(e,t){for(var n=[];e.length||t.length;)e.length&&n.push(e.shift()),t.length&&n.push(t.shift());return n},sre.BaseUtil.setdifference=function(e,t){return e?t?e.filter(function(e){return 0>t.indexOf(e)}):e:[]},sre.BaseUtil.union=function(e,t){return e&&t?e.concat(sre.BaseUtil.setdifference(t,e)):e||t||[]},sre.BaseUtil.makePath=function(e){return e.match("/$")?e:e+"/"},sre.Debugger=function(){this.isActive_=!1,this.outputFunction_=console.info,this.stream_=null},goog.addSingletonGetter(sre.Debugger),sre.Debugger.prototype.init=function(e){e&&this.startDebugFile_(e),this.isActive_=!0},sre.Debugger.prototype.startDebugFile_=function(e){this.stream_=sre.SystemExternal.fs.createWriteStream(e),this.outputFunction_=goog.bind(function(){var e=Array.prototype.slice.call(arguments,0);this.stream_.write(e.join(" ")),this.stream_.write(`
`)},this),this.stream_.on("error",goog.bind(function(){console.info("Invalid log file. Debug information sent to console."),this.outputFunction_=console.info},this)),this.stream_.on("finish",function(){console.info("Finalizing debug file.")})},sre.Debugger.prototype.output_=function(e){this.outputFunction_.apply(console.info===this.outputFunction_?console:this.outputFunction_,["Speech Rule Engine Debugger:"].concat(e))},sre.Debugger.prototype.output=function(){this.isActive_&&this.output_(Array.prototype.slice.call(arguments,0))},sre.Debugger.prototype.generateOutput=function(e){this.isActive_&&this.output_(e.apply(e,[]))},sre.Debugger.prototype.exit=function(e){this.isActive_&&this.stream_&&this.stream_.end("","",e||function(){})},sre.Grammar=function(){this.parameters_={},this.corrections_={},this.preprocessors_={},this.stateStack_=[],this.currentFlags={}},goog.addSingletonGetter(sre.Grammar),sre.Grammar.ATTRIBUTE="grammar",sre.Grammar.prototype.clear=function(){this.parameters_={},this.stateStack_=[]},sre.Grammar.prototype.setParameter=function(e,t){var n=this.parameters_[e];return t?this.parameters_[e]=t:delete this.parameters_[e],n},sre.Grammar.prototype.getParameter=function(e){return this.parameters_[e]},sre.Grammar.prototype.setCorrection=function(e,t){this.corrections_[e]=t},sre.Grammar.prototype.setPreprocessor=function(e,t){this.preprocessors_[e]=t},sre.Grammar.prototype.getCorrection=function(e){return this.corrections_[e]},sre.Grammar.prototype.getState=function(){var e,t,n=[];for(e in this.parameters_)t=this.parameters_[e],n.push("string"==typeof t?e+":"+t:e);return n.join(" ")},sre.Grammar.prototype.pushState=function(e){for(var t in e)e[t]=this.setParameter(t,e[t]);this.stateStack_.push(e)},sre.Grammar.prototype.popState=function(){var e,t=this.stateStack_.pop();for(e in t)this.setParameter(e,t[e])},sre.Grammar.prototype.setAttribute=function(e){if(e&&e.nodeType===sre.DomUtil.NodeType.ELEMENT_NODE){var t=this.getState();t&&e.setAttribute(sre.Grammar.ATTRIBUTE,t)}},sre.Grammar.prototype.preprocess=function(e){return this.runProcessors_(e,this.preprocessors_)},sre.Grammar.prototype.correct=function(e){return this.runProcessors_(e,this.corrections_)},sre.Grammar.prototype.runProcessors_=function(e,t){for(s in this.parameters_){var n,s,o=t[s];o&&(n=this.parameters_[s],e=!0===n?o(e):o(e,n))}return e},sre.Grammar.translateString_=function(e){e=sre.Grammar.prepareUnit_(e);var t=sre.Engine.getInstance();return e=t.evaluator(e,t.dynamicCstr)||e,sre.Grammar.cleanUnit_(e)},sre.Grammar.prepareUnit_=function(e){var t=e.match(/:unit$/);return t?e.slice(0,t.index).replace(/\s+/g," ")+e.slice(t.index):e},sre.Grammar.cleanUnit_=function(e){return e.match(/:unit$/)?(sre.Grammar.getInstance().setParameter("plural",!1),e.replace(/:unit$/,"")):e},sre.Grammar.prototype.apply=function(e,t){return this.currentFlags=t||{},e=this.currentFlags.adjust||this.currentFlags.preprocess?sre.Grammar.getInstance().preprocess(e):e,(this.parameters_.translate||this.currentFlags.translate)&&(e=sre.Grammar.translateString_(e)),e=this.currentFlags.adjust||this.currentFlags.correct?sre.Grammar.getInstance().correct(e):e,this.currentFlags={},e},sre.Grammar.parseState=function(e){t={},e=e.split(" ");for(var t,n,o,s=0,i=e.length;s<i;s++)n=e[s].split(":"),o=n[1],t[n[0]]=o||!0;return t},sre.Grammar.parseInput=function(e){t={},e=e.split(":");for(var t,n,s,o=0,i=e.length;o<i;o++)s=e[o].split("="),n=s[0].trim(),s[1]?t[n]=s[1].trim():n.match(/^!/)?t[n.slice(1)]=!1:t[n]=!0;return t},sre.Grammar.correctFont_=function(e,t){return!t||!e?e:(t=sre.Messages.MS_FUNC.FONT_REGEXP(sre.Locale.localFont(t)),e.replace(t,""))},sre.Grammar.addAnnotation_=function(e,t){return e+":"+t},sre.Grammar.noTranslateText_=function(e){return e.match(new RegExp("^["+sre.Messages.REGEXP.TEXT+"]+$"))&&(sre.Grammar.getInstance().currentFlags.translate=!1),e},sre.Grammar.getInstance().setCorrection("ignoreFont",sre.Grammar.correctFont_),sre.Grammar.getInstance().setPreprocessor("annotation",sre.Grammar.addAnnotation_),sre.Grammar.getInstance().setPreprocessor("noTranslateText",sre.Grammar.noTranslateText_),sre.Grammar.getInstance().setCorrection("ignoreCaps",sre.Grammar.correctFont_),sre.XpathUtil={},sre.XpathUtil.xpathSupported=function(){return"undefined"!=typeof XPathResult},sre.XpathUtil.currentDocument=null,sre.XpathUtil.xpathEvaluate=sre.XpathUtil.xpathSupported()?document.evaluate:sre.SystemExternal.xpath.evaluate,sre.XpathUtil.xpathResult=sre.XpathUtil.xpathSupported()?XPathResult:sre.SystemExternal.xpath.XPathResult,sre.XpathUtil.createNSResolver=sre.XpathUtil.xpathSupported()?document.createNSResolver:sre.SystemExternal.xpath.createNSResolver,sre.XpathUtil.nameSpaces_={xhtml:"http://www.w3.org/1999/xhtml",mathml:"http://www.w3.org/1998/Math/MathML",mml:"http://www.w3.org/1998/Math/MathML",svg:"http://www.w3.org/2000/svg"},sre.XpathUtil.resolveNameSpace=function(e){return sre.XpathUtil.nameSpaces_[e]||null},sre.XpathUtil.resolver_=function(){this.lookupNamespaceURI=sre.XpathUtil.resolveNameSpace},sre.XpathUtil.evaluateXpath_=function(e,t,n){var s=sre.Engine.getInstance();return s.mode!==sre.Engine.Mode.HTTP||s.isIE||s.isEdge?sre.XpathUtil.xpathEvaluate(e,t,new sre.XpathUtil.resolver_,n,null):sre.XpathUtil.currentDocument.evaluate(e,t,sre.XpathUtil.resolveNameSpace,n,null)},sre.XpathUtil.evalXPath=function(e,t){try{var n=sre.XpathUtil.evaluateXpath_(e,t,sre.XpathUtil.xpathResult.ORDERED_NODE_ITERATOR_TYPE)}catch{return[]}e=[];for(t=n.iterateNext();t;t=n.iterateNext())e.push(t);return e},sre.XpathUtil.getLeafNodes=function(e){return sre.XpathUtil.evalXPath(".//*[count(*)=0]",e)},sre.XpathUtil.evaluateBoolean=function(e,t){try{var n=sre.XpathUtil.evaluateXpath_(e,t,sre.XpathUtil.xpathResult.BOOLEAN_TYPE)}catch{return!1}return n.booleanValue},sre.XpathUtil.evaluateString=function(e,t){try{var n=sre.XpathUtil.evaluateXpath_(e,t,sre.XpathUtil.xpathResult.STRING_TYPE)}catch{return""}return n.stringValue},sre.DomUtil={},sre.DomUtil.toArray=function(e){for(var n=[],t=0,s=e.length;t<s;t++)n.push(e[t]);return n},sre.DomUtil.trimInput_=function(e){return e=e.replace(/&nbsp;/g," "),e.replace(/>[ \f\n\r\t\v\u200b]+</g,"><").trim()},sre.DomUtil.XML_ENTITIES={"&lt;":!0,"&gt;":!0,"&amp;":!0,"&quot;":!0,"&apos;":!0},sre.DomUtil.parseInput=function(e,t){t=t||sre.Engine.Error;var n,s,o=new sre.SystemExternal.xmldom.DOMParser;if(e=sre.DomUtil.trimInput_(e),s=!!e.match(/&(?!lt|gt|amp|quot|apos)\w+;/g),!e)throw new t("Empty input!");try{return n=o.parseFromString(e,s?"text/html":"text/xml"),sre.Engine.getInstance().mode===sre.Engine.Mode.HTTP?(sre.XpathUtil.currentDocument=n,s?n.body.childNodes[0]:n.documentElement):n.documentElement}catch(e){throw new t("Illegal input: "+e.message)}},sre.DomUtil.NodeType={ELEMENT_NODE:1,ATTRIBUTE_NODE:2,TEXT_NODE:3,CDATA_SECTION_NODE:4,ENTITY_REFERENCE_NODE:5,ENTITY_NODE:6,PROCESSING_INSTRUCTION_NODE:7,COMMENT_NODE:8,DOCUMENT_NODE:9,DOCUMENT_TYPE_NODE:10,DOCUMENT_FRAGMENT_NODE:11,NOTATION_NODE:12},sre.DomUtil.replaceNode=function(e,t){e.parentNode&&(e.parentNode.insertBefore(t,e),e.parentNode.removeChild(e))},sre.DomUtil.createElement=function(e){return sre.SystemExternal.document.createElement(e)},sre.DomUtil.createElementNS=function(e,t){return sre.SystemExternal.document.createElementNS(e,t)},sre.DomUtil.createTextNode=function(e){return sre.SystemExternal.document.createTextNode(e)},sre.DomUtil.formatXml=function(e){var t,n,s,o,a="",i=/(>)(<)(\/*)/g;e=e.replace(i,"$1\r\n$2$3"),s=0,e=e.split(`
`),i=/(\.)*(<)(\/*)/g;for(e=e.map(function(e){return e.replace(i,"$1\r\n$2$3").split(`
`)}).reduce(function(e,t){return e.concat(t)},[]);e.length;)t=e.shift(),t&&(o=0,t.match(/^<\w[^>/]*>[^>]+$/)?(n=sre.DomUtil.matchingStartEnd_(t,e[0]),n[0]?n[1]?(t+=e.shift().slice(0,-n[1].length),n[1].trim()&&e.unshift(n[1])):t+=e.shift():o=1):t.match(/^<\/\w/)?0!=s&&--s:t.match(/^<\w[^>]*[^/]>.*$/)?o=1:t.match(/^<\w[^>]*\/>.+$/)?(n=t.indexOf(">")+1,t.slice(n).trim()&&e.unshift(),t=t.slice(0,n)):o=0,a+=Array(s+1).join("  ")+t+`
`,s+=o);return a},sre.DomUtil.matchingStartEnd_=function(e,t){return t?(e=e.match(/^<([^> ]+).*>/),t=t.match(/^<\/([^>]+)>(.*)/),e&&t&&e[1]===t[1]?[!0,t[2]]:[!1,""]):[!1,""]},sre.DomUtil.dataAttribute=function(e){return e.match(/^data-/)&&(e=e.substr(5)),e.replace(/-([a-z])/g,function(e,t){return t.toUpperCase()})},sre.DomUtil.getDataAttribute=function(e,t){return e.dataset?e.dataset[sre.DomUtil.dataAttribute(t)]:e.getAttribute(t)},sre.DomUtil.querySelectorAllByAttr=function(e,t){return e.querySelectorAll?sre.DomUtil.toArray(e.querySelectorAll("["+t+"]")):sre.XpathUtil.evalXPath(".//*[@"+t+"]",e)},sre.DomUtil.querySelectorAllByAttrValue=function(e,t,n){return e.querySelectorAll?sre.DomUtil.toArray(e.querySelectorAll("["+t+'="'+n+'"]')):sre.XpathUtil.evalXPath(".//*[@"+t+'="'+n+'"]',e)},sre.DomUtil.querySelectorAll=function(e,t){return e.querySelectorAll?sre.DomUtil.toArray(e.querySelectorAll(t)):sre.XpathUtil.evalXPath(".//"+t,e)},sre.DomUtil.tagName=function(e){return e.tagName.toUpperCase()},sre.Numbers={},sre.Numbers.identityTransformer_=function(e){return e.toString()},sre.Numbers.pluralTransformer_=function(e){return e.toString()},sre.Numbers.NUMBERS={wordOrdinal:sre.Numbers.identityTransformer_,simpleOrdinal:sre.Numbers.identityTransformer_,numberToWords:sre.Numbers.identityTransformer_,numberToOrdinal:sre.Numbers.pluralTransformer_,vulgarSep:" ",numSep:" "},sre.Messages={},sre.Messages.MS={START:"",FRAC_V:"",FRAC_B:"",FRAC_S:"",END:"",FRAC_OVER:"",TWICE:"",NEST_FRAC:"",ENDFRAC:"",SUPER:"",SUB:"",SUP:"",SUPERSCRIPT:"",SUBSCRIPT:"",BASELINE:"",BASE:"",NESTED:"",NEST_ROOT:"",STARTROOT:"",ENDROOT:"",ROOTINDEX:"",ROOT:"",INDEX:"",UNDER:"",UNDERSCRIPT:"",OVER:"",OVERSCRIPT:""},sre.Messages.MS_FUNC={FRAC_NEST_DEPTH:function(){return!1},RADICAL_NEST_DEPTH:function(){return""},COMBINE_ROOT_INDEX:function(e){return e}},sre.Messages.MS_ROOT_INDEX={},sre.Messages.FONT={bold:"","bold-fraktur":"","bold-italic":"","bold-script":"",caligraphic:"","caligraphic-bold":"","double-struck":"","double-struck-italic":"",fraktur:"",italic:"",monospace:"",normal:"",oldstyle:"","oldstyle-bold":"",script:"","sans-serif":"","sans-serif-italic":"","sans-serif-bold":"","sans-serif-bold-italic":"",unknown:""},sre.Messages.EMBELLISH={super:"",sub:"",circled:"",parenthesized:"",period:"","negative-circled":"","double-circled":"","circled-sans-serif":"","negative-circled-sans-serif":"",blackboard:"",comma:"",squared:"","negative-squared":""},sre.Messages.ROLE={addition:"",multiplication:"",subtraction:"",division:"",equality:"",inequality:"",element:"",arrow:"",determinant:"",rowvector:"",binomial:"",squarematrix:"","set empty":"","set extended":"","set singleton":"","set collection":"",label:"",multiline:"",matrix:"",vector:"",cases:"",table:"",unknown:""},sre.Messages.ENCLOSE={longdiv:"",actuarial:"",radical:"",box:"",roundedbox:"",circle:"",left:"",right:"",top:"",bottom:"",updiagonalstrike:"",downdiagonalstrike:"",verticalstrike:"",horizontalstrike:"",madruwb:"",updiagonalarrow:"",phasorangle:"",unknown:""},sre.Messages.NAVIGATE={COLLAPSIBLE:"",EXPANDABLE:"",LEVEL:""},sre.Messages.REGEXP={TEXT:"a-zA-Z",NUMBER:"",DECIMAL_MARK:"",DIGIT_GROUP:"",JOINER_SUBSUPER:" "},sre.Messages.PLURAL_UNIT={},sre.Messages.PLURAL=function(e){return/.*s$/.test(e)?e:e+"s"},sre.Messages.UNIT_TIMES="",sre.Messages.NUMBERS=sre.Numbers.NUMBERS,sre.Messages.ALPHABETS={latinSmall:[],latinCap:[],greekSmall:[],greekCap:[]},sre.Messages.ALPHABET_PREFIXES={capPrefix:{default:""},smallPrefix:{default:""},digitPrefix:{default:""}},sre.Messages.identityTransformer_=function(e){return e.toString()},sre.Messages.ALPHABET_TRANSFORMERS={digit:{default:sre.Messages.identityTransformer_},letter:{default:sre.Messages.identityTransformer_}},sre.Messages.ALPHABET_COMBINER=function(e){return e},sre.NumbersUtil={},sre.NumbersUtil.ordinalCounter=function(e,t){var n=0;return function(){return sre.Messages.NUMBERS.simpleOrdinal(++n)+" "+t}},sre.NumbersUtil.convertVulgarFraction_=function(e){if(!e.childNodes||!e.childNodes[0]||!e.childNodes[0].childNodes||2>e.childNodes[0].childNodes.length||e.childNodes[0].childNodes[0].tagName!==sre.SemanticAttr.Type.NUMBER||e.childNodes[0].childNodes[0].getAttribute("role")!==sre.SemanticAttr.Role.INTEGER||e.childNodes[0].childNodes[1].tagName!==sre.SemanticAttr.Type.NUMBER||e.childNodes[0].childNodes[1].getAttribute("role")!==sre.SemanticAttr.Role.INTEGER)return{convertible:!1,content:e.textContent};t=e.childNodes[0].childNodes[1].textContent,e=e.childNodes[0].childNodes[0].textContent;var t,n=Number(t),s=Number(e);return isNaN(n)||isNaN(s)?{convertible:!1,content:e+" "+sre.Messages.MS.FRAC_OVER+" "+t}:{convertible:!0,enumerator:s,denominator:n}},sre.NumbersUtil.vulgarFraction=function(e){return e=sre.NumbersUtil.convertVulgarFraction_(e),e.convertible&&e.enumerator&&e.denominator?sre.Messages.NUMBERS.numberToWords(e.enumerator)+sre.Messages.NUMBERS.vulgarSep+sre.Messages.NUMBERS.numberToOrdinal(e.denominator,1!==e.enumerator):e.content||""},sre.NumbersUtil.vulgarFractionSmall=function(e,t,n){var s=sre.NumbersUtil.convertVulgarFraction_(e);return!!s.convertible&&(e=s.enumerator,s=s.denominator,0<e&&e<t&&0<s&&s<n)},sre.NumbersUtil.ordinalPosition=function(e){var t=sre.DomUtil.toArray(e.parentNode.childNodes);return sre.Messages.NUMBERS.simpleOrdinal(t.indexOf(e)+1).toString()},sre.SemanticUtil=function(){},sre.SemanticUtil.objectsToKeys=function(e){e=Array.prototype.slice.call(arguments,0);var t=[];return t.concat.apply(t,e.map(Object.keys))},sre.SemanticUtil.objectsToValues=function(e){e=Array.prototype.slice.call(arguments,0);var t=[];return e.forEach(function(e){for(var n in e)t.push(e[n])}),t},sre.SemanticUtil.unicodeToNumber=function(e){if(!e||2<e.length)return null;if(2==e.length){var t=e.charCodeAt(0);return e=e.charCodeAt(1),55296<=t&&56319>=t&&!isNaN(e)?1024*(t-55296)+(e-56320)+65536:null}return e.charCodeAt(0)},sre.SemanticUtil.numberToUnicode=function(e){return 65536>e?String.fromCharCode(e):String.fromCharCode((e-65536)/1024+55296,(e-65536)%1024+56320)},sre.SemanticUtil.splitUnicode=function(e){e=e.split("");for(var t,s=[],n=0;t=e[n];n++)"\ud800"<=t&&"\udbff">=t&&e[n+1]?s.push(t+e[++n]):s.push(t);return s},sre.SemanticUtil.LEAFTAGS=["MO","MI","MN","MTEXT","MS"],sre.SemanticUtil.IGNORETAGS="MERROR MPHANTOM MSPACE MALIGNGROUP MALIGNMARK MPRESCRIPTS ANNOTATION ANNOTATION-XML".split(" "),sre.SemanticUtil.EMPTYTAGS="MATH MROW MPADDED MACTION NONE MSTYLE SEMANTICS".split(" "),sre.SemanticUtil.hasMathTag=function(e){return!!e&&"MATH"===sre.DomUtil.tagName(e)},sre.SemanticUtil.hasIgnoreTag=function(e){return!!e&&-1!==sre.SemanticUtil.IGNORETAGS.indexOf(sre.DomUtil.tagName(e))},sre.SemanticUtil.hasEmptyTag=function(e){return!!e&&-1!==sre.SemanticUtil.EMPTYTAGS.indexOf(sre.DomUtil.tagName(e))},sre.SemanticUtil.purgeNodes=function(e){for(var t,n,s=[],o=0;t=e[o];o++)n=sre.DomUtil.tagName(t),-1!=sre.SemanticUtil.IGNORETAGS.indexOf(n)||-1!=sre.SemanticUtil.EMPTYTAGS.indexOf(n)&&0==t.childNodes.length||s.push(t);return s},sre.SemanticUtil.isZeroLength=function(e){return!!e&&(-1!=="negativeveryverythinmathspace negativeverythinmathspace negativethinmathspace negativemediummathspace negativethickmathspace negativeverythickmathspace negativeveryverythickmathspace".split(" ").indexOf(e)||!!(e=e.match(/[0-9.]+/))&&0===parseFloat(e))},sre.SemanticUtil.directSpeechKeys=["aria-label","exact-speech","alt"],sre.SemanticUtil.addAttributes=function(e,t){if(t.hasAttributes()){t=t.attributes;for(var s,n=t.length-1;0<=n;n--)s=t[n].name,s.match(/^ext/)&&(e.attributes[s]=t[n].value),-1!==sre.SemanticUtil.directSpeechKeys.indexOf(s)&&(e.attributes["ext-speech"]=t[n].value)}},sre.SemanticAttr=function(){this.generalPunctuations='!"#%&:;?@\\¡§¶¿‗†‡•‣․‥‧‰‱‸※‼‽‾⁁⁂⁃⁇⁈⁉⁋⁌⁍⁎⁏⁐⁑⁓⁕⁖⁘⁙⁚⁛⁜⁝⁞︐︓︔︕︖︰﹅﹆﹉﹊﹋﹌﹐﹔﹕﹖﹗﹟﹠﹡﹨﹪﹫！＂＃％＆＇＊，／：；？＠＼'.split(""),this.colons=[":","：","﹕"],this.invisibleComma_=sre.SemanticUtil.numberToUnicode(8291),this.commas=[",",this.invisibleComma_],this.ellipses="…⋮⋯⋰⋱︙".split(""),this.fullStops=[".","﹒","．"],this.dashes="‒–—―〜︱︲﹘".split(""),this.primes="'′″‴‵‶‷⁗".split(""),this.degrees=["°"],this.openClosePairs={"(":")","[":"]","{":"}","⁅":"⁆","〈":"〉","❨":"❩","❪":"❫","❬":"❭","❮":"❯","❰":"❱","❲":"❳","❴":"❵","⟅":"⟆","⟦":"⟧","⟨":"⟩","⟪":"⟫","⟬":"⟭","⟮":"⟯","⦃":"⦄","⦅":"⦆","⦇":"⦈","⦉":"⦊","⦋":"⦌","⦍":"⦎","⦏":"⦐","⦑":"⦒","⦓":"⦔","⦕":"⦖","⦗":"⦘","⧘":"⧙","⧚":"⧛","⧼":"⧽","⸢":"⸣","⸤":"⸥","⸦":"⸧","⸨":"⸩","〈":"〉","《":"》","「":"」","『":"』","【":"】","〔":"〕","〖":"〗","〘":"〙","〚":"〛","〝":"〞","﴾":"﴿","︗":"︘","﹙":"﹚","﹛":"﹜","﹝":"﹞","（":"）","［":"］","｛":"｝","｟":"｠","｢":"｣","⌈":"⌉","⌊":"⌋","⌌":"⌍","⌎":"⌏","⌜":"⌝","⌞":"⌟","⎛":"⎞","⎜":"⎟","⎝":"⎠","⎡":"⎤","⎢":"⎥","⎣":"⎦","⎧":"⎫","⎨":"⎬","⎩":"⎭","⎰":"⎱","⎸":"⎹"},this.topBottomPairs={"⎴":"⎵","⏜":"⏝","⏞":"⏟","⏠":"⏡","︵":"︶","︷":"︸","︹":"︺","︻":"︼","︽":"︾","︿":"﹀","﹁":"﹂","﹃":"﹄","﹇":"﹈"},this.leftFences=sre.SemanticUtil.objectsToKeys(this.openClosePairs),this.rightFences=sre.SemanticUtil.objectsToValues(this.openClosePairs),this.rightFences.push("〟"),this.topFences=sre.SemanticUtil.objectsToKeys(this.topBottomPairs),this.bottomFences=sre.SemanticUtil.objectsToValues(this.topBottomPairs),this.neutralFences="|¦‖❘⦀⫴￤｜∣".split(""),this.allFences=this.neutralFences.concat(this.leftFences,this.rightFences,this.topFences,this.bottomFences),this.capitalLatin="ABCDEFGHIJKLMNOPQRSTUVWXYZ".split(""),this.smallLatin="abcdefghijklmnopqrstuvwxyzıȷ".split(""),this.capitalLatinFullWidth="ＡＢＣＤＥＦＧＨＩＪＫＬＭＮＯＰＱＲＳＴＵＶＷＸＹＺ".split(""),this.smallLatinFullWidth="ａｂｃｄｅｆｇｈｉｊｋｌｍｎｏｐｑｒｓｔｕｖｗｘｙｚ".split(""),this.capitalLatinBold="\ud835\udc00 \ud835\udc01 \ud835\udc02 \ud835\udc03 \ud835\udc04 \ud835\udc05 \ud835\udc06 \ud835\udc07 \ud835\udc08 \ud835\udc09 \ud835\udc0a \ud835\udc0b \ud835\udc0c \ud835\udc0d \ud835\udc0e \ud835\udc0f \ud835\udc10 \ud835\udc11 \ud835\udc12 \ud835\udc13 \ud835\udc14 \ud835\udc15 \ud835\udc16 \ud835\udc17 \ud835\udc18 \ud835\udc19".split(" "),this.smallLatinBold="\ud835\udc1a \ud835\udc1b \ud835\udc1c \ud835\udc1d \ud835\udc1e \ud835\udc1f \ud835\udc20 \ud835\udc21 \ud835\udc22 \ud835\udc23 \ud835\udc24 \ud835\udc25 \ud835\udc26 \ud835\udc27 \ud835\udc28 \ud835\udc29 \ud835\udc2a \ud835\udc2b \ud835\udc2c \ud835\udc2d \ud835\udc2e \ud835\udc2f \ud835\udc30 \ud835\udc31 \ud835\udc32 \ud835\udc33".split(" "),this.capitalLatinItalic="\ud835\udc34 \ud835\udc35 \ud835\udc36 \ud835\udc37 \ud835\udc38 \ud835\udc39 \ud835\udc3a \ud835\udc3b \ud835\udc3c \ud835\udc3d \ud835\udc3e \ud835\udc3f \ud835\udc40 \ud835\udc41 \ud835\udc42 \ud835\udc43 \ud835\udc44 \ud835\udc45 \ud835\udc46 \ud835\udc47 \ud835\udc48 \ud835\udc49 \ud835\udc4a \ud835\udc4b \ud835\udc4c \ud835\udc4d".split(" "),this.smallLatinItalic="\ud835\udc4e \ud835\udc4f \ud835\udc50 \ud835\udc51 \ud835\udc52 \ud835\udc53 \ud835\udc54 ℎ \ud835\udc56 \ud835\udc57 \ud835\udc58 \ud835\udc59 \ud835\udc5a \ud835\udc5b \ud835\udc5c \ud835\udc5d \ud835\udc5e \ud835\udc5f \ud835\udc60 \ud835\udc61 \ud835\udc62 \ud835\udc63 \ud835\udc64 \ud835\udc65 \ud835\udc66 \ud835\udc67 \ud835\udea4 \ud835\udea5".split(" "),this.capitalLatinBoldItalic="\ud835\udc68 \ud835\udc69 \ud835\udc6a \ud835\udc6b \ud835\udc6c \ud835\udc6d \ud835\udc6e \ud835\udc6f \ud835\udc70 \ud835\udc71 \ud835\udc72 \ud835\udc73 \ud835\udc74 \ud835\udc75 \ud835\udc76 \ud835\udc77 \ud835\udc78 \ud835\udc79 \ud835\udc7a \ud835\udc7b \ud835\udc7c \ud835\udc7d \ud835\udc7e \ud835\udc7f \ud835\udc80 \ud835\udc81".split(" "),this.smallLatinBoldItalic="\ud835\udc82 \ud835\udc83 \ud835\udc84 \ud835\udc85 \ud835\udc86 \ud835\udc87 \ud835\udc88 \ud835\udc89 \ud835\udc8a \ud835\udc8b \ud835\udc8c \ud835\udc8d \ud835\udc8e \ud835\udc8f \ud835\udc90 \ud835\udc91 \ud835\udc92 \ud835\udc93 \ud835\udc94 \ud835\udc95 \ud835\udc96 \ud835\udc97 \ud835\udc98 \ud835\udc99 \ud835\udc9a \ud835\udc9b".split(" "),this.capitalLatinScript="\ud835\udc9c ℬ \ud835\udc9e \ud835\udc9f ℰ ℱ \ud835\udca2 ℋ ℐ \ud835\udca5 \ud835\udca6 ℒ ℳ \ud835\udca9 \ud835\udcaa \ud835\udcab \ud835\udcac ℛ \ud835\udcae \ud835\udcaf \ud835\udcb0 \ud835\udcb1 \ud835\udcb2 \ud835\udcb3 \ud835\udcb4 \ud835\udcb5 ℘".split(" "),this.smallLatinScript="\ud835\udcb6 \ud835\udcb7 \ud835\udcb8 \ud835\udcb9 ℯ \ud835\udcbb ℊ \ud835\udcbd \ud835\udcbe \ud835\udcbf \ud835\udcc0 \ud835\udcc1 \ud835\udcc2 \ud835\udcc3 ℴ \ud835\udcc5 \ud835\udcc6 \ud835\udcc7 \ud835\udcc8 \ud835\udcc9 \ud835\udcca \ud835\udccb \ud835\udccc \ud835\udccd \ud835\udcce \ud835\udccf ℓ".split(" "),this.capitalLatinBoldScript="\ud835\udcd0 \ud835\udcd1 \ud835\udcd2 \ud835\udcd3 \ud835\udcd4 \ud835\udcd5 \ud835\udcd6 \ud835\udcd7 \ud835\udcd8 \ud835\udcd9 \ud835\udcda \ud835\udcdb \ud835\udcdc \ud835\udcdd \ud835\udcde \ud835\udcdf \ud835\udce0 \ud835\udce1 \ud835\udce2 \ud835\udce3 \ud835\udce4 \ud835\udce5 \ud835\udce6 \ud835\udce7 \ud835\udce8 \ud835\udce9".split(" "),this.smallLatinBoldScript="\ud835\udcea \ud835\udceb \ud835\udcec \ud835\udced \ud835\udcee \ud835\udcef \ud835\udcf0 \ud835\udcf1 \ud835\udcf2 \ud835\udcf3 \ud835\udcf4 \ud835\udcf5 \ud835\udcf6 \ud835\udcf7 \ud835\udcf8 \ud835\udcf9 \ud835\udcfa \ud835\udcfb \ud835\udcfc \ud835\udcfd \ud835\udcfe \ud835\udcff \ud835\udd00 \ud835\udd01 \ud835\udd02 \ud835\udd03".split(" "),this.capitalLatinFraktur="\ud835\udd04 \ud835\udd05 ℭ \ud835\udd07 \ud835\udd08 \ud835\udd09 \ud835\udd0a ℌ ℑ \ud835\udd0d \ud835\udd0e \ud835\udd0f \ud835\udd10 \ud835\udd11 \ud835\udd12 \ud835\udd13 \ud835\udd14 ℜ \ud835\udd16 \ud835\udd17 \ud835\udd18 \ud835\udd19 \ud835\udd1a \ud835\udd1b \ud835\udd1c ℨ".split(" "),this.smallLatinFraktur="\ud835\udd1e \ud835\udd1f \ud835\udd20 \ud835\udd21 \ud835\udd22 \ud835\udd23 \ud835\udd24 \ud835\udd25 \ud835\udd26 \ud835\udd27 \ud835\udd28 \ud835\udd29 \ud835\udd2a \ud835\udd2b \ud835\udd2c \ud835\udd2d \ud835\udd2e \ud835\udd2f \ud835\udd30 \ud835\udd31 \ud835\udd32 \ud835\udd33 \ud835\udd34 \ud835\udd35 \ud835\udd36 \ud835\udd37".split(" "),this.capitalLatinDoubleStruck="\ud835\udd38 \ud835\udd39 ℂ \ud835\udd3b \ud835\udd3c \ud835\udd3d \ud835\udd3e ℍ \ud835\udd40 \ud835\udd41 \ud835\udd42 \ud835\udd43 \ud835\udd44 ℕ \ud835\udd46 ℙ ℚ ℝ \ud835\udd4a \ud835\udd4b \ud835\udd4c \ud835\udd4d \ud835\udd4e \ud835\udd4f \ud835\udd50 ℤ".split(" "),this.smallLatinDoubleStruck="\ud835\udd52 \ud835\udd53 \ud835\udd54 \ud835\udd55 \ud835\udd56 \ud835\udd57 \ud835\udd58 \ud835\udd59 \ud835\udd5a \ud835\udd5b \ud835\udd5c \ud835\udd5d \ud835\udd5e \ud835\udd5f \ud835\udd60 \ud835\udd61 \ud835\udd62 \ud835\udd63 \ud835\udd64 \ud835\udd65 \ud835\udd66 \ud835\udd67 \ud835\udd68 \ud835\udd69 \ud835\udd6a \ud835\udd6b".split(" "),this.capitalLatinBoldFraktur="\ud835\udd6c \ud835\udd6d \ud835\udd6e \ud835\udd6f \ud835\udd70 \ud835\udd71 \ud835\udd72 \ud835\udd73 \ud835\udd74 \ud835\udd75 \ud835\udd76 \ud835\udd77 \ud835\udd78 \ud835\udd79 \ud835\udd7a \ud835\udd7b \ud835\udd7c \ud835\udd7d \ud835\udd7e \ud835\udd7f \ud835\udd80 \ud835\udd81 \ud835\udd82 \ud835\udd83 \ud835\udd84 \ud835\udd85".split(" "),this.smallLatinBoldFraktur="\ud835\udd86 \ud835\udd87 \ud835\udd88 \ud835\udd89 \ud835\udd8a \ud835\udd8b \ud835\udd8c \ud835\udd8d \ud835\udd8e \ud835\udd8f \ud835\udd90 \ud835\udd91 \ud835\udd92 \ud835\udd93 \ud835\udd94 \ud835\udd95 \ud835\udd96 \ud835\udd97 \ud835\udd98 \ud835\udd99 \ud835\udd9a \ud835\udd9b \ud835\udd9c \ud835\udd9d \ud835\udd9e \ud835\udd9f".split(" "),this.capitalLatinSansSerif="\ud835\udda0 \ud835\udda1 \ud835\udda2 \ud835\udda3 \ud835\udda4 \ud835\udda5 \ud835\udda6 \ud835\udda7 \ud835\udda8 \ud835\udda9 \ud835\uddaa \ud835\uddab \ud835\uddac \ud835\uddad \ud835\uddae \ud835\uddaf \ud835\uddb0 \ud835\uddb1 \ud835\uddb2 \ud835\uddb3 \ud835\uddb4 \ud835\uddb5 \ud835\uddb6 \ud835\uddb7 \ud835\uddb8 \ud835\uddb9".split(" "),this.smallLatinSansSerif="\ud835\uddba \ud835\uddbb \ud835\uddbc \ud835\uddbd \ud835\uddbe \ud835\uddbf \ud835\uddc0 \ud835\uddc1 \ud835\uddc2 \ud835\uddc3 \ud835\uddc4 \ud835\uddc5 \ud835\uddc6 \ud835\uddc7 \ud835\uddc8 \ud835\uddc9 \ud835\uddca \ud835\uddcb \ud835\uddcc \ud835\uddcd \ud835\uddce \ud835\uddcf \ud835\uddd0 \ud835\uddd1 \ud835\uddd2 \ud835\uddd3".split(" "),this.capitalLatinSansSerifBold="\ud835\uddd4 \ud835\uddd5 \ud835\uddd6 \ud835\uddd7 \ud835\uddd8 \ud835\uddd9 \ud835\uddda \ud835\udddb \ud835\udddc \ud835\udddd \ud835\uddde \ud835\udddf \ud835\udde0 \ud835\udde1 \ud835\udde2 \ud835\udde3 \ud835\udde4 \ud835\udde5 \ud835\udde6 \ud835\udde7 \ud835\udde8 \ud835\udde9 \ud835\uddea \ud835\uddeb \ud835\uddec \ud835\udded".split(" "),this.smallLatinSansSerifBold="\ud835\uddee \ud835\uddef \ud835\uddf0 \ud835\uddf1 \ud835\uddf2 \ud835\uddf3 \ud835\uddf4 \ud835\uddf5 \ud835\uddf6 \ud835\uddf7 \ud835\uddf8 \ud835\uddf9 \ud835\uddfa \ud835\uddfb \ud835\uddfc \ud835\uddfd \ud835\uddfe \ud835\uddff \ud835\ude00 \ud835\ude01 \ud835\ude02 \ud835\ude03 \ud835\ude04 \ud835\ude05 \ud835\ude06 \ud835\ude07".split(" "),this.capitalLatinSansSerifItalic="\ud835\ude08 \ud835\ude09 \ud835\ude0a \ud835\ude0b \ud835\ude0c \ud835\ude0d \ud835\ude0e \ud835\ude0f \ud835\ude10 \ud835\ude11 \ud835\ude12 \ud835\ude13 \ud835\ude14 \ud835\ude15 \ud835\ude16 \ud835\ude17 \ud835\ude18 \ud835\ude19 \ud835\ude1a \ud835\ude1b \ud835\ude1c \ud835\ude1d \ud835\ude1e \ud835\ude1f \ud835\ude20 \ud835\ude21".split(" "),this.smallLatinSansSerifItalic="\ud835\ude22 \ud835\ude23 \ud835\ude24 \ud835\ude25 \ud835\ude26 \ud835\ude27 \ud835\ude28 \ud835\ude29 \ud835\ude2a \ud835\ude2b \ud835\ude2c \ud835\ude2d \ud835\ude2e \ud835\ude2f \ud835\ude30 \ud835\ude31 \ud835\ude32 \ud835\ude33 \ud835\ude34 \ud835\ude35 \ud835\ude36 \ud835\ude37 \ud835\ude38 \ud835\ude39 \ud835\ude3a \ud835\ude3b".split(" "),this.capitalLatinSansSerifBoldItalic="\ud835\ude3c \ud835\ude3d \ud835\ude3e \ud835\ude3f \ud835\ude40 \ud835\ude41 \ud835\ude42 \ud835\ude43 \ud835\ude44 \ud835\ude45 \ud835\ude46 \ud835\ude47 \ud835\ude48 \ud835\ude49 \ud835\ude4a \ud835\ude4b \ud835\ude4c \ud835\ude4d \ud835\ude4e \ud835\ude4f \ud835\ude50 \ud835\ude51 \ud835\ude52 \ud835\ude53 \ud835\ude54 \ud835\ude55".split(" "),this.smallLatinSansSerifBoldItalic="\ud835\ude56 \ud835\ude57 \ud835\ude58 \ud835\ude59 \ud835\ude5a \ud835\ude5b \ud835\ude5c \ud835\ude5d \ud835\ude5e \ud835\ude5f \ud835\ude60 \ud835\ude61 \ud835\ude62 \ud835\ude63 \ud835\ude64 \ud835\ude65 \ud835\ude66 \ud835\ude67 \ud835\ude68 \ud835\ude69 \ud835\ude6a \ud835\ude6b \ud835\ude6c \ud835\ude6d \ud835\ude6e \ud835\ude6f".split(" "),this.capitalLatinMonospace="\ud835\ude70 \ud835\ude71 \ud835\ude72 \ud835\ude73 \ud835\ude74 \ud835\ude75 \ud835\ude76 \ud835\ude77 \ud835\ude78 \ud835\ude79 \ud835\ude7a \ud835\ude7b \ud835\ude7c \ud835\ude7d \ud835\ude7e \ud835\ude7f \ud835\ude80 \ud835\ude81 \ud835\ude82 \ud835\ude83 \ud835\ude84 \ud835\ude85 \ud835\ude86 \ud835\ude87 \ud835\ude88 \ud835\ude89".split(" "),this.smallLatinMonospace="\ud835\ude8a \ud835\ude8b \ud835\ude8c \ud835\ude8d \ud835\ude8e \ud835\ude8f \ud835\ude90 \ud835\ude91 \ud835\ude92 \ud835\ude93 \ud835\ude94 \ud835\ude95 \ud835\ude96 \ud835\ude97 \ud835\ude98 \ud835\ude99 \ud835\ude9a \ud835\ude9b \ud835\ude9c \ud835\ude9d \ud835\ude9e \ud835\ude9f \ud835\udea0 \ud835\udea1 \ud835\udea2 \ud835\udea3".split(" "),this.latinDoubleStruckItalic=["ⅅ","ⅆ","ⅇ","ⅈ","ⅉ"],this.capitalGreek="ΑΒΓΔΕΖΗΘΙΚΛΜΝΞΟΠΡΣΤΥΦΧΨΩ".split(""),this.smallGreek="αβγδεζηθικλμνξοπρςστυφχψω".split(""),this.capitalGreekBold="\ud835\udea8 \ud835\udea9 \ud835\udeaa \ud835\udeab \ud835\udeac \ud835\udead \ud835\udeae \ud835\udeaf \ud835\udeb0 \ud835\udeb1 \ud835\udeb2 \ud835\udeb3 \ud835\udeb4 \ud835\udeb5 \ud835\udeb6 \ud835\udeb7 \ud835\udeb8 \ud835\udeba \ud835\udebb \ud835\udebc \ud835\udebd \ud835\udebe \ud835\udebf \ud835\udec0".split(" "),this.smallGreekBold="\ud835\udec2 \ud835\udec3 \ud835\udec4 \ud835\udec5 \ud835\udec6 \ud835\udec7 \ud835\udec8 \ud835\udec9 \ud835\udeca \ud835\udecb \ud835\udecc \ud835\udecd \ud835\udece \ud835\udecf \ud835\uded0 \ud835\uded1 \ud835\uded2 \ud835\uded3 \ud835\uded4 \ud835\uded5 \ud835\uded6 \ud835\uded7 \ud835\uded8 \ud835\uded9 \ud835\udeda".split(" "),this.capitalGreekItalic="\ud835\udee2 \ud835\udee3 \ud835\udee4 \ud835\udee5 \ud835\udee6 \ud835\udee7 \ud835\udee8 \ud835\udee9 \ud835\udeea \ud835\udeeb \ud835\udeec \ud835\udeed \ud835\udeee \ud835\udeef \ud835\udef0 \ud835\udef1 \ud835\udef2 \ud835\udef4 \ud835\udef5 \ud835\udef6 \ud835\udef7 \ud835\udef8 \ud835\udef9 \ud835\udefa".split(" "),this.smallGreekItalic="\ud835\udefc \ud835\udefd \ud835\udefe \ud835\udeff \ud835\udf00 \ud835\udf01 \ud835\udf02 \ud835\udf03 \ud835\udf04 \ud835\udf05 \ud835\udf06 \ud835\udf07 \ud835\udf08 \ud835\udf09 \ud835\udf0a \ud835\udf0b \ud835\udf0c \ud835\udf0d \ud835\udf0e \ud835\udf0f \ud835\udf10 \ud835\udf11 \ud835\udf12 \ud835\udf13 \ud835\udf14".split(" "),this.capitalGreekBoldItalic="\ud835\udf1c \ud835\udf1d \ud835\udf1e \ud835\udf1f \ud835\udf20 \ud835\udf21 \ud835\udf22 \ud835\udf23 \ud835\udf24 \ud835\udf25 \ud835\udf26 \ud835\udf27 \ud835\udf28 \ud835\udf29 \ud835\udf2a \ud835\udf2b \ud835\udf2c \ud835\udf2e \ud835\udf2f \ud835\udf30 \ud835\udf31 \ud835\udf32 \ud835\udf33 \ud835\udf34".split(" "),this.smallGreekBoldItalic="\ud835\udf36 \ud835\udf37 \ud835\udf38 \ud835\udf39 \ud835\udf3a \ud835\udf3b \ud835\udf3c \ud835\udf3d \ud835\udf3e \ud835\udf3f \ud835\udf40 \ud835\udf41 \ud835\udf42 \ud835\udf43 \ud835\udf44 \ud835\udf45 \ud835\udf46 \ud835\udf47 \ud835\udf48 \ud835\udf49 \ud835\udf4a \ud835\udf4b \ud835\udf4c \ud835\udf4d \ud835\udf4e".split(" "),this.capitalGreekSansSerifBold="\ud835\udf56 \ud835\udf57 \ud835\udf58 \ud835\udf59 \ud835\udf5a \ud835\udf5b \ud835\udf5c \ud835\udf5d \ud835\udf5e \ud835\udf5f \ud835\udf60 \ud835\udf61 \ud835\udf62 \ud835\udf63 \ud835\udf64 \ud835\udf65 \ud835\udf66 \ud835\udf68 \ud835\udf69 \ud835\udf6a \ud835\udf6b \ud835\udf6c \ud835\udf6d \ud835\udf6e".split(" "),this.smallGreekSansSerifBold="\ud835\udf70 \ud835\udf71 \ud835\udf72 \ud835\udf73 \ud835\udf74 \ud835\udf75 \ud835\udf76 \ud835\udf77 \ud835\udf78 \ud835\udf79 \ud835\udf7a \ud835\udf7b \ud835\udf7c \ud835\udf7d \ud835\udf7e \ud835\udf7f \ud835\udf80 \ud835\udf81 \ud835\udf82 \ud835\udf83 \ud835\udf84 \ud835\udf85 \ud835\udf86 \ud835\udf87 \ud835\udf88".split(" "),this.capitalGreekSansSerifBoldItalic="\ud835\udf90 \ud835\udf91 \ud835\udf92 \ud835\udf93 \ud835\udf94 \ud835\udf95 \ud835\udf96 \ud835\udf97 \ud835\udf98 \ud835\udf99 \ud835\udf9a \ud835\udf9b \ud835\udf9c \ud835\udf9d \ud835\udf9e \ud835\udf9f \ud835\udfa0 \ud835\udfa2 \ud835\udfa3 \ud835\udfa4 \ud835\udfa5 \ud835\udfa6 \ud835\udfa7 \ud835\udfa8".split(" "),this.smallGreekSansSerifBoldItalic="\ud835\udfaa \ud835\udfab \ud835\udfac \ud835\udfad \ud835\udfae \ud835\udfaf \ud835\udfb0 \ud835\udfb1 \ud835\udfb2 \ud835\udfb3 \ud835\udfb4 \ud835\udfb5 \ud835\udfb6 \ud835\udfb7 \ud835\udfb8 \ud835\udfb9 \ud835\udfba \ud835\udfbb \ud835\udfbc \ud835\udfbd \ud835\udfbe \ud835\udfbf \ud835\udfc0 \ud835\udfc1 \ud835\udfc2".split(" "),this.greekDoubleStruck=["ℼ","ℽ","ℾ","ℿ"],this.greekSpecial="ϐϑϕϖϗϰϱϵ϶ϴ".split(""),this.greekSpecialBold="\ud835\udedc \ud835\udedd \ud835\udede \ud835\udedf \ud835\udee0 \ud835\udee1".split(" "),this.greekSpecialItalic="\ud835\udf16 \ud835\udf17 \ud835\udf18 \ud835\udf19 \ud835\udf1a \ud835\udf1b".split(" "),this.greekSpecialSansSerifBold="\ud835\udf8a \ud835\udf8b \ud835\udf8c \ud835\udf8d \ud835\udf8e \ud835\udf8f".split(" "),this.hebrewLetters=["ℵ","ℶ","ℷ","ℸ"],this.allLetters=this.capitalLatin.concat(this.smallLatin,this.capitalLatinFullWidth,this.smallLatinFullWidth,this.capitalLatinBold,this.smallLatinBold,this.capitalLatinItalic,this.capitalLatinBoldItalic,this.smallLatinBoldItalic,this.smallLatinItalic,this.capitalLatinScript,this.smallLatinScript,this.capitalLatinBoldScript,this.smallLatinBoldScript,this.capitalLatinFraktur,this.smallLatinFraktur,this.capitalLatinDoubleStruck,this.smallLatinDoubleStruck,this.capitalLatinBoldFraktur,this.smallLatinBoldFraktur,this.capitalLatinSansSerif,this.smallLatinSansSerif,this.capitalLatinSansSerifBold,this.smallLatinSansSerifBold,this.capitalLatinSansSerifItalic,this.smallLatinSansSerifItalic,this.capitalLatinSansSerifBoldItalic,this.smallLatinSansSerifBoldItalic,this.capitalLatinMonospace,this.smallLatinMonospace,this.latinDoubleStruckItalic,this.capitalGreek,this.smallGreek,this.capitalGreekBold,this.smallGreekBold,this.capitalGreekItalic,this.smallGreekItalic,this.capitalGreekBoldItalic,this.smallGreekBoldItalic,this.capitalGreekSansSerifBold,this.smallGreekSansSerifBold,this.greekDoubleStruck,this.greekSpecial,this.capitalGreekSansSerifBoldItalic,this.smallGreekSansSerifBoldItalic,this.greekSpecialBold,this.greekSpecialItalic,this.greekSpecialSansSerifBold,this.hebrewLetters),this.additions="+±∓∔∧∨∩∪⊌⊓⊔⊝⊞⊤⊥⊺⊻⊼⋄⋎⋏⋒⋓△▷▽◁⩞⊕".split(""),this.invisiblePlus_=sre.SemanticUtil.numberToUnicode(8292),this.additions.push(this.invisiblePlus_),this.multiplications="†‡∐∗∘∙≀⊚⊛⊠⊡⋅⋆⋇⋉⋊⋋⋌○·*".split(""),this.invisibleTimes_=sre.SemanticUtil.numberToUnicode(8290),this.multiplications.push(this.invisibleTimes_),this.subtractions="-⁒⁻₋−∖∸≂⊖⊟➖⨩⨪⨫⨬⨺⩁⩬﹣－‐‑".split(""),this.divisions="/÷⁄∕⊘⟌⦼⨸".split(""),this.functionApplication_=sre.SemanticUtil.numberToUnicode(8289),this.equalities="=~⁼₌∼∽≃≅≈≊≋≌≍≎≑≒≓≔≕≖≗≘≙≚≛≜≝≞≟≡≣⧤⩦⩮⩯⩰⩱⩲⩳⩴⩵⩶⩷⩸⋕⩭⩪⩫⩬﹦＝".split(""),this.inequalities="<>≁≂≄≆≇≉≏≐≠≢≤≥≦≧≨≩≪≫≬≭≮≯≰≱≲≳≴≵≶≷≸≹≺≻≼≽≾≿⊀⊁⋖⋗⋘⋙⋚⋛⋜⋝⋞⋟⋠⋡⋢⋣⋤⋥⋦⋧⋨⋩⩹⩺⩻⩼⩽⩾⩿⪀⪁⪂⪃⪄⪅⪆⪇⪈⪉⪊⪋⪌⪍⪎⪏⪐⪑⪒⪓⪔⪕⪖⪗⪘⪙⪚⪛⪜⪝⪞⪟⪠⪡⪢⪣⪤⪥⪦⪧⪨⪩⪪⪫⪬⪭⪮⪯⪰⪱⪲⪳⪴⪵⪶⪷⪸⪹⪺⪻⪼⫷⫸⫹⫺⧀⧁﹤﹥＜＞".split(""),this.relations=[],this.arrows="←↑→↓↔↕↖↗↘↙↚↛↜↝↞↟↠↡↢↣↤↥↦↧↨↩↪↫↬↭↮↯↰↱↲↳↴↵↶↷↸↹↺↻⇄⇅⇆⇇⇈⇉⇊⇍⇎⇏⇐⇑⇒⇓⇔⇕⇖⇗⇘⇙⇚⇛⇜⇝⇞⇟⇠⇡⇢⇣⇤⇥⇦⇧⇨⇩⇪⇫⇬⇭⇮⇯⇰⇱⇲⇳⇴⇵⇶⇷⇸⇹⇺⇻⇼⇽⇾⇿⌁⌃⌄⌤⎋➔➘➙➚➛➜➝➞➟➠➡➢➣➤➥➦➧➨➩➪➫➬➭➮➯➱➲➳➴➵➶➷➸➹➺➻➼➽➾⟰⟱⟲⟳⟴⟵⟶⟷⟸⟹⟺⟻⟼⟽⟾⟿⤀⤁⤂⤃⤄⤅⤆⤇⤈⤉⤊⤋⤌⤍⤎⤏⤐⤑⤒⤓⤔⤕⤖⤗⤘⤙⤚⤛⤜⤝⤞⤟⤠⤡⤢⤣⤤⤥⤦⤧⤨⤩⤪⤭⤮⤯⤰⤱⤲⤳⤴⤵⤶⤷⤸⤹⤺⤻⤼⤽⤾⤿⥀⥁⥂⥃⥄⥅⥆⥇⥈⥉⥰⥱⥲⥳⥴⥵⥶⥷⥸⥹⥺⥻⦳⦴⦽⧪⧬⧭⨗⬀⬁⬂⬃⬄⬅⬆⬇⬈⬉⬊⬋⬌⬍⬎⬏⬐⬑⬰⬱⬲⬳⬴⬵⬶⬷⬸⬹⬺⬻⬼⬽⬾⬿⭀⭁⭂⭃⭄⭅⭆⭇⭈⭉⭊⭋⭌￩￪￫￬↼↽↾↿⇀⇁⇂⇃⇋⇌⥊⥋⥌⥍⥎⥏⥐⥑⥒⥓⥔⥕⥖⥗⥘⥙⥚⥛⥜⥝⥞⥟⥠⥡⥢⥣⥤⥥⥦⥧⥨⥩⥪⥫⥬⥭⥮⥯⥼⥽⥾⥿".split(""),this.sumOps="⅀∏∐∑⋀⋁⋂⋃⨀⨁⨂⨃⨄⨅⨆⨇⨈⨉⨊⨋⫼⫿".split(""),this.intOps="∫∬∭∮∯∰∱∲∳⨌⨍⨎⨏⨐⨑⨒⨓⨔⨕⨖⨗⨘⨙⨚⨛⨜".split(""),this.prefixOps="∀∃∆∇∂∁∄".split(""),this.prefixOpsBold=["\ud835\udec1","\ud835\udedb","\ud835\udfca","\ud835\udfcb"],this.prefixOpsItalic=["\ud835\udefb","\ud835\udf15"],this.prefixOpsSansSerifBold=["\ud835\udf6f","\ud835\udf89"],this.operatorBits="⌠⌡⎶⎪⎮⎯⎲⎳⎷".split(""),this.digitsNormal="0123456789".split(""),this.digitsFullWidth="０１２３４５６７８９".split(""),this.digitsBold="\ud835\udfce \ud835\udfcf \ud835\udfd0 \ud835\udfd1 \ud835\udfd2 \ud835\udfd3 \ud835\udfd4 \ud835\udfd5 \ud835\udfd6 \ud835\udfd7".split(" "),this.digitsDoubleStruck="\ud835\udfd8 \ud835\udfd9 \ud835\udfda \ud835\udfdb \ud835\udfdc \ud835\udfdd \ud835\udfde \ud835\udfdf \ud835\udfe0 \ud835\udfe1".split(" "),this.digitsSansSerif="\ud835\udfe2 \ud835\udfe3 \ud835\udfe4 \ud835\udfe5 \ud835\udfe6 \ud835\udfe7 \ud835\udfe8 \ud835\udfe9 \ud835\udfea \ud835\udfeb".split(" "),this.digitsSansSerifBold="\ud835\udfec \ud835\udfed \ud835\udfee \ud835\udfef \ud835\udff0 \ud835\udff1 \ud835\udff2 \ud835\udff3 \ud835\udff4 \ud835\udff5".split(" "),this.digitsMonospace="\ud835\udff6 \ud835\udff7 \ud835\udff8 \ud835\udff9 \ud835\udffa \ud835\udffb \ud835\udffc \ud835\udffd \ud835\udffe \ud835\udfff".split(" "),this.digitsSuperscript="²³¹⁰⁴⁵⁶⁷⁸⁹".split(""),this.digitsSubscript="₀₁₂₃₄₅₆₇₈₉".split(""),this.fractions="¼½¾⅐⅑⅒⅓⅔⅕⅖⅗⅘⅙⅚⅛⅜⅝⅞⅟↉".split(""),this.enclosedNumbers="①②③④⑤⑥⑦⑧⑨⑩⑪⑫⑬⑭⑮⑯⑰⑱⑲⑳⓪⓫⓬⓭⓮⓯⓰⓱⓲⓳⓴⓵⓶⓷⓸⓹⓺⓻⓼⓽⓾⓿❶❷❸❹❺❻❼❽❾❿➀➁➂➃➄➅➆➇➈➉➊➋➌➍➎➏➐➑➒➓㉈㉉㉊㉋㉌㉍㉎㉏㉑㉒㉓㉔㉕㉖㉗㉘㉙㉚㉛㉜㉝㉞㉟㊱㊲㊳㊴㊵㊶㊷㊸㊹㊺㊻㊼㊽㊾㊿".split(""),this.fencedNumbers="⑴⑵⑶⑷⑸⑹⑺⑻⑼⑽⑾⑿⒀⒁⒂⒃⒄⒅⒆⒇".split(""),this.punctuatedNumbers="⒈ ⒉ ⒊ ⒋ ⒌ ⒍ ⒎ ⒏ ⒐ ⒑ ⒒ ⒓ ⒔ ⒕ ⒖ ⒗ ⒘ ⒙ ⒚ ⒛ \ud83c\udd00 \ud83c\udd01 \ud83c\udd02 \ud83c\udd03 \ud83c\udd04 \ud83c\udd05 \ud83c\udd06 \ud83c\udd07 \ud83c\udd08 \ud83c\udd09 \ud83c\udd0a".split(" "),this.digits=this.digitsNormal.concat(this.digitsFullWidth,this.digitsBold,this.digitsDoubleStruck,this.digitsSansSerif,this.digitsSansSerifBold,this.digitsMonospace),this.numbers=this.fractions.concat(this.digitsSuperscript,this.digitsSubscript,this.enclosedNumbers,this.fencedNumbers,this.punctuatedNumbers),this.allNumbers=this.digits.concat(this.numbers),this.trigonometricFunctions="cos cot csc sec sin tan arccos arccot arccsc arcsec arcsin arctan".split(" "),this.hyperbolicFunctions="cosh coth csch sech sinh tanh arcosh arcoth arcsch arsech arsinh artanh arccosh arccoth arccsch arcsech arcsinh arctanh".split(" "),this.algebraicFunctions="deg det dim hom ker Tr tr".split(" "),this.elementaryFunctions="log ln lg exp expt gcd gcd arg im re Pr".split(" "),this.prefixFunctions=this.trigonometricFunctions.concat(this.hyperbolicFunctions,this.algebraicFunctions,this.elementaryFunctions),this.limitFunctions="inf lim liminf limsup max min sup injlim projlim".split(" "),this.infixFunctions=["mod","rem"],this.symbolSetToSemantic_=[{set:this.generalPunctuations,type:sre.SemanticAttr.Type.PUNCTUATION,role:sre.SemanticAttr.Role.UNKNOWN},{set:this.colons,type:sre.SemanticAttr.Type.PUNCTUATION,role:sre.SemanticAttr.Role.COLON},{set:this.commas,type:sre.SemanticAttr.Type.PUNCTUATION,role:sre.SemanticAttr.Role.COMMA},{set:this.ellipses,type:sre.SemanticAttr.Type.PUNCTUATION,role:sre.SemanticAttr.Role.ELLIPSIS},{set:this.fullStops,type:sre.SemanticAttr.Type.PUNCTUATION,role:sre.SemanticAttr.Role.FULLSTOP},{set:this.dashes,type:sre.SemanticAttr.Type.PUNCTUATION,role:sre.SemanticAttr.Role.DASH},{set:this.primes,type:sre.SemanticAttr.Type.PUNCTUATION,role:sre.SemanticAttr.Role.PRIME},{set:this.degrees,type:sre.SemanticAttr.Type.PUNCTUATION,role:sre.SemanticAttr.Role.DEGREE},{set:this.leftFences,type:sre.SemanticAttr.Type.FENCE,role:sre.SemanticAttr.Role.OPEN},{set:this.rightFences,type:sre.SemanticAttr.Type.FENCE,role:sre.SemanticAttr.Role.CLOSE},{set:this.topFences,type:sre.SemanticAttr.Type.FENCE,role:sre.SemanticAttr.Role.TOP},{set:this.bottomFences,type:sre.SemanticAttr.Type.FENCE,role:sre.SemanticAttr.Role.BOTTOM},{set:this.neutralFences,type:sre.SemanticAttr.Type.FENCE,role:sre.SemanticAttr.Role.NEUTRAL},{set:this.smallLatin,type:sre.SemanticAttr.Type.IDENTIFIER,role:sre.SemanticAttr.Role.LATINLETTER,font:sre.SemanticAttr.Font.NORMAL},{set:this.capitalLatin,type:sre.SemanticAttr.Type.IDENTIFIER,role:sre.SemanticAttr.Role.LATINLETTER,font:sre.SemanticAttr.Font.NORMAL},{set:this.smallLatinFullWidth,type:sre.SemanticAttr.Type.IDENTIFIER,role:sre.SemanticAttr.Role.LATINLETTER,font:sre.SemanticAttr.Font.NORMAL},{set:this.capitalLatinFullWidth,type:sre.SemanticAttr.Type.IDENTIFIER,role:sre.SemanticAttr.Role.LATINLETTER,font:sre.SemanticAttr.Font.NORMAL},{set:this.smallLatinBold,type:sre.SemanticAttr.Type.IDENTIFIER,role:sre.SemanticAttr.Role.LATINLETTER,font:sre.SemanticAttr.Font.BOLD},{set:this.capitalLatinBold,type:sre.SemanticAttr.Type.IDENTIFIER,role:sre.SemanticAttr.Role.LATINLETTER,font:sre.SemanticAttr.Font.BOLD},{set:this.smallLatinItalic,type:sre.SemanticAttr.Type.IDENTIFIER,role:sre.SemanticAttr.Role.LATINLETTER,font:sre.SemanticAttr.Font.ITALIC},{set:this.capitalLatinItalic,type:sre.SemanticAttr.Type.IDENTIFIER,role:sre.SemanticAttr.Role.LATINLETTER,font:sre.SemanticAttr.Font.ITALIC},{set:this.smallLatinBoldItalic,type:sre.SemanticAttr.Type.IDENTIFIER,role:sre.SemanticAttr.Role.LATINLETTER,font:sre.SemanticAttr.Font.BOLDITALIC},{set:this.capitalLatinBoldItalic,type:sre.SemanticAttr.Type.IDENTIFIER,role:sre.SemanticAttr.Role.LATINLETTER,font:sre.SemanticAttr.Font.BOLDITALIC},{set:this.smallLatinScript,type:sre.SemanticAttr.Type.IDENTIFIER,role:sre.SemanticAttr.Role.LATINLETTER,font:sre.SemanticAttr.Font.SCRIPT},{set:this.capitalLatinScript,type:sre.SemanticAttr.Type.IDENTIFIER,role:sre.SemanticAttr.Role.LATINLETTER,font:sre.SemanticAttr.Font.SCRIPT},{set:this.smallLatinBoldScript,type:sre.SemanticAttr.Type.IDENTIFIER,role:sre.SemanticAttr.Role.LATINLETTER,font:sre.SemanticAttr.Font.BOLDSCRIPT},{set:this.capitalLatinBoldScript,type:sre.SemanticAttr.Type.IDENTIFIER,role:sre.SemanticAttr.Role.LATINLETTER,font:sre.SemanticAttr.Font.BOLDSCRIPT},{set:this.smallLatinFraktur,type:sre.SemanticAttr.Type.IDENTIFIER,role:sre.SemanticAttr.Role.LATINLETTER,font:sre.SemanticAttr.Font.FRAKTUR},{set:this.capitalLatinFraktur,type:sre.SemanticAttr.Type.IDENTIFIER,role:sre.SemanticAttr.Role.LATINLETTER,font:sre.SemanticAttr.Font.FRAKTUR},{set:this.smallLatinDoubleStruck,type:sre.SemanticAttr.Type.IDENTIFIER,role:sre.SemanticAttr.Role.LATINLETTER,font:sre.SemanticAttr.Font.DOUBLESTRUCK},{set:this.capitalLatinDoubleStruck,type:sre.SemanticAttr.Type.IDENTIFIER,role:sre.SemanticAttr.Role.LATINLETTER,font:sre.SemanticAttr.Font.DOUBLESTRUCK},{set:this.smallLatinBoldFraktur,type:sre.SemanticAttr.Type.IDENTIFIER,role:sre.SemanticAttr.Role.LATINLETTER,font:sre.SemanticAttr.Font.BOLDFRAKTUR},{set:this.capitalLatinBoldFraktur,type:sre.SemanticAttr.Type.IDENTIFIER,role:sre.SemanticAttr.Role.LATINLETTER,font:sre.SemanticAttr.Font.BOLDFRAKTUR},{set:this.smallLatinSansSerif,type:sre.SemanticAttr.Type.IDENTIFIER,role:sre.SemanticAttr.Role.LATINLETTER,font:sre.SemanticAttr.Font.SANSSERIF},{set:this.capitalLatinSansSerif,type:sre.SemanticAttr.Type.IDENTIFIER,role:sre.SemanticAttr.Role.LATINLETTER,font:sre.SemanticAttr.Font.SANSSERIF},{set:this.smallLatinSansSerifBold,type:sre.SemanticAttr.Type.IDENTIFIER,role:sre.SemanticAttr.Role.LATINLETTER,font:sre.SemanticAttr.Font.SANSSERIFBOLD},{set:this.capitalLatinSansSerifBold,type:sre.SemanticAttr.Type.IDENTIFIER,role:sre.SemanticAttr.Role.LATINLETTER,font:sre.SemanticAttr.Font.SANSSERIFBOLD},{set:this.smallLatinSansSerifItalic,type:sre.SemanticAttr.Type.IDENTIFIER,role:sre.SemanticAttr.Role.LATINLETTER,font:sre.SemanticAttr.Font.SANSSERIFITALIC},{set:this.capitalLatinSansSerifItalic,type:sre.SemanticAttr.Type.IDENTIFIER,role:sre.SemanticAttr.Role.LATINLETTER,font:sre.SemanticAttr.Font.SANSSERIFITALIC},{set:this.smallLatinSansSerifBoldItalic,type:sre.SemanticAttr.Type.IDENTIFIER,role:sre.SemanticAttr.Role.LATINLETTER,font:sre.SemanticAttr.Font.SANSSERIFBOLDITALIC},{set:this.capitalLatinSansSerifBoldItalic,type:sre.SemanticAttr.Type.IDENTIFIER,role:sre.SemanticAttr.Role.LATINLETTER,font:sre.SemanticAttr.Font.SANSSERIFBOLDITALIC},{set:this.smallLatinMonospace,type:sre.SemanticAttr.Type.IDENTIFIER,role:sre.SemanticAttr.Role.LATINLETTER,font:sre.SemanticAttr.Font.MONOSPACE},{set:this.capitalLatinMonospace,type:sre.SemanticAttr.Type.IDENTIFIER,role:sre.SemanticAttr.Role.LATINLETTER,font:sre.SemanticAttr.Font.MONOSPACE},{set:this.latinDoubleStruckItalic,type:sre.SemanticAttr.Type.IDENTIFIER,role:sre.SemanticAttr.Role.LATINLETTER,font:sre.SemanticAttr.Font.DOUBLESTRUCKITALIC},{set:this.smallGreek,type:sre.SemanticAttr.Type.IDENTIFIER,role:sre.SemanticAttr.Role.GREEKLETTER,font:sre.SemanticAttr.Font.NORMAL},{set:this.capitalGreek,type:sre.SemanticAttr.Type.IDENTIFIER,role:sre.SemanticAttr.Role.GREEKLETTER,font:sre.SemanticAttr.Font.NORMAL},{set:this.smallGreekBold,type:sre.SemanticAttr.Type.IDENTIFIER,role:sre.SemanticAttr.Role.GREEKLETTER,font:sre.SemanticAttr.Font.BOLD},{set:this.capitalGreekBold,type:sre.SemanticAttr.Type.IDENTIFIER,role:sre.SemanticAttr.Role.GREEKLETTER,font:sre.SemanticAttr.Font.BOLD},{set:this.smallGreekItalic,type:sre.SemanticAttr.Type.IDENTIFIER,role:sre.SemanticAttr.Role.GREEKLETTER,font:sre.SemanticAttr.Font.ITALIC},{set:this.capitalGreekItalic,type:sre.SemanticAttr.Type.IDENTIFIER,role:sre.SemanticAttr.Role.GREEKLETTER,font:sre.SemanticAttr.Font.ITALIC},{set:this.smallGreekBoldItalic,type:sre.SemanticAttr.Type.IDENTIFIER,role:sre.SemanticAttr.Role.GREEKLETTER,font:sre.SemanticAttr.Font.BOLDITALIC},{set:this.capitalGreekBoldItalic,type:sre.SemanticAttr.Type.IDENTIFIER,role:sre.SemanticAttr.Role.GREEKLETTER,font:sre.SemanticAttr.Font.BOLDITALIC},{set:this.smallGreekSansSerifBold,type:sre.SemanticAttr.Type.IDENTIFIER,role:sre.SemanticAttr.Role.GREEKLETTER,font:sre.SemanticAttr.Font.SANSSERIFBOLD},{set:this.capitalGreekSansSerifBold,type:sre.SemanticAttr.Type.IDENTIFIER,role:sre.SemanticAttr.Role.GREEKLETTER,font:sre.SemanticAttr.Font.SANSSERIFBOLD},{set:this.capitalGreekSansSerifBoldItalic,type:sre.SemanticAttr.Type.IDENTIFIER,role:sre.SemanticAttr.Role.GREEKLETTER,font:sre.SemanticAttr.Font.SANSSERIFBOLDITALIC},{set:this.smallGreekSansSerifBoldItalic,type:sre.SemanticAttr.Type.IDENTIFIER,role:sre.SemanticAttr.Role.GREEKLETTER,font:sre.SemanticAttr.Font.SANSSERIFBOLDITALIC},{set:this.greekDoubleStruck,type:sre.SemanticAttr.Type.IDENTIFIER,role:sre.SemanticAttr.Role.GREEKLETTER,font:sre.SemanticAttr.Font.DOUBLESTRUCK},{set:this.greekSpecial,type:sre.SemanticAttr.Type.IDENTIFIER,role:sre.SemanticAttr.Role.GREEKLETTER,font:sre.SemanticAttr.Font.NORMAL},{set:this.greekSpecialBold,type:sre.SemanticAttr.Type.IDENTIFIER,role:sre.SemanticAttr.Role.GREEKLETTER,font:sre.SemanticAttr.Font.BOLD},{set:this.greekSpecialItalic,type:sre.SemanticAttr.Type.IDENTIFIER,role:sre.SemanticAttr.Role.GREEKLETTER,font:sre.SemanticAttr.Font.ITALIC},{set:this.greekSpecialSansSerifBold,type:sre.SemanticAttr.Type.IDENTIFIER,role:sre.SemanticAttr.Role.GREEKLETTER,font:sre.SemanticAttr.Font.SANSSERIFBOLD},{set:this.hebrewLetters,type:sre.SemanticAttr.Type.IDENTIFIER,role:sre.SemanticAttr.Role.OTHERLETTER,font:sre.SemanticAttr.Font.NORMAL},{set:this.digitsNormal,type:sre.SemanticAttr.Type.NUMBER,role:sre.SemanticAttr.Role.INTEGER,font:sre.SemanticAttr.Font.NORMAL},{set:this.digitsFullWidth,type:sre.SemanticAttr.Type.NUMBER,role:sre.SemanticAttr.Role.INTEGER,font:sre.SemanticAttr.Font.NORMAL},{set:this.digitsBold,type:sre.SemanticAttr.Type.NUMBER,role:sre.SemanticAttr.Role.INTEGER,font:sre.SemanticAttr.Font.BOLD},{set:this.digitsDoubleStruck,type:sre.SemanticAttr.Type.NUMBER,role:sre.SemanticAttr.Role.INTEGER,font:sre.SemanticAttr.Font.DOUBLESTRUCK},{set:this.digitsSansSerif,type:sre.SemanticAttr.Type.NUMBER,role:sre.SemanticAttr.Role.INTEGER,font:sre.SemanticAttr.Font.SANSSERIF},{set:this.digitsSansSerifBold,type:sre.SemanticAttr.Type.NUMBER,role:sre.SemanticAttr.Role.INTEGER,font:sre.SemanticAttr.Font.SANSSERIFBOLD},{set:this.digitsMonospace,type:sre.SemanticAttr.Type.NUMBER,role:sre.SemanticAttr.Role.INTEGER,font:sre.SemanticAttr.Font.MONOSPACE},{set:this.numbers,type:sre.SemanticAttr.Type.NUMBER,role:sre.SemanticAttr.Role.FLOAT},{set:this.additions,type:sre.SemanticAttr.Type.OPERATOR,role:sre.SemanticAttr.Role.ADDITION},{set:this.multiplications,type:sre.SemanticAttr.Type.OPERATOR,role:sre.SemanticAttr.Role.MULTIPLICATION},{set:this.subtractions,type:sre.SemanticAttr.Type.OPERATOR,role:sre.SemanticAttr.Role.SUBTRACTION},{set:this.divisions,type:sre.SemanticAttr.Type.OPERATOR,role:sre.SemanticAttr.Role.DIVISION},{set:this.prefixOps,type:sre.SemanticAttr.Type.OPERATOR,role:sre.SemanticAttr.Role.PREFIXOP},{set:this.prefixOpsBold,type:sre.SemanticAttr.Type.OPERATOR,role:sre.SemanticAttr.Role.PREFIXOP,font:sre.SemanticAttr.Font.BOLD},{set:this.prefixOpsItalic,type:sre.SemanticAttr.Type.OPERATOR,role:sre.SemanticAttr.Role.PREFIXOP,font:sre.SemanticAttr.Font.ITALIC},{set:this.prefixOpsSansSerifBold,type:sre.SemanticAttr.Type.OPERATOR,role:sre.SemanticAttr.Role.PREFIXOP,font:sre.SemanticAttr.Font.SANSSERIFBOLD},{set:this.equalities,type:sre.SemanticAttr.Type.RELATION,role:sre.SemanticAttr.Role.EQUALITY},{set:this.inequalities,type:sre.SemanticAttr.Type.RELATION,role:sre.SemanticAttr.Role.INEQUALITY},{set:this.relations,type:sre.SemanticAttr.Type.RELATION,role:sre.SemanticAttr.Role.UNKNOWN},{set:this.arrows,type:sre.SemanticAttr.Type.RELATION,role:sre.SemanticAttr.Role.ARROW},{set:this.sumOps,type:sre.SemanticAttr.Type.LARGEOP,role:sre.SemanticAttr.Role.SUM},{set:this.intOps,type:sre.SemanticAttr.Type.LARGEOP,role:sre.SemanticAttr.Role.INTEGRAL},{set:this.limitFunctions,type:sre.SemanticAttr.Type.FUNCTION,role:sre.SemanticAttr.Role.LIMFUNC},{set:this.prefixFunctions,type:sre.SemanticAttr.Type.FUNCTION,role:sre.SemanticAttr.Role.PREFIXFUNC},{set:this.infixFunctions,type:sre.SemanticAttr.Type.OPERATOR,role:sre.SemanticAttr.Role.INFIXFUNC}],this.meaning_=this.initMeaning_()},goog.addSingletonGetter(sre.SemanticAttr),sre.SemanticAttr.Type={PUNCTUATION:"punctuation",FENCE:"fence",NUMBER:"number",IDENTIFIER:"identifier",TEXT:"text",OPERATOR:"operator",RELATION:"relation",LARGEOP:"largeop",FUNCTION:"function",ACCENT:"accent",FENCED:"fenced",FRACTION:"fraction",PUNCTUATED:"punctuated",RELSEQ:"relseq",MULTIREL:"multirel",INFIXOP:"infixop",PREFIXOP:"prefixop",POSTFIXOP:"postfixop",APPL:"appl",INTEGRAL:"integral",BIGOP:"bigop",SQRT:"sqrt",ROOT:"root",LIMUPPER:"limupper",LIMLOWER:"limlower",LIMBOTH:"limboth",SUBSCRIPT:"subscript",SUPERSCRIPT:"superscript",UNDERSCORE:"underscore",OVERSCORE:"overscore",TENSOR:"tensor",TABLE:"table",MULTILINE:"multiline",MATRIX:"matrix",VECTOR:"vector",CASES:"cases",ROW:"row",LINE:"line",CELL:"cell",ENCLOSE:"enclose",INFERENCE:"inference",RULELABEL:"rulelabel",CONCLUSION:"conclusion",PREMISES:"premises",UNKNOWN:"unknown",EMPTY:"empty"},sre.SemanticAttr.Role={COMMA:"comma",ELLIPSIS:"ellipsis",FULLSTOP:"fullstop",DASH:"dash",PRIME:"prime",DEGREE:"degree",VBAR:"vbar",COLON:"colon",OPENFENCE:"openfence",CLOSEFENCE:"closefence",APPLICATION:"application",DUMMY:"dummy",UNIT:"unit",LABEL:"label",OPEN:"open",CLOSE:"close",TOP:"top",BOTTOM:"bottom",NEUTRAL:"neutral",LATINLETTER:"latinletter",GREEKLETTER:"greekletter",OTHERLETTER:"otherletter",NUMBERSET:"numbersetletter",INTEGER:"integer",FLOAT:"float",OTHERNUMBER:"othernumber",MIXED:"mixed",MULTIACCENT:"multiaccent",OVERACCENT:"overaccent",UNDERACCENT:"underaccent",UNDEROVER:"underover",SUBSUP:"subsup",LEFTSUB:"leftsub",LEFTSUPER:"leftsuper",RIGHTSUB:"rightsub",RIGHTSUPER:"rightsuper",LEFTRIGHT:"leftright",ABOVEBELOW:"abovebelow",SETEMPTY:"set empty",SETEXT:"set extended",SETSINGLE:"set singleton",SETCOLLECT:"set collection",STRING:"string",SEQUENCE:"sequence",ENDPUNCT:"endpunct",STARTPUNCT:"startpunct",TEXT:"text",NEGATIVE:"negative",POSITIVE:"positive",NEGATION:"negation",MULTIOP:"multiop",PREFIXOP:"prefix operator",POSTFIXOP:"postfix operator",LIMFUNC:"limit function",INFIXFUNC:"infix function",PREFIXFUNC:"prefix function",POSTFIXFUNC:"postfix function",SIMPLEFUNC:"simple function",COMPFUNC:"composed function",SUM:"sum",INTEGRAL:"integral",ADDITION:"addition",MULTIPLICATION:"multiplication",SUBTRACTION:"subtraction",IMPLICIT:"implicit",DIVISION:"division",VULGAR:"vulgar",EQUALITY:"equality",INEQUALITY:"inequality",ELEMENT:"element",ARROW:"arrow",DETERMINANT:"determinant",ROWVECTOR:"rowvector",BINOMIAL:"binomial",SQUAREMATRIX:"squarematrix",MULTILINE:"multiline",MATRIX:"matrix",VECTOR:"vector",CASES:"cases",TABLE:"table",PROOF:"proof",LEFT:"left",RIGHT:"right",UP:"up",DOWN:"down",FINAL:"final",SINGLE:"single",HYP:"hyp",AXIOM:"axiom",UNKNOWN:"unknown"},sre.SemanticAttr.Font={BOLD:"bold",BOLDFRAKTUR:"bold-fraktur",BOLDITALIC:"bold-italic",BOLDSCRIPT:"bold-script",CALIGRAPHIC:"caligraphic",CALIGRAPHICBOLD:"caligraphic-bold",DOUBLESTRUCK:"double-struck",DOUBLESTRUCKITALIC:"double-struck-italic",FRAKTUR:"fraktur",ITALIC:"italic",MONOSPACE:"monospace",NORMAL:"normal",OLDSTYLE:"oldstyle",OLDSTYLEBOLD:"oldstyle-bold",SCRIPT:"script",SANSSERIF:"sans-serif",SANSSERIFITALIC:"sans-serif-italic",SANSSERIFBOLD:"sans-serif-bold",SANSSERIFBOLDITALIC:"sans-serif-bold-italic",UNKNOWN:"unknown"},sre.SemanticAttr.equal=function(e,t){return e.type===t.type&&e.role===t.role&&e.font===t.font},sre.SemanticAttr.prototype.lookupType=function(){return sre.SemanticAttr.Type.UNKNOWN},sre.SemanticAttr.prototype.lookupRole=function(){return sre.SemanticAttr.Role.UNKNOWN},sre.SemanticAttr.lookupMeaning=function(e){return sre.SemanticAttr.getInstance().lookupMeaning_(e)},sre.SemanticAttr.invisibleTimes=function(){return sre.SemanticAttr.getInstance().invisibleTimes_},sre.SemanticAttr.invisiblePlus=function(){return sre.SemanticAttr.getInstance().invisiblePlus_},sre.SemanticAttr.invisibleComma=function(){return sre.SemanticAttr.getInstance().invisibleComma_},sre.SemanticAttr.functionApplication=function(){return sre.SemanticAttr.getInstance().functionApplication_},sre.SemanticAttr.isMatchingFenceRole=function(e,t){return e==sre.SemanticAttr.Role.OPEN&&t==sre.SemanticAttr.Role.CLOSE||e==sre.SemanticAttr.Role.NEUTRAL&&t==sre.SemanticAttr.Role.NEUTRAL||e==sre.SemanticAttr.Role.TOP&&t==sre.SemanticAttr.Role.BOTTOM},sre.SemanticAttr.isMatchingFence=function(e,t){return sre.SemanticAttr.getInstance().isMatchingFence_(e,t)},sre.SemanticAttr.isOpeningFence=function(e){return e==sre.SemanticAttr.Role.OPEN||e==sre.SemanticAttr.Role.NEUTRAL},sre.SemanticAttr.isClosingFence=function(e){return e==sre.SemanticAttr.Role.CLOSE||e==sre.SemanticAttr.Role.NEUTRAL},sre.SemanticAttr.isEmbellishedType=function(e){return e===sre.SemanticAttr.Type.OPERATOR||e===sre.SemanticAttr.Type.RELATION||e===sre.SemanticAttr.Type.FENCE||e===sre.SemanticAttr.Type.PUNCTUATION},sre.SemanticAttr.isCharacterD=function(e){return-1!="d ⅆ ｄ \ud835\udc1d \ud835\udc51 \ud835\udcb9 \ud835\udced \ud835\udd21 \ud835\udd55 \ud835\udd89 \ud835\uddbd \ud835\uddf1 \ud835\ude25 \ud835\ude8d".split(" ").indexOf(e)},sre.SemanticAttr.prototype.isMatchingFence_=function(e,t){return-1!=this.neutralFences.indexOf(e)?e==t:this.openClosePairs[e]==t||this.topBottomPairs[e]==t},sre.SemanticAttr.prototype.initMeaning_=function(){for(var e,t={},n=0;e=this.symbolSetToSemantic_[n];n++)e.set.forEach(function(n){t[n]={role:e.role||sre.SemanticAttr.Role.UNKNOWN,type:e.type||sre.SemanticAttr.Type.UNKNOWN,font:e.font||sre.SemanticAttr.Font.UNKNOWN}});return t},sre.SemanticAttr.prototype.lookupMeaning_=function(e){return this.meaning_[e]||{role:sre.SemanticAttr.Role.UNKNOWN,type:sre.SemanticAttr.Type.UNKNOWN,font:sre.SemanticAttr.Font.UNKNOWN}},sre.SemanticNode=function(e){this.id=e,this.mathml=[],this.parent=null,this.type=sre.SemanticAttr.Type.UNKNOWN,this.role=sre.SemanticAttr.Role.UNKNOWN,this.font=sre.SemanticAttr.Font.UNKNOWN,this.embellished=null,this.fencePointer="",this.childNodes=[],this.textContent="",this.mathmlTree=null,this.contentNodes=[],this.annotation={},this.attributes={}},sre.SemanticNode.prototype.querySelectorAll=function(e){for(var s,t=[],n=0;s=this.childNodes[n];n++)t=t.concat(s.querySelectorAll(e));for(n=0;s=this.contentNodes[n];n++)t=t.concat(s.querySelectorAll(e));return e(this)&&t.unshift(this),t},sre.SemanticNode.Attribute={EMBELLISHED:"embellished",FENCEPOINTER:"fencepointer",FONT:"font",ID:"id",ANNOTATION:"annotation",ROLE:"role",TYPE:"type",CHILDREN:"children",CONTENT:"content",TEXT:"$t"},sre.SemanticNode.prototype.xml=function(e,t){var s=function(n,s){s=s.map(function(n){return n.xml(e,t)}),n=e.createElementNS("",n);for(var o,i=0;o=s[i];i++)n.appendChild(o);return n},n=e.createElementNS("",this.type);return t||this.xmlAttributes_(n),n.textContent=this.textContent,0<this.contentNodes.length&&n.appendChild(s(sre.SemanticNode.Attribute.CONTENT,this.contentNodes)),0<this.childNodes.length&&n.appendChild(s(sre.SemanticNode.Attribute.CHILDREN,this.childNodes)),n},sre.SemanticNode.prototype.toString=function(e){var t=new sre.SystemExternal.xmldom.XMLSerializer,n=(new sre.SystemExternal.xmldom.DOMParser).parseFromString("<snode/>","text/xml");return t.serializeToString(this.xml(n,e))},sre.SemanticNode.prototype.xmlAttributes_=function(e){for(var t,s=this.allAttributes(),n=0;t=s[n];n++)e.setAttribute(t[0],t[1]);this.addExternalAttributes_(e)},sre.SemanticNode.prototype.allAttributes=function(){var e=[];return e.push([sre.SemanticNode.Attribute.ROLE,this.role]),this.font!=sre.SemanticAttr.Font.UNKNOWN&&e.push([sre.SemanticNode.Attribute.FONT,this.font]),Object.keys(this.annotation).length&&e.push([sre.SemanticNode.Attribute.ANNOTATION,this.xmlAnnotation()]),this.embellished&&e.push([sre.SemanticNode.Attribute.EMBELLISHED,this.embellished]),this.fencePointer&&e.push([sre.SemanticNode.Attribute.FENCEPOINTER,this.fencePointer]),e.push([sre.SemanticNode.Attribute.ID,this.id]),e},sre.SemanticNode.prototype.addExternalAttributes_=function(e){for(var t in this.attributes)e.setAttribute(t,this.attributes[t])},sre.SemanticNode.prototype.xmlAnnotation=function(){var e,t=[];for(e in this.annotation)this.annotation[e].forEach(function(n){t.push(e+":"+n)});return t.join(";")},sre.SemanticNode.prototype.toJson=function(){e={},e[sre.SemanticNode.Attribute.TYPE]=this.type;for(var e,t,s=this.allAttributes(),n=0;t=s[n];n++)e[t[0]]=t[1].toString();return this.textContent&&(e[sre.SemanticNode.Attribute.TEXT]=this.textContent),this.childNodes.length&&(e[sre.SemanticNode.Attribute.CHILDREN]=this.childNodes.map(function(e){return e.toJson()})),this.contentNodes.length&&(e[sre.SemanticNode.Attribute.CONTENT]=this.contentNodes.map(function(e){return e.toJson()})),e},sre.SemanticNode.prototype.updateContent=function(e,t){t=t?e.replace(/^[ \f\n\r\t\v\u200b]*/,"").replace(/[ \f\n\r\t\v\u200b]*$/,""):e.trim(),e=e&&!t?e:t,this.textContent!=e&&(t=sre.SemanticAttr.lookupMeaning(e),this.textContent=e,this.role=t.role,this.type=t.type,this.font=t.font)},sre.SemanticNode.prototype.addMathmlNodes=function(e){for(var t,n=0;t=e[n];n++)-1==this.mathml.indexOf(t)&&this.mathml.push(t)},sre.SemanticNode.prototype.removeMathmlNodes_=function(e){for(var t,n=this.mathml,s=0;t=e[s];s++)t=n.indexOf(t),-1!=t&&n.splice(t,1);this.mathml=n},sre.SemanticNode.prototype.appendChild=function(e){this.childNodes.push(e),this.addMathmlNodes(e.mathml),e.parent=this},sre.SemanticNode.prototype.replaceChild=function(e,t){var s,n=this.childNodes.indexOf(e);-1!=n&&(e.parent=null,t.parent=this,this.childNodes[n]=t,n=e.mathml.filter(function(e){return-1==t.mathml.indexOf(e)}),s=t.mathml.filter(function(t){return-1==e.mathml.indexOf(t)}),this.removeMathmlNodes_(n),this.addMathmlNodes(s))},sre.SemanticNode.prototype.appendContentNode=function(e){e&&(this.contentNodes.push(e),this.addMathmlNodes(e.mathml),e.parent=this)},sre.SemanticNode.prototype.removeContentNode=function(e){e&&(e=this.contentNodes.indexOf(e),-1!=e&&this.contentNodes.slice(e,1))},sre.SemanticNode.prototype.equals=function(e){if(!e||this.type!==e.type||this.role!==e.role||this.textContent!==e.textContent||this.childNodes.length!==e.childNodes.length||this.contentNodes.length!==e.contentNodes.length)return!1;for(var n,s,t=0;n=this.childNodes[t],s=e.childNodes[t];t++)if(!n.equals(s))return!1;for(t=0;n=this.contentNodes[t],s=e.contentNodes[t];t++)if(!n.equals(s))return!1;return!0},sre.SemanticNode.prototype.displayTree=function(){console.info(this.displayTree_(0))},sre.SemanticNode.prototype.displayTree_=function(e){e++;var s,o,n=Array(e).join("  "),t="";t+=`
`+n+this.toString(),t+=`
`+n+"MathmlTree:",t+=`
`+n+this.mathmlTreeString_(),t+=`
`+n+"MathML:";for(s=0;o=this.mathml[s];s++)t+=`
`+n+o.toString();return t+=`
`+n+"Begin Content",this.contentNodes.forEach(function(n){t+=n.displayTree_(e)}),t+=`
`+n+"End Content",t+=`
`+n+"Begin Children",this.childNodes.forEach(function(n){t+=n.displayTree_(e)}),t+=`
`+n+"End Children"},sre.SemanticNode.prototype.mathmlTreeString_=function(){return this.mathmlTree?this.mathmlTree.toString():"EMPTY"},sre.SemanticNode.prototype.addAnnotation=function(e,t){t&&this.addAnnotation_(e,t)},sre.SemanticNode.prototype.addAnnotation_=function(e,t){var n=this.annotation[e];n?n.push(t):this.annotation[e]=[t]},sre.SemanticNode.prototype.getAnnotation=function(e){return(e=this.annotation[e])||[]},sre.SemanticNode.prototype.hasAnnotation=function(e,t){return!!(e=this.annotation[e])&&-1!==e.indexOf(t)},sre.SemanticNode.prototype.parseAnnotation=function(e){e=e.split(";");for(var t,n=0,s=e.length;n<s;n++)t=e[n].split(":"),this.addAnnotation(t[0],t[1])},sre.SemanticNode.prototype.meaning=function(){return{type:this.type,role:this.role,font:this.font}},sre.SemanticAnnotator=function(e,t){this.domain=e,this.func=t,this.name=e},sre.SemanticAnnotator.prototype.annotate=function(e){e.childNodes.forEach(goog.bind(this.annotate,this)),e.addAnnotation(this.domain,this.func(e))},sre.SemanticVisitor=function(e,t,n){this.domain=e,this.func=t,this.name=e,this.def=n||{}},sre.SemanticVisitor.prototype.visit=function(e,t){t=this.func(e,t),e.addAnnotation(this.domain,t[0]);for(var n,s=0;n=e.childNodes[s];s++)t=this.visit(n,t[1]);return t},sre.SemanticAnnotations=function(){this.annotators={},this.visitors={},this.counter=0},goog.addSingletonGetter(sre.SemanticAnnotations),sre.SemanticAnnotations.prototype.register=function(e){e.name=e.domain+this.counter++,(e instanceof sre.SemanticAnnotator?this.annotators:this.visitors)[e.name]=e},sre.SemanticAnnotations.prototype.unregister=function(e){delete this.annotators[e],delete this.visitors[e]},sre.SemanticAnnotations.prototype.annotate=function(e){for(var n in this.annotators)this.annotators[n].annotate(e);for(var t in this.visitors)this.visitors[t].visit(e,this.visitors[t].def)},sre.SemanticOrdering=function(){this.comparators=[]},goog.addSingletonGetter(sre.SemanticOrdering),sre.SemanticOrdering.prototype.add=function(e){this.comparators.push(e)},sre.SemanticOrdering.prototype.apply=function(e,t){for(var n,s=0;n=this.comparators[s];s++)if(n=n.compare(e,t),0!==n)return n;return 0},sre.SemanticOrdering.prototype.sort=function(e){e.sort(goog.bind(this.apply,this))},sre.SemanticOrdering.prototype.reduce=function(e){if(1>=e.length)return e;e=e.slice(),this.sort(e);var t,n=[];do t=e.pop(),n.push(t);while(t&&e.length&&0===this.apply(e[e.length-1],t))return n},sre.SemanticComparator=function(e,t){this.comparator=e,this.type=t||null,sre.SemanticOrdering.getInstance().add(this)},sre.SemanticComparator.prototype.compare=function(e,t){return this.type&&this.type===e.type&&this.type===t.type?this.comparator(e,t):0},sre.SemanticOrdering.simpleFunction=function(e,t){return e.role===sre.SemanticAttr.Role.SIMPLEFUNC?1:t.role===sre.SemanticAttr.Role.SIMPLEFUNC?-1:0},new sre.SemanticComparator(sre.SemanticOrdering.simpleFunction,sre.SemanticAttr.Type.IDENTIFIER),sre.SemanticDefault=function(){this.map_={}},sre.SemanticDefault.prototype.add=function(e,t){this.map_[sre.SemanticDefault.key_(e,t.font)]=t},sre.SemanticDefault.prototype.addNode=function(e){this.add(e.textContent,e.meaning())},sre.SemanticDefault.prototype.retrieve=function(e,t){return this.map_[sre.SemanticDefault.key_(e,t)]},sre.SemanticDefault.prototype.retrieveNode=function(e){return this.retrieve(e.textContent,e.font)},sre.SemanticDefault.key_=function(e,t){return t?e+":"+t:e},sre.SemanticDefault.prototype.size=function(){return Object.keys(this.map_).length},sre.SemanticCollator_=function(){this.map_={}},sre.SemanticCollator_.prototype.add=function(e,t){e=sre.SemanticDefault.key_(e,t.font);var n=this.map_[e];n?n.push(t):this.map_[e]=[t]},sre.SemanticCollator_.prototype.addNode=function(e){this.add(e.textContent,e)},sre.SemanticCollator_.prototype.retrieve=function(e,t){return this.map_[sre.SemanticDefault.key_(e,t)]},sre.SemanticCollator_.prototype.retrieveNode=function(e){return this.retrieve(e.textContent,e.font)},sre.SemanticCollator_.prototype.copyCollator=goog.abstractMethod,sre.SemanticCollator_.prototype.copy=function(){var e,t=this.copyCollator();for(e in this.map_)t.map_[e]=this.map_[e];return t},sre.SemanticCollator_.prototype.minimize=function(){for(var e in this.map_)1===this.map_[e].length&&delete this.map_[e]},sre.SemanticCollator_.prototype.reduce=function(){for(var e in this.map_)1!==this.map_[e].length&&(this.map_[e]=sre.SemanticOrdering.getInstance().reduce(this.map_[e]))},sre.SemanticCollator_.prototype.minimalCollator=function(){var t,e=this.copy();for(t in e.map_)1===e.map_[t].length&&delete e.map_[t];return e},sre.SemanticCollator_.prototype.isMultiValued=function(){for(var e in this.map_)if(1<this.map_[e].length)return!0;return!1},sre.SemanticCollator_.prototype.isEmpty=function(){return!Object.keys(this.map_).length},sre.SemanticNodeCollator=function(){sre.SemanticCollator_.call(this)},goog.inherits(sre.SemanticNodeCollator,sre.SemanticCollator_),sre.SemanticNodeCollator.prototype.copyCollator=function(){return new sre.SemanticNodeCollator},sre.SemanticNodeCollator.prototype.toString=function(){t=[];for(e in this.map_){for(var e,t,n,i=Array(e.length+3).join(" "),a=this.map_[e],s=[],o=0;n=a[o];o++)s.push(n.toString());t.push(e+": "+s.join(`
`+i))}return t.join(`
`)},sre.SemanticNodeCollator.prototype.collateMeaning=function(){var e,t=new sre.SemanticMeaningCollator;for(e in this.map_)t.map_[e]=this.map_[e].map(function(e){return e.meaning()});return t},sre.SemanticMeaningCollator=function(){sre.SemanticCollator_.call(this)},goog.inherits(sre.SemanticMeaningCollator,sre.SemanticCollator_),sre.SemanticMeaningCollator.prototype.copyCollator=function(){return new sre.SemanticMeaningCollator},sre.SemanticMeaningCollator.prototype.add=function(e,t){var n=this.retrieve(e,t.font);n&&n.find(function(e){return sre.SemanticAttr.equal(e,t)})||sre.SemanticMeaningCollator.superClass_.add.call(this,e,t)},sre.SemanticMeaningCollator.prototype.addNode=function(e){this.add(e.textContent,e.meaning())},sre.SemanticMeaningCollator.prototype.toString=function(){n=[];for(e in this.map_){for(var e,t,n,i=Array(e.length+3).join(" "),a=this.map_[e],s=[],o=0;t=a[o];o++)s.push("{type: "+t.type+", role: "+t.role+", font: "+t.font+"}");n.push(e+": "+s.join(`
`+i))}return n.join(`
`)},sre.SemanticMeaningCollator.prototype.default=function(){var e,t=new sre.SemanticDefault;for(e in this.map_)1===this.map_[e].length&&(t.map_[e]=this.map_[e][0]);return t},sre.SemanticMeaningCollator.prototype.newDefault=function(){var e,t=this.default();return this.reduce(),e=this.default(),t.size()!==e.size()?e:null},sre.SemanticNodeFactory=function(){this.idCounter_=-1,this.leafMap=new sre.SemanticNodeCollator,this.defaultMap=new sre.SemanticDefault},sre.SemanticNodeFactory.prototype.createNode_=function(e){return"undefined"!=typeof e?this.idCounter_=Math.max(this.idCounter_,e):e=++this.idCounter_,new sre.SemanticNode(e)},sre.SemanticNodeFactory.prototype.makeNode=function(e){return this.createNode_(e)},sre.SemanticNodeFactory.prototype.makeUnprocessed=function(e){var t=this.createNode_();return t.mathml=[e],t},sre.SemanticNodeFactory.prototype.makeEmptyNode=function(){var e=this.createNode_();return e.type=sre.SemanticAttr.Type.EMPTY,e},sre.SemanticNodeFactory.prototype.makeContentNode=function(e){var t=this.createNode_();return t.updateContent(e),t},sre.SemanticNodeFactory.prototype.makeMultipleContentNodes=function(e,t){for(var n=[],s=0;s<e;s++)n.push(this.makeContentNode(t));return n},sre.SemanticNodeFactory.prototype.makeLeafNode=function(e,t){return e?(e=this.makeContentNode(e),e.font=t||e.font,(t=this.defaultMap.retrieveNode(e))&&(e.type=t.type,e.role=t.role,e.font=t.font),this.leafMap.addNode(e),e):this.makeEmptyNode()},sre.SemanticNodeFactory.prototype.makeBranchNode=function(e,t,n,s){var o=this.createNode_();return s&&o.updateContent(s),o.type=e,o.childNodes=t,o.contentNodes=n,t.concat(n).forEach(function(e){e.parent=o,o.addMathmlNodes(e.mathml)}),o},sre.SemanticParser=function(){},sre.SemanticParser.prototype.parse=function(){},sre.SemanticParser.prototype.parseList=function(){},sre.SemanticParser.prototype.getFactory=function(){},sre.SemanticParser.prototype.setFactory=function(){},sre.SemanticParser.prototype.getType=function(){},sre.SemanticAbstractParser=function(e){this.type_=e,this.factory_=new sre.SemanticNodeFactory},sre.SemanticAbstractParser.prototype.getFactory=function(){return this.factory_},sre.SemanticAbstractParser.prototype.setFactory=function(e){this.factory_=e},sre.SemanticAbstractParser.prototype.getType=function(){return this.type_},sre.SemanticAbstractParser.prototype.parse=goog.abstractMethod,sre.SemanticAbstractParser.prototype.parseList=function(e){for(var t,n=[],s=0;t=e[s];s++)n.push(this.parse(t));return n},sre.SemanticPred={},sre.SemanticPred.isAttribute=function(e,t){return function(n){n=n[e];a:switch(e){case"role":var s=sre.SemanticAttr.Role[t];break a;case"font":s=sre.SemanticAttr.Font[t];break a;default:s=sre.SemanticAttr.Type[t]}return n===s}},sre.SemanticPred.isAccent=function(e){return sre.SemanticPred.isAttribute("type","FENCE")(e)||sre.SemanticPred.isAttribute("type","PUNCTUATION")(e)||sre.SemanticPred.isAttribute("type","OPERATOR")(e)||sre.SemanticPred.isAttribute("type","RELATION")(e)||sre.SemanticPred.isAttribute("type","IDENTIFIER")(e)&&sre.SemanticPred.isAttribute("role","UNKNOWN")(e)&&!e.textContent.match(new RegExp(sre.SemanticAttr.getInstance().allLetters.join("|")))},sre.SemanticPred.isSimpleFunctionScope=function(e){return e=e.childNodes,0===e.length||!(1<e.length)&&(e=e[0],e.type!==sre.SemanticAttr.Type.INFIXOP||e.role===sre.SemanticAttr.Role.IMPLICIT&&!e.childNodes.some(sre.SemanticPred.isAttribute("type","INFIXOP")))},sre.SemanticPred.isPrefixFunctionBoundary=function(e){return sre.SemanticPred.isOperator(e)||sre.SemanticPred.isAttribute("type","APPL")(e)||sre.SemanticPred.isGeneralFunctionBoundary(e)},sre.SemanticPred.isBigOpBoundary=function(e){return sre.SemanticPred.isOperator(e)||sre.SemanticPred.isGeneralFunctionBoundary(e)},sre.SemanticPred.isIntegralDxBoundary=function(e,t){return!!t&&sre.SemanticPred.isAttribute("type","IDENTIFIER")(t)&&sre.SemanticAttr.isCharacterD(e.textContent)},sre.SemanticPred.isIntegralDxBoundarySingle=function(e){if(sre.SemanticPred.isAttribute("type","IDENTIFIER")(e)){var t=e.textContent[0];return t&&e.textContent[1]&&sre.SemanticAttr.isCharacterD(t)}return!1},sre.SemanticPred.isGeneralFunctionBoundary=function(e){return sre.SemanticPred.isRelation(e)||sre.SemanticPred.isPunctuation(e)},sre.SemanticPred.isEmbellished=function(e){return e.embellished?e.embellished:sre.SemanticAttr.isEmbellishedType(e.type)?e.type:null},sre.SemanticPred.isOperator=function(e){return sre.SemanticPred.isAttribute("type","OPERATOR")(e)||sre.SemanticPred.isAttribute("embellished","OPERATOR")(e)},sre.SemanticPred.isRelation=function(e){return sre.SemanticPred.isAttribute("type","RELATION")(e)||sre.SemanticPred.isAttribute("embellished","RELATION")(e)},sre.SemanticPred.isPunctuation=function(e){return sre.SemanticPred.isAttribute("type","PUNCTUATION")(e)||sre.SemanticPred.isAttribute("embellished","PUNCTUATION")(e)},sre.SemanticPred.isFence=function(e){return sre.SemanticPred.isAttribute("type","FENCE")(e)||sre.SemanticPred.isAttribute("embellished","FENCE")(e)},sre.SemanticPred.isElligibleEmbellishedFence=function(e){if(!e||!sre.SemanticPred.isFence(e))return!1;if(!e.embellished)return!0;var t=function(e){return!e.embellished||!(!(!sre.SemanticPred.isAttribute("type","TENSOR")(e)||sre.SemanticPred.isAttribute("type","EMPTY")(e.childNodes[1])&&sre.SemanticPred.isAttribute("type","EMPTY")(e.childNodes[2])||sre.SemanticPred.isAttribute("type","EMPTY")(e.childNodes[3])&&sre.SemanticPred.isAttribute("type","EMPTY")(e.childNodes[4]))||sre.SemanticPred.isAttribute("role","CLOSE")(e)&&sre.SemanticPred.isAttribute("type","TENSOR")(e)||sre.SemanticPred.isAttribute("role","OPEN")(e)&&(sre.SemanticPred.isAttribute("type","SUBSCRIPT")(e)||sre.SemanticPred.isAttribute("type","SUPERSCRIPT")(e)))&&t(e.childNodes[0])};return t(e)},sre.SemanticPred.isTableOrMultiline=function(e){return!!e&&(sre.SemanticPred.isAttribute("type","TABLE")(e)||sre.SemanticPred.isAttribute("type","MULTILINE")(e))},sre.SemanticPred.tableIsMatrixOrVector=function(e){return!!e&&sre.SemanticPred.isFencedElement(e)&&sre.SemanticPred.isTableOrMultiline(e.childNodes[0])},sre.SemanticPred.isFencedElement=function(e){return!!e&&sre.SemanticPred.isAttribute("type","FENCED")(e)&&(sre.SemanticPred.isAttribute("role","LEFTRIGHT")(e)||sre.SemanticPred.isAttribute("role","NEUTRAL")(e))&&1===e.childNodes.length},sre.SemanticPred.tableIsCases=function(e,t){return 0<t.length&&sre.SemanticPred.isAttribute("role","OPENFENCE")(t[t.length-1])},sre.SemanticPred.tableIsMultiline=function(e){return e.childNodes.every(function(e){return 1>=e.childNodes.length})},sre.SemanticPred.isBinomial=function(e){return 2===e.childNodes.length},sre.SemanticPred.isLimitBase=function(e){return sre.SemanticPred.isAttribute("type","LARGEOP")(e)||sre.SemanticPred.isAttribute("type","LIMBOTH")(e)||sre.SemanticPred.isAttribute("type","LIMLOWER")(e)||sre.SemanticPred.isAttribute("type","LIMUPPER")(e)||sre.SemanticPred.isAttribute("type","FUNCTION")(e)&&sre.SemanticPred.isAttribute("role","LIMFUNC")(e)},sre.SemanticPred.isSimpleFunctionHead=function(e){return e.type===sre.SemanticAttr.Type.IDENTIFIER||e.role===sre.SemanticAttr.Role.LATINLETTER||e.role===sre.SemanticAttr.Role.GREEKLETTER||e.role===sre.SemanticAttr.Role.OTHERLETTER},sre.SemanticPred.singlePunctAtPosition=function(e,t,n){return 1===t.length&&(e[n].type===sre.SemanticAttr.Type.PUNCTUATION||e[n].embellished===sre.SemanticAttr.Type.PUNCTUATION)&&e[n]===t[0]},sre.SemanticPred.isSimpleFunction=function(e){return sre.SemanticPred.isAttribute("type","IDENTIFIER")(e)&&sre.SemanticPred.isAttribute("role","SIMPLEFUNC")(e)},sre.SemanticPred.isLeftBrace=function(e){var t=["{","﹛","｛"];return!!e&&-1!==t.indexOf(e.textContent)},sre.SemanticPred.isRightBrace=function(e){var t=["}","﹜","｝"];return!!e&&-1!==t.indexOf(e.textContent)},sre.SemanticPred.isSetNode=function(e){return sre.SemanticPred.isLeftBrace(e.contentNodes[0])&&sre.SemanticPred.isRightBrace(e.contentNodes[1])},sre.SemanticPred.illegalSingleton_=[sre.SemanticAttr.Type.PUNCTUATION,sre.SemanticAttr.Type.PUNCTUATED,sre.SemanticAttr.Type.RELSEQ,sre.SemanticAttr.Type.MULTIREL,sre.SemanticAttr.Type.TABLE,sre.SemanticAttr.Type.MULTILINE,sre.SemanticAttr.Type.CASES,sre.SemanticAttr.Type.INFERENCE],sre.SemanticPred.scriptedElement_=[sre.SemanticAttr.Type.LIMUPPER,sre.SemanticAttr.Type.LIMLOWER,sre.SemanticAttr.Type.LIMBOTH,sre.SemanticAttr.Type.SUBSCRIPT,sre.SemanticAttr.Type.SUPERSCRIPT,sre.SemanticAttr.Type.UNDERSCORE,sre.SemanticAttr.Type.OVERSCORE,sre.SemanticAttr.Type.TENSOR],sre.SemanticPred.isSingletonSetContent=function(e){var t=e.type;return!(-1!==sre.SemanticPred.illegalSingleton_.indexOf(t)||t===sre.SemanticAttr.Type.INFIXOP&&e.role!==sre.SemanticAttr.Role.IMPLICIT)&&(t===sre.SemanticAttr.Type.FENCED?e.role!==sre.SemanticAttr.Role.LEFTRIGHT||sre.SemanticPred.isSingletonSetContent(e.childNodes[0]):-1===sre.SemanticPred.scriptedElement_.indexOf(t)||sre.SemanticPred.isSingletonSetContent(e.childNodes[0]))},sre.SemanticPred.isNumber=function(e){return e.type===sre.SemanticAttr.Type.NUMBER&&(e.role===sre.SemanticAttr.Role.INTEGER||e.role===sre.SemanticAttr.Role.FLOAT)},sre.SemanticPred.isUnitCounter=function(e){return sre.SemanticPred.isNumber(e)||e.role===sre.SemanticAttr.Role.VULGAR||e.role===sre.SemanticAttr.Role.MIXED},sre.SemanticPred.isPureUnit=function(e){var t=e.childNodes;return e.role===sre.SemanticAttr.Role.UNIT&&(!t.length||t[0].role===sre.SemanticAttr.Role.UNIT)},sre.SemanticPred.isImplicit=function(e){return e.role===sre.SemanticAttr.Role.IMPLICIT||e.role===sre.SemanticAttr.Role.UNIT&&!!e.contentNodes.length&&e.contentNodes[0].textContent===sre.SemanticAttr.invisibleTimes()},sre.SemanticProcessor=function(){this.factory_=new sre.SemanticNodeFactory},goog.addSingletonGetter(sre.SemanticProcessor),sre.SemanticProcessor.prototype.setNodeFactory=function(e){this.factory_=e},sre.SemanticProcessor.prototype.getNodeFactory=function(){return this.factory_},sre.SemanticProcessor.prototype.identifierNode=function(e,t,n){if("MathML-Unit"===n)e.type=sre.SemanticAttr.Type.IDENTIFIER,e.role=sre.SemanticAttr.Role.UNIT;else if(!t&&1===e.textContent.length&&(e.role===sre.SemanticAttr.Role.INTEGER||e.role===sre.SemanticAttr.Role.LATINLETTER||e.role===sre.SemanticAttr.Role.GREEKLETTER)&&e.font===sre.SemanticAttr.Font.NORMAL)return e.font=sre.SemanticAttr.Font.ITALIC,e;return e.type===sre.SemanticAttr.Type.UNKNOWN&&(e.type=sre.SemanticAttr.Type.IDENTIFIER),sre.SemanticProcessor.exprFont_(e),e},sre.SemanticProcessor.prototype.implicitNode_=function(e){var n=sre.SemanticProcessor.getInstance().factory_.makeMultipleContentNodes(e.length-1,sre.SemanticAttr.invisibleTimes()),t=sre.SemanticProcessor.getInstance().infixNode_(e,n[0]);return t.role=sre.SemanticAttr.Role.IMPLICIT,n.forEach(function(e){e.parent=t}),t.contentNodes=n,t},sre.SemanticProcessor.prototype.implicitNode=function(e){return e=sre.SemanticProcessor.getInstance().getMixedNumbers_(e),e=sre.SemanticProcessor.getInstance().combineUnits_(e),1===e.length?e[0]:sre.SemanticProcessor.getInstance().implicitNode_(e)},sre.SemanticProcessor.prototype.infixNode_=function(e,t){return e=sre.SemanticProcessor.getInstance().factory_.makeBranchNode(sre.SemanticAttr.Type.INFIXOP,e,[t],sre.SemanticProcessor.getEmbellishedInner_(t).textContent),e.role=t.role,this.propagateSimpleFunction(e),e},sre.SemanticProcessor.prototype.explicitMixed_=function(e){if(t=sre.SemanticProcessor.partitionNodes_(e,function(e){return e.textContent===sre.SemanticAttr.invisiblePlus()}),!t.rel.length)return e;e=[];for(s=0;o=t.rel[s];s++){var t,s,o,n=t.comp[s],a=t.comp[s+1],i=n.length-1;n[i]&&a[0]&&sre.SemanticPred.isAttribute("type","NUMBER")(n[i])&&!sre.SemanticPred.isAttribute("role","MIXED")(n[i])&&sre.SemanticPred.isAttribute("type","FRACTION")(a[0])?(o=sre.SemanticProcessor.getInstance().factory_.makeBranchNode(sre.SemanticAttr.Type.NUMBER,[n[i],a[0]],[]),o.role=sre.SemanticAttr.Role.MIXED,e=e.concat(n.slice(0,i)),e.push(o),a.shift()):(e=e.concat(n),e.push(o))}return e.concat(t.comp[t.comp.length-1])},sre.SemanticProcessor.prototype.concatNode_=function(e,t,n){if(0===t.length)return e;var s=t.map(function(e){return sre.SemanticProcessor.getEmbellishedInner_(e).textContent}).join(" ");return e=sre.SemanticProcessor.getInstance().factory_.makeBranchNode(n,[e],t,s),1<t.length&&(e.role=sre.SemanticAttr.Role.MULTIOP),e},sre.SemanticProcessor.prototype.prefixNode_=function(e,t){for(t=sre.SemanticProcessor.partitionNodes_(t,sre.SemanticPred.isAttribute("role","SUBTRACTION")),e=sre.SemanticProcessor.getInstance().concatNode_(e,t.comp.pop(),sre.SemanticAttr.Type.PREFIXOP),1===e.contentNodes.length&&e.contentNodes[0].role===sre.SemanticAttr.Role.ADDITION&&"+"===e.contentNodes[0].textContent&&(e.role=sre.SemanticAttr.Role.POSITIVE);0<t.rel.length;)e=sre.SemanticProcessor.getInstance().concatNode_(e,[t.rel.pop()],sre.SemanticAttr.Type.PREFIXOP),e.role=sre.SemanticAttr.Role.NEGATIVE,e=sre.SemanticProcessor.getInstance().concatNode_(e,t.comp.pop(),sre.SemanticAttr.Type.PREFIXOP);return e},sre.SemanticProcessor.prototype.postfixNode_=function(e,t){return t.length?sre.SemanticProcessor.getInstance().concatNode_(e,t,sre.SemanticAttr.Type.POSTFIXOP):e},sre.SemanticProcessor.prototype.text=function(e,t){return e.type=sre.SemanticAttr.Type.TEXT,"MS"===t&&(e.role=sre.SemanticAttr.Role.STRING),sre.SemanticProcessor.exprFont_(e),e},sre.SemanticProcessor.prototype.row=function(e){return e=e.filter(function(e){return!sre.SemanticPred.isAttribute("type","EMPTY")(e)}),0===e.length?sre.SemanticProcessor.getInstance().factory_.makeEmptyNode():(e=sre.SemanticProcessor.getInstance().getFencesInRow_(e),e=sre.SemanticProcessor.getInstance().tablesInRow(e),e=sre.SemanticProcessor.getInstance().getPunctuationInRow_(e),e=sre.SemanticProcessor.getInstance().getTextInRow_(e),e=sre.SemanticProcessor.getInstance().getFunctionsInRow_(e),sre.SemanticProcessor.getInstance().relationsInRow_(e))},sre.SemanticProcessor.prototype.combineUnits_=function(e){if(n=sre.SemanticProcessor.partitionNodes_(e,function(e){return!sre.SemanticPred.isAttribute("role","UNIT")(e)}),e.length===n.rel.length)return n.rel;e=[];do{var n,t=n.comp.shift(),i=n.rel.shift(),s=null,o=e.pop();o&&(t.length&&sre.SemanticPred.isUnitCounter(o)?t.unshift(o):e.push(o)),1===t.length&&(s=t.pop()),1<t.length&&(s=sre.SemanticProcessor.getInstance().implicitNode_(t),s.role=sre.SemanticAttr.Role.UNIT),s&&e.push(s),i&&e.push(i)}while(i)return e},sre.SemanticProcessor.prototype.getMixedNumbers_=function(e){if(n=sre.SemanticProcessor.partitionNodes_(e,function(e){return sre.SemanticPred.isAttribute("type","FRACTION")(e)&&sre.SemanticPred.isAttribute("role","VULGAR")(e)}),!n.rel.length)return e;e=[];for(i=0;s=n.rel[i];i++){var n,s,i,t=n.comp[i],o=t.length-1;t[o]&&sre.SemanticPred.isAttribute("type","NUMBER")(t[o])&&(sre.SemanticPred.isAttribute("role","INTEGER")(t[o])||sre.SemanticPred.isAttribute("role","FLOAT")(t[o]))?(s=sre.SemanticProcessor.getInstance().factory_.makeBranchNode(sre.SemanticAttr.Type.NUMBER,[t[o],s],[]),s.role=sre.SemanticAttr.Role.MIXED,e=e.concat(t.slice(0,o)),e.push(s)):(e=e.concat(t),e.push(s))}return e.concat(n.comp[n.comp.length-1])},sre.SemanticProcessor.prototype.getTextInRow_=function(e){if(1>=e.length)return e;var t,n,s=sre.SemanticProcessor.partitionNodes_(e,sre.SemanticPred.isAttribute("type","TEXT"));if(0===s.rel.length)return e;e=[],t=s.comp[0],0<t.length&&e.push(sre.SemanticProcessor.getInstance().row(t));for(n=0;t=s.rel[n];n++)e.push(t),t=s.comp[n+1],0<t.length&&e.push(sre.SemanticProcessor.getInstance().row(t));return[sre.SemanticProcessor.getInstance().dummyNode_(e)]},sre.SemanticProcessor.prototype.relationsInRow_=function(e){var t=sre.SemanticProcessor.partitionNodes_(e,sre.SemanticPred.isRelation),n=t.rel[0];return n?1===e.length?e[0]:(e=t.comp.map(goog.bind(sre.SemanticProcessor.getInstance().operationsInRow_,this)),t.rel.some(function(e){return!e.equals(n)})?(e=sre.SemanticProcessor.getInstance().factory_.makeBranchNode(sre.SemanticAttr.Type.MULTIREL,e,t.rel),t.rel.every(function(e){return e.role===n.role})&&(e.role=n.role),e):(e=sre.SemanticProcessor.getInstance().factory_.makeBranchNode(sre.SemanticAttr.Type.RELSEQ,e,t.rel,sre.SemanticProcessor.getEmbellishedInner_(n).textContent),e.role=n.role,e)):sre.SemanticProcessor.getInstance().operationsInRow_(e)},sre.SemanticProcessor.prototype.operationsInRow_=function(e){if(0===e.length)return sre.SemanticProcessor.getInstance().factory_.makeEmptyNode();if(e=this.explicitMixed_(e),1===e.length)return e[0];for(var t=[];0<e.length&&sre.SemanticPred.isOperator(e[0]);)t.push(e.shift());return 0===e.length?sre.SemanticProcessor.getInstance().prefixNode_(t.pop(),t):1===e.length?sre.SemanticProcessor.getInstance().prefixNode_(e[0],t):(e=sre.SemanticProcessor.sliceNodes_(e,sre.SemanticPred.isOperator),t=sre.SemanticProcessor.getInstance().prefixNode_(sre.SemanticProcessor.getInstance().implicitNode(e.head),t),e.div?sre.SemanticProcessor.getInstance().operationsTree_(e.tail,t,e.div):t)},sre.SemanticProcessor.prototype.operationsTree_=function(e,t,n,s){return s=s||[],0===e.length?(s.unshift(n),t.type===sre.SemanticAttr.Type.INFIXOP?(s=sre.SemanticProcessor.getInstance().postfixNode_(t.childNodes.pop(),s),t.appendChild(s),t):sre.SemanticProcessor.getInstance().postfixNode_(t,s)):(e=sre.SemanticProcessor.sliceNodes_(e,sre.SemanticPred.isOperator),0===e.head.length?(s.push(e.div),sre.SemanticProcessor.getInstance().operationsTree_(e.tail,t,n,s)):(s=sre.SemanticProcessor.getInstance().prefixNode_(sre.SemanticProcessor.getInstance().implicitNode(e.head),s),t=sre.SemanticProcessor.getInstance().appendOperand_(t,n,s),e.div?sre.SemanticProcessor.getInstance().operationsTree_(e.tail,t,e.div,[]):t))},sre.SemanticProcessor.prototype.appendOperand_=function(e,t,n){if(e.type!==sre.SemanticAttr.Type.INFIXOP)return sre.SemanticProcessor.getInstance().infixNode_([e,n],t);var s=this.appendDivisionOp_(e,t,n);return s?s:sre.SemanticProcessor.getInstance().appendExistingOperator_(e,t,n)?e:t.role===sre.SemanticAttr.Role.MULTIPLICATION?sre.SemanticProcessor.getInstance().appendMultiplicativeOp_(e,t,n):sre.SemanticProcessor.getInstance().appendAdditiveOp_(e,t,n)},sre.SemanticProcessor.prototype.appendDivisionOp_=function(e,t,n){return t.role===sre.SemanticAttr.Role.DIVISION?sre.SemanticPred.isImplicit(e)?sre.SemanticProcessor.getInstance().infixNode_([e,n],t):this.appendLastOperand_(e,t,n):e.role===sre.SemanticAttr.Role.DIVISION?this.infixNode_([e,n],t):null},sre.SemanticProcessor.prototype.appendLastOperand_=function(e,t,n){for(var o=e,s=e.childNodes[e.childNodes.length-1];s&&s.type===sre.SemanticAttr.Type.INFIXOP&&!sre.SemanticPred.isImplicit(s);)o=s,s=o.childNodes[e.childNodes.length-1];return t=sre.SemanticProcessor.getInstance().infixNode_([o.childNodes.pop(),n],t),o.appendChild(t),e},sre.SemanticProcessor.prototype.appendMultiplicativeOp_=function(e,t,n){if(sre.SemanticPred.isImplicit(e))return sre.SemanticProcessor.getInstance().infixNode_([e,n],t);for(var o=e,s=e.childNodes[e.childNodes.length-1];s&&s.type===sre.SemanticAttr.Type.INFIXOP&&!sre.SemanticPred.isImplicit(s);)o=s,s=o.childNodes[e.childNodes.length-1];return t=sre.SemanticProcessor.getInstance().infixNode_([o.childNodes.pop(),n],t),o.appendChild(t),e},sre.SemanticProcessor.prototype.appendAdditiveOp_=function(e,t,n){return sre.SemanticProcessor.getInstance().infixNode_([e,n],t)},sre.SemanticProcessor.prototype.appendExistingOperator_=function(e,t,n){return!(!e||e.type!==sre.SemanticAttr.Type.INFIXOP||sre.SemanticPred.isImplicit(e))&&(e.contentNodes[0].equals(t)?(e.appendContentNode(t),e.appendChild(n),!0):sre.SemanticProcessor.getInstance().appendExistingOperator_(e.childNodes[e.childNodes.length-1],t,n))},sre.SemanticProcessor.prototype.getFencesInRow_=function(e){e=sre.SemanticProcessor.partitionNodes_(e,sre.SemanticPred.isFence),e=sre.SemanticProcessor.purgeFences_(e);var t=e.comp.shift();return sre.SemanticProcessor.getInstance().fences_(e.rel,e.comp,[],[t])},sre.SemanticProcessor.prototype.fences_=function(e,t,n,s){if(0===e.length&&0===n.length)return s[0];if(o=sre.SemanticPred.isAttribute("role","OPEN"),0===e.length){for(e=s.shift();0<n.length;){if(o(n[0]))t=n.shift(),sre.SemanticProcessor.fenceToPunct_(t),e.push(t);else{n=sre.SemanticProcessor.sliceNodes_(n,o);var o,i=n.head.length-1,a=sre.SemanticProcessor.getInstance().neutralFences_(n.head,s.slice(0,i));s=s.slice(i),e.push.apply(e,a),n.div&&n.tail.unshift(n.div),n=n.tail}e.push.apply(e,s.shift())}return e}return i=n[n.length-1],a=e[0].role,a===sre.SemanticAttr.Role.OPEN||a===sre.SemanticAttr.Role.NEUTRAL&&(!i||e[0].textContent!==i.textContent)?(n.push(e.shift()),(o=t.shift())&&s.push(o),sre.SemanticProcessor.getInstance().fences_(e,t,n,s)):i&&(a===sre.SemanticAttr.Role.CLOSE&&i.role===sre.SemanticAttr.Role.OPEN||a===sre.SemanticAttr.Role.NEUTRAL&&e[0].textContent===i.textContent)?(o=sre.SemanticProcessor.getInstance().horizontalFencedNode_(n.pop(),e.shift(),s.pop()),s.push(s.pop().concat([o],t.shift())),sre.SemanticProcessor.getInstance().fences_(e,t,n,s)):i&&a===sre.SemanticAttr.Role.CLOSE&&i.role===sre.SemanticAttr.Role.NEUTRAL&&n.some(o)?(n=sre.SemanticProcessor.sliceNodes_(n,o,!0),o=s.pop(),i=s.length-n.tail.length+1,a=sre.SemanticProcessor.getInstance().neutralFences_(n.tail,s.slice(i)),s=s.slice(0,i),o=sre.SemanticProcessor.getInstance().horizontalFencedNode_(n.div,e.shift(),s.pop().concat(a,o)),s.push(s.pop().concat([o],t.shift())),sre.SemanticProcessor.getInstance().fences_(e,t,n.head,s)):(o=e.shift(),sre.SemanticProcessor.fenceToPunct_(o),s.push(s.pop().concat([o],t.shift())),sre.SemanticProcessor.getInstance().fences_(e,t,n,s))},sre.SemanticProcessor.prototype.neutralFences_=function(e,t){if(0===e.length)return e;if(1===e.length)return sre.SemanticProcessor.fenceToPunct_(e[0]),e;var s=e.shift(),n=sre.SemanticProcessor.sliceNodes_(e,function(e){return sre.SemanticProcessor.getEmbellishedInner_(e).textContent==sre.SemanticProcessor.getEmbellishedInner_(s).textContent});return n.div?(t=sre.SemanticProcessor.getInstance().combineFencedContent_(s,n.div,n.head,t),0<n.tail.length?(e=t.shift(),n=sre.SemanticProcessor.getInstance().neutralFences_(n.tail,t),e.concat(n)):t[0]):(sre.SemanticProcessor.fenceToPunct_(s),n=t.shift(),n.unshift(s),n.concat(sre.SemanticProcessor.getInstance().neutralFences_(e,t)))},sre.SemanticProcessor.prototype.combineFencedContent_=function(e,t,n,s){if(0===n.length)return e=sre.SemanticProcessor.getInstance().horizontalFencedNode_(e,t,s.shift()),0<s.length?s[0].unshift(e):s=[[e]],s;var o=s.shift(),i=n.length-1,a=s.slice(0,i);return s=s.slice(i),i=s.shift(),n=sre.SemanticProcessor.getInstance().neutralFences_(n,a),o.push.apply(o,n),o.push.apply(o,i),e=sre.SemanticProcessor.getInstance().horizontalFencedNode_(e,t,o),0<s.length?s[0].unshift(e):s=[[e]],s},sre.SemanticProcessor.FENCE_TO_PUNCT_={},sre.SemanticProcessor.FENCE_TO_PUNCT_[sre.SemanticAttr.Role.NEUTRAL]=sre.SemanticAttr.Role.VBAR,sre.SemanticProcessor.FENCE_TO_PUNCT_[sre.SemanticAttr.Role.OPEN]=sre.SemanticAttr.Role.OPENFENCE,sre.SemanticProcessor.FENCE_TO_PUNCT_[sre.SemanticAttr.Role.CLOSE]=sre.SemanticAttr.Role.CLOSEFENCE,sre.SemanticProcessor.fenceToPunct_=function(e){var t=sre.SemanticProcessor.FENCE_TO_PUNCT_[e.role];if(t){for(;e.embellished;)e.embellished=sre.SemanticAttr.Type.PUNCTUATION,e.role=t,e=e.childNodes[0];e.type=sre.SemanticAttr.Type.PUNCTUATION,e.role=t}},sre.SemanticProcessor.prototype.horizontalFencedNode_=function(e,t,n){return n=sre.SemanticProcessor.getInstance().row(n),t=sre.SemanticProcessor.getInstance().factory_.makeBranchNode(sre.SemanticAttr.Type.FENCED,[n],[e,t]),e.role===sre.SemanticAttr.Role.OPEN?(this.classifyHorizontalFence_(t),this.propagateComposedFunction(t)):t.role=e.role,sre.SemanticProcessor.rewriteFencedNode_(t)},sre.SemanticProcessor.prototype.classifyHorizontalFence_=function(e){e.role=sre.SemanticAttr.Role.LEFTRIGHT;var n,s,t=e.childNodes;sre.SemanticPred.isSetNode(e)&&!(1<t.length)&&(0===t.length||t[0].type===sre.SemanticAttr.Type.EMPTY?e.role=sre.SemanticAttr.Role.SETEMPTY:(n=t[0].type,1===t.length&&sre.SemanticPred.isSingletonSetContent(t[0])?e.role=sre.SemanticAttr.Role.SETSINGLE:(s=t[0].role,n===sre.SemanticAttr.Type.PUNCTUATED&&s===sre.SemanticAttr.Role.SEQUENCE&&(t[0].contentNodes[0].role===sre.SemanticAttr.Role.COMMA?e.role=sre.SemanticAttr.Role.SETCOLLECT:1!==t[0].contentNodes.length||t[0].contentNodes[0].role!==sre.SemanticAttr.Role.VBAR&&t[0].contentNodes[0].role!==sre.SemanticAttr.Role.COLON||(e.role=sre.SemanticAttr.Role.SETEXT,this.setExtension_(e))))))},sre.SemanticProcessor.prototype.setExtension_=function(e){(e=e.childNodes[0].childNodes[0])&&e.type===sre.SemanticAttr.Type.INFIXOP&&1===e.contentNodes.length&&e.contentNodes[0].role===sre.SemanticAttr.Role.UNKNOWN&&(e.contentNodes[0].role=sre.SemanticAttr.Role.SETEXT)},sre.SemanticProcessor.prototype.getPunctuationInRow_=function(e){if(1>=e.length)return e;var t,s,i,o=function(e){return e=e.type,"punctuation"===e||"text"===e||"operator"===e||"relation"===e},n=sre.SemanticProcessor.partitionNodes_(e,function(t){if(!sre.SemanticPred.isPunctuation(t))return!1;if(sre.SemanticPred.isPunctuation(t)&&!sre.SemanticPred.isAttribute("role","ELLIPSIS")(t))return!0;var n=e.indexOf(t);return 0===n?!e[1]||!o(e[1]):(t=e[n-1],n===e.length-1?!o(t):(n=e[n+1],!o(t)||!o(n)))});if(0===n.rel.length)return e;s=[],t=n.comp.shift(),0<t.length&&s.push(sre.SemanticProcessor.getInstance().row(t));for(i=0;0<n.comp.length;)s.push(n.rel[i++]),t=n.comp.shift(),0<t.length&&s.push(sre.SemanticProcessor.getInstance().row(t));return[sre.SemanticProcessor.getInstance().punctuatedNode_(s,n.rel)]},sre.SemanticProcessor.prototype.punctuatedNode_=function(e,t){var s,n=sre.SemanticProcessor.getInstance().factory_.makeBranchNode(sre.SemanticAttr.Type.PUNCTUATED,e,t);return t.length===e.length&&(s=t[0].role,s!==sre.SemanticAttr.Role.UNKNOWN&&t.every(function(e){return e.role===s}))?(n.role=s,n):(sre.SemanticPred.singlePunctAtPosition(e,t,0)?n.role=sre.SemanticAttr.Role.STARTPUNCT:sre.SemanticPred.singlePunctAtPosition(e,t,e.length-1)?n.role=sre.SemanticAttr.Role.ENDPUNCT:t.every(sre.SemanticPred.isAttribute("role","DUMMY"))?n.role=sre.SemanticAttr.Role.TEXT:n.role=sre.SemanticAttr.Role.SEQUENCE,n)},sre.SemanticProcessor.prototype.dummyNode_=function(e){var t=sre.SemanticProcessor.getInstance().factory_.makeMultipleContentNodes(e.length-1,sre.SemanticAttr.invisibleComma());return t.forEach(function(e){e.role=sre.SemanticAttr.Role.DUMMY}),sre.SemanticProcessor.getInstance().punctuatedNode_(e,t)},sre.SemanticProcessor.MML_TO_LIMIT_={MSUB:sre.SemanticAttr.Type.LIMLOWER,MUNDER:sre.SemanticAttr.Type.LIMLOWER,MSUP:sre.SemanticAttr.Type.LIMUPPER,MOVER:sre.SemanticAttr.Type.LIMUPPER,MSUBSUP:sre.SemanticAttr.Type.LIMBOTH,MUNDEROVER:sre.SemanticAttr.Type.LIMBOTH},sre.SemanticProcessor.prototype.limitNode=function(e,t){var n,s=t[0];if(sre.SemanticPred.isLimitBase(s))e=sre.SemanticProcessor.MML_TO_LIMIT_[e];else switch(e){case"MSUB":e=sre.SemanticAttr.Type.SUBSCRIPT;break;case"MSUP":e=sre.SemanticAttr.Type.SUPERSCRIPT;break;case"MSUBSUP":n=sre.SemanticProcessor.getInstance().factory_.makeBranchNode(sre.SemanticAttr.Type.SUBSCRIPT,[s,t[1]],[]),n.role=sre.SemanticAttr.Role.SUBSUP,t=[n,t[2]],e=sre.SemanticAttr.Type.SUPERSCRIPT;break;case"MOVER":e=sre.SemanticAttr.Type.OVERSCORE,sre.SemanticPred.isAccent(t[1])&&(t[1].role=sre.SemanticAttr.Role.OVERACCENT);break;case"MUNDER":e=sre.SemanticAttr.Type.UNDERSCORE,sre.SemanticPred.isAccent(t[1])&&(t[1].role=sre.SemanticAttr.Role.UNDERACCENT);break;default:n=sre.SemanticPred.isAccent(t[1]),e=sre.SemanticPred.isAccent(t[2]),n&&(t[1].role=sre.SemanticAttr.Role.UNDERACCENT),e&&(t[2].role=sre.SemanticAttr.Role.OVERACCENT),e&&!n?(n=sre.SemanticProcessor.getInstance().factory_.makeBranchNode(sre.SemanticAttr.Type.OVERSCORE,[s,t[2]],[]),t=[n,t[1]],e=sre.SemanticAttr.Type.UNDERSCORE):(n=sre.SemanticProcessor.getInstance().factory_.makeBranchNode(sre.SemanticAttr.Type.UNDERSCORE,[s,t[1]],[]),t=[n,t[2]],e=sre.SemanticAttr.Type.OVERSCORE),n.role=sre.SemanticAttr.Role.UNDEROVER}return t=sre.SemanticProcessor.getInstance().factory_.makeBranchNode(e,t,[]),e=sre.SemanticPred.isEmbellished(s),n&&(n.embellished=e),t.embellished=e,t.role=s.role,t},sre.SemanticProcessor.prototype.getFunctionsInRow_=function(e,t){if(t=t||[],0===e.length)return t;var n=e.shift(),s=sre.SemanticProcessor.classifyFunction_(n,e);return s?(e=sre.SemanticProcessor.getInstance().getFunctionsInRow_(e,[]),e=sre.SemanticProcessor.getInstance().getFunctionArgs_(n,e,s),t.concat(e)):(t.push(n),sre.SemanticProcessor.getInstance().getFunctionsInRow_(e,t))},sre.SemanticProcessor.CLASSIFY_FUNCTION_={},sre.SemanticProcessor.CLASSIFY_FUNCTION_[sre.SemanticAttr.Role.INTEGRAL]="integral",sre.SemanticProcessor.CLASSIFY_FUNCTION_[sre.SemanticAttr.Role.SUM]="bigop",sre.SemanticProcessor.CLASSIFY_FUNCTION_[sre.SemanticAttr.Role.PREFIXFUNC]="prefix",sre.SemanticProcessor.CLASSIFY_FUNCTION_[sre.SemanticAttr.Role.LIMFUNC]="prefix",sre.SemanticProcessor.CLASSIFY_FUNCTION_[sre.SemanticAttr.Role.SIMPLEFUNC]="prefix",sre.SemanticProcessor.CLASSIFY_FUNCTION_[sre.SemanticAttr.Role.COMPFUNC]="prefix",sre.SemanticProcessor.classifyFunction_=function(e,t){return e.type===sre.SemanticAttr.Type.APPL||e.type===sre.SemanticAttr.Type.BIGOP||e.type===sre.SemanticAttr.Type.INTEGRAL?"":t[0]&&t[0].textContent===sre.SemanticAttr.functionApplication()?(t.shift(),t=sre.SemanticAttr.Role.SIMPLEFUNC,(e.role===sre.SemanticAttr.Role.PREFIXFUNC||e.role===sre.SemanticAttr.Role.LIMFUNC)&&(t=e.role),sre.SemanticProcessor.propagateFunctionRole_(e,t),"prefix"):(t=sre.SemanticProcessor.CLASSIFY_FUNCTION_[e.role])?t:sre.SemanticPred.isSimpleFunctionHead(e)?"simple":""},sre.SemanticProcessor.propagateFunctionRole_=function(e,t){e&&(sre.SemanticPred.isAttribute("role","SUBSUP")(e)||(e.role=t),sre.SemanticProcessor.propagateFunctionRole_(e.childNodes[0],t))},sre.SemanticProcessor.prototype.getFunctionArgs_=function(e,t,n){switch(n){case"integral":return t=sre.SemanticProcessor.getInstance().getIntegralArgs_(t),!t.intvar&&!t.integrand.length?(t.rest.unshift(e),t.rest):(n=sre.SemanticProcessor.getInstance().row(t.integrand),e=sre.SemanticProcessor.getInstance().integralNode_(e,n,t.intvar),t.rest.unshift(e),t.rest);case"prefix":if(t[0]&&t[0].type===sre.SemanticAttr.Type.FENCED){var s=t.shift();return s.role!==sre.SemanticAttr.Role.NEUTRAL&&(s.role=sre.SemanticAttr.Role.LEFTRIGHT),e=sre.SemanticProcessor.getInstance().functionNode_(e,s),t.unshift(e),t}if(n=sre.SemanticProcessor.sliceNodes_(t,sre.SemanticPred.isPrefixFunctionBoundary),n.head.length)s=sre.SemanticProcessor.getInstance().row(n.head),n.div&&n.tail.unshift(n.div);else{if(!n.div||!sre.SemanticPred.isAttribute("type","APPL")(n.div))return t.unshift(e),t;s=n.div}return e=sre.SemanticProcessor.getInstance().functionNode_(e,s),n.tail.unshift(e),n.tail;case"bigop":return n=sre.SemanticProcessor.sliceNodes_(t,sre.SemanticPred.isBigOpBoundary),n.head.length?(s=sre.SemanticProcessor.getInstance().row(n.head),e=sre.SemanticProcessor.getInstance().bigOpNode_(e,s),n.div&&n.tail.unshift(n.div),n.tail.unshift(e),n.tail):(t.unshift(e),t);default:return 0===t.length?[e]:(n=t[0],n.type===sre.SemanticAttr.Type.FENCED&&n.role!==sre.SemanticAttr.Role.NEUTRAL&&sre.SemanticPred.isSimpleFunctionScope(n)?(n.role=sre.SemanticAttr.Role.LEFTRIGHT,sre.SemanticProcessor.propagateFunctionRole_(e,sre.SemanticAttr.Role.SIMPLEFUNC),e=sre.SemanticProcessor.getInstance().functionNode_(e,t.shift()),t.unshift(e),t):(t.unshift(e),t))}},sre.SemanticProcessor.prototype.getIntegralArgs_=function(e,t){if(t=t||[],0===e.length)return{integrand:t,intvar:null,rest:e};var n=e[0];return sre.SemanticPred.isGeneralFunctionBoundary(n)?{integrand:t,intvar:null,rest:e}:sre.SemanticPred.isIntegralDxBoundarySingle(n)?{integrand:t,intvar:n,rest:e.slice(1)}:e[1]&&sre.SemanticPred.isIntegralDxBoundary(n,e[1])?(n=sre.SemanticProcessor.getInstance().prefixNode_(e[1],[n]),n.role=sre.SemanticAttr.Role.INTEGRAL,{integrand:t,intvar:n,rest:e.slice(2)}):(t.push(e.shift()),sre.SemanticProcessor.getInstance().getIntegralArgs_(e,t))},sre.SemanticProcessor.prototype.functionNode_=function(e,t){var s,n=sre.SemanticProcessor.getInstance().factory_.makeContentNode(sre.SemanticAttr.functionApplication());return n.type=sre.SemanticAttr.Type.PUNCTUATION,n.role=sre.SemanticAttr.Role.APPLICATION,s=sre.SemanticProcessor.getFunctionOp_(e,function(e){return sre.SemanticPred.isAttribute("type","FUNCTION")(e)||sre.SemanticPred.isAttribute("type","IDENTIFIER")(e)&&sre.SemanticPred.isAttribute("role","SIMPLEFUNC")(e)}),sre.SemanticProcessor.getInstance().functionalNode_(sre.SemanticAttr.Type.APPL,[e,t],s,[n])},sre.SemanticProcessor.prototype.bigOpNode_=function(e,t){var n=sre.SemanticProcessor.getFunctionOp_(e,sre.SemanticPred.isAttribute("type","LARGEOP"));return sre.SemanticProcessor.getInstance().functionalNode_(sre.SemanticAttr.Type.BIGOP,[e,t],n,[])},sre.SemanticProcessor.prototype.integralNode_=function(e,t,n){t=t||sre.SemanticProcessor.getInstance().factory_.makeEmptyNode(),n=n||sre.SemanticProcessor.getInstance().factory_.makeEmptyNode();var s=sre.SemanticProcessor.getFunctionOp_(e,sre.SemanticPred.isAttribute("type","LARGEOP"));return sre.SemanticProcessor.getInstance().functionalNode_(sre.SemanticAttr.Type.INTEGRAL,[e,t,n],s,[])},sre.SemanticProcessor.prototype.functionalNode_=function(e,t,n,s){var o,i=t[0];return n&&(o=n.parent,s.push(n)),e=sre.SemanticProcessor.getInstance().factory_.makeBranchNode(e,t,s),e.role=i.role,o&&(n.parent=o),e},sre.SemanticProcessor.getFunctionOp_=function(e,t){if(t(e))return e;for(var n,s=0;n=e.childNodes[s];s++)if(n=sre.SemanticProcessor.getFunctionOp_(n,t))return n;return null},sre.SemanticProcessor.prototype.tablesInRow=function(e){e=sre.SemanticProcessor.partitionNodes_(e,sre.SemanticPred.tableIsMatrixOrVector);for(var n,o,t=[],s=0;n=e.rel[s];s++)t=t.concat(e.comp.shift()),t.push(sre.SemanticProcessor.tableToMatrixOrVector_(n));t=t.concat(e.comp.shift()),e=sre.SemanticProcessor.partitionNodes_(t,sre.SemanticPred.isTableOrMultiline),t=[];for(s=0;n=e.rel[s];s++)o=e.comp.shift(),sre.SemanticPred.tableIsCases(n,o)&&sre.SemanticProcessor.tableToCases_(n,o.pop()),t=t.concat(o),t.push(n);return t.concat(e.comp.shift())},sre.SemanticProcessor.tableToMatrixOrVector_=function(e){var n,t=e.childNodes[0];for(sre.SemanticPred.isAttribute("type","MULTILINE")(t)?sre.SemanticProcessor.tableToVector_(e):sre.SemanticProcessor.tableToMatrix_(e),e.contentNodes.forEach(goog.bind(t.appendContentNode,t)),e=0;n=t.childNodes[e];e++)sre.SemanticProcessor.assignRoleToRow_(n,sre.SemanticProcessor.getComponentRoles_(t));return t.parent=null,t},sre.SemanticProcessor.tableToVector_=function(e){var t=e.childNodes[0];t.type=sre.SemanticAttr.Type.VECTOR,1===t.childNodes.length?sre.SemanticProcessor.tableToSquare_(e):sre.SemanticProcessor.binomialForm_(t)},sre.SemanticProcessor.binomialForm_=function(e){sre.SemanticPred.isBinomial(e)&&(e.role=sre.SemanticAttr.Role.BINOMIAL,e.childNodes[0].role=sre.SemanticAttr.Role.BINOMIAL,e.childNodes[1].role=sre.SemanticAttr.Role.BINOMIAL)},sre.SemanticProcessor.tableToMatrix_=function(e){var t=e.childNodes[0];t.type=sre.SemanticAttr.Type.MATRIX,t.childNodes&&0<t.childNodes.length&&t.childNodes[0].childNodes&&t.childNodes.length===t.childNodes[0].childNodes.length?sre.SemanticProcessor.tableToSquare_(e):t.childNodes&&1===t.childNodes.length&&(t.role=sre.SemanticAttr.Role.ROWVECTOR)},sre.SemanticProcessor.tableToSquare_=function(e){var t=e.childNodes[0];sre.SemanticPred.isAttribute("role","NEUTRAL")(e)?t.role=sre.SemanticAttr.Role.DETERMINANT:t.role=sre.SemanticAttr.Role.SQUAREMATRIX},sre.SemanticProcessor.getComponentRoles_=function(e){var t=e.role;return t&&t!==sre.SemanticAttr.Role.UNKNOWN?t:sre.SemanticAttr.Role[e.type.toUpperCase()]||sre.SemanticAttr.Role.UNKNOWN},sre.SemanticProcessor.tableToCases_=function(e,t){for(var n,s=0;n=e.childNodes[s];s++)sre.SemanticProcessor.assignRoleToRow_(n,sre.SemanticAttr.Role.CASES);return e.type=sre.SemanticAttr.Type.CASES,e.appendContentNode(t),sre.SemanticPred.tableIsMultiline(e)&&sre.SemanticProcessor.binomialForm_(e),e},sre.SemanticProcessor.tableToMultiline=function(e){if(sre.SemanticPred.tableIsMultiline(e)){e.type=sre.SemanticAttr.Type.MULTILINE;for(var t,n=0;t=e.childNodes[n];n++)sre.SemanticProcessor.rowToLine_(t,sre.SemanticAttr.Role.MULTILINE);1===e.childNodes.length&&sre.SemanticPred.isFencedElement(e.childNodes[0].childNodes[0])&&sre.SemanticProcessor.tableToMatrixOrVector_(sre.SemanticProcessor.rewriteFencedLine_(e)),sre.SemanticProcessor.binomialForm_(e),sre.SemanticProcessor.classifyMultiline(e)}else sre.SemanticProcessor.classifyTable(e)},sre.SemanticProcessor.rewriteFencedLine_=function(e){var n=e.childNodes[0],t=e.childNodes[0].childNodes[0],s=e.childNodes[0].childNodes[0].childNodes[0];return t.parent=e.parent,e.parent=t,s.parent=n,t.childNodes=[e],n.childNodes=[s],t},sre.SemanticProcessor.rowToLine_=function(e,t){t=t||sre.SemanticAttr.Role.UNKNOWN,sre.SemanticPred.isAttribute("type","ROW")(e)&&(e.type=sre.SemanticAttr.Type.LINE,e.role=t,1===e.childNodes.length&&sre.SemanticPred.isAttribute("type","CELL")(e.childNodes[0])&&(e.childNodes=e.childNodes[0].childNodes,e.childNodes.forEach(function(t){t.parent=e})))},sre.SemanticProcessor.assignRoleToRow_=function(e,t){if(sre.SemanticPred.isAttribute("type","LINE")(e))e.role=t;else if(sre.SemanticPred.isAttribute("type","ROW")(e)){e.role=t;var n=sre.SemanticPred.isAttribute("type","CELL");e.childNodes.forEach(function(e){n(e)&&(e.role=t)})}},sre.SemanticProcessor.sliceNodes_=function(e,t,n){n&&e.reverse();for(var s,o=[],i=0;s=e[i];i++){if(t(s))return n?{head:e.slice(i+1).reverse(),div:s,tail:o.reverse()}:{head:o,div:s,tail:e.slice(i+1)};o.push(s)}return n?{head:[],div:null,tail:o.reverse()}:{head:o,div:null,tail:[]}},sre.SemanticProcessor.partitionNodes_=function(e,t){var n,s=[],o=[];do n=sre.SemanticProcessor.sliceNodes_(e,t),o.push(n.head),s.push(n.div),e=n.tail;while(n.div)return s.pop(),{rel:s,comp:o}},sre.SemanticProcessor.prototype.mfenced=function(e,t,n,s){if(n&&0<s.length){var i=sre.SemanticProcessor.nextSeparatorFunction_(n),o=[s.shift()];s.forEach(goog.bind(function(e){o.push(sre.SemanticProcessor.getInstance().factory_.makeContentNode(i())),o.push(e)},this)),s=o}return e&&t?sre.SemanticProcessor.getInstance().horizontalFencedNode_(sre.SemanticProcessor.getInstance().factory_.makeContentNode(e),sre.SemanticProcessor.getInstance().factory_.makeContentNode(t),s):(e&&s.unshift(sre.SemanticProcessor.getInstance().factory_.makeContentNode(e)),t&&s.push(sre.SemanticProcessor.getInstance().factory_.makeContentNode(t)),sre.SemanticProcessor.getInstance().row(s))},sre.SemanticProcessor.nextSeparatorFunction_=function(e){if(e){if(e.match(/^\s+$/))return null;var t=e.replace(/\s/g,"").split("").filter(function(e){return e})}else t=[","];return function(){return 1<t.length?t.shift():t[0]}},sre.SemanticProcessor.number=function(e){(e.type===sre.SemanticAttr.Type.UNKNOWN||e.type===sre.SemanticAttr.Type.IDENTIFIER)&&(e.type=sre.SemanticAttr.Type.NUMBER),sre.SemanticProcessor.numberRole_(e),sre.SemanticProcessor.exprFont_(e)},sre.SemanticProcessor.numberRole_=function(e){if(e.role===sre.SemanticAttr.Role.UNKNOWN){var t=sre.SemanticUtil.splitUnicode(e.textContent).map(sre.SemanticAttr.lookupMeaning);t.every(function(e){return e.type===sre.SemanticAttr.Type.NUMBER&&e.role===sre.SemanticAttr.Role.INTEGER||e.type===sre.SemanticAttr.Type.PUNCTUATION&&e.role===sre.SemanticAttr.Role.COMMA})?e.role=sre.SemanticAttr.Role.INTEGER:t.every(function(e){return e.type===sre.SemanticAttr.Type.NUMBER&&e.role===sre.SemanticAttr.Role.INTEGER||e.type===sre.SemanticAttr.Type.PUNCTUATION})?e.role=sre.SemanticAttr.Role.FLOAT:e.role=sre.SemanticAttr.Role.OTHERNUMBER}},sre.SemanticProcessor.exprFont_=function(e){if(e.font===sre.SemanticAttr.Font.UNKNOWN){var t=sre.SemanticUtil.splitUnicode(e.textContent).map(sre.SemanticAttr.lookupMeaning).reduce(function(e,t){return e&&t.font&&t.font!==sre.SemanticAttr.Font.UNKNOWN&&t.font!==e?e===sre.SemanticAttr.Font.UNKNOWN?t.font:null:e},sre.SemanticAttr.Font.UNKNOWN);t&&(e.font=t)}},sre.SemanticProcessor.prototype.fractionLikeNode=function(e,t,n,s){return!s&&sre.SemanticUtil.isZeroLength(n)?(s=sre.SemanticProcessor.getInstance().factory_.makeBranchNode(sre.SemanticAttr.Type.LINE,[e],[]),t=sre.SemanticProcessor.getInstance().factory_.makeBranchNode(sre.SemanticAttr.Type.LINE,[t],[]),t=sre.SemanticProcessor.getInstance().factory_.makeBranchNode(sre.SemanticAttr.Type.MULTILINE,[s,t],[]),sre.SemanticProcessor.binomialForm_(t),sre.SemanticProcessor.classifyMultiline(t)):(t=sre.SemanticProcessor.getInstance().fractionNode_(e,t),s&&t.addAnnotation("general","bevelled")),t},sre.SemanticProcessor.prototype.fractionNode_=function(e,t){return e=sre.SemanticProcessor.getInstance().factory_.makeBranchNode(sre.SemanticAttr.Type.FRACTION,[e,t],[]),e.role=e.childNodes.every(function(e){return sre.SemanticPred.isAttribute("type","NUMBER")(e)&&sre.SemanticPred.isAttribute("role","INTEGER")(e)})?sre.SemanticAttr.Role.VULGAR:e.childNodes.every(sre.SemanticPred.isPureUnit)?sre.SemanticAttr.Role.UNIT:sre.SemanticAttr.Role.DIVISION,this.propagateSimpleFunction(e),e},sre.SemanticProcessor.prototype.tensor=function(e,t,n,s,o){return t=sre.SemanticProcessor.getInstance().factory_.makeBranchNode(sre.SemanticAttr.Type.TENSOR,[e,sre.SemanticProcessor.getInstance().scriptNode_(t,sre.SemanticAttr.Role.LEFTSUB),sre.SemanticProcessor.getInstance().scriptNode_(n,sre.SemanticAttr.Role.LEFTSUPER),sre.SemanticProcessor.getInstance().scriptNode_(s,sre.SemanticAttr.Role.RIGHTSUB),sre.SemanticProcessor.getInstance().scriptNode_(o,sre.SemanticAttr.Role.RIGHTSUPER)],[]),t.role=e.role,t.embellished=sre.SemanticPred.isEmbellished(e),t},sre.SemanticProcessor.prototype.pseudoTensor=function(e,t,n){var i,s=function(e){return!sre.SemanticPred.isAttribute("type","EMPTY")(e)},o=t.filter(s).length,s=n.filter(s).length;return!o&&!s?e:(i=o?s?"MSUBSUP":"MSUB":"MSUP",e=[e],o&&e.push(sre.SemanticProcessor.getInstance().scriptNode_(t,sre.SemanticAttr.Role.RIGHTSUB,!0)),s&&e.push(sre.SemanticProcessor.getInstance().scriptNode_(n,sre.SemanticAttr.Role.RIGHTSUPER,!0)),sre.SemanticProcessor.getInstance().limitNode(i,e))},sre.SemanticProcessor.prototype.scriptNode_=function(e,t,n){switch(e.length){case 0:e=sre.SemanticProcessor.getInstance().factory_.makeEmptyNode();break;case 1:if(e=e[0],n)return e;break;default:e=sre.SemanticProcessor.getInstance().dummyNode_(e)}return e.role=t,e},sre.SemanticProcessor.getEmbellishedInner_=function(e){return e&&e.embellished&&0<e.childNodes.length?sre.SemanticProcessor.getEmbellishedInner_(e.childNodes[0]):e},sre.SemanticProcessor.purgeFences_=function(e){s=e.rel,e=e.comp;for(var t,n,s,i=[],o=[];0<s.length;)n=s.shift(),t=e.shift(),sre.SemanticPred.isElligibleEmbellishedFence(n)?(i.push(n),o.push(t)):(sre.SemanticProcessor.fenceToPunct_(n),t.push(n),t=t.concat(e.shift()),e.unshift(t));return o.push(e.shift()),{rel:i,comp:o}},sre.SemanticProcessor.rewriteFencedNode_=function(e){var n=e.contentNodes[1],t=sre.SemanticProcessor.rewriteFence_(e,e.contentNodes[0]);return e.contentNodes[0]=t.fence,t=sre.SemanticProcessor.rewriteFence_(t.node,n),e.contentNodes[1]=t.fence,e.contentNodes[0].parent=e,e.contentNodes[1].parent=e,t.node.parent=null,t.node},sre.SemanticProcessor.rewriteFence_=function(e,t){if(!t.embellished)return{node:e,fence:t};var n=t.childNodes[0],s=sre.SemanticProcessor.rewriteFence_(e,n);return sre.SemanticPred.isAttribute("type","SUPERSCRIPT")(t)||sre.SemanticPred.isAttribute("type","SUBSCRIPT")(t)||sre.SemanticPred.isAttribute("type","TENSOR")(t)?(sre.SemanticPred.isAttribute("role","SUBSUP")(t)||(t.role=e.role),n!==s.node&&(t.replaceChild(n,s.node),n.parent=e),sre.SemanticProcessor.propagateFencePointer_(t,n),{node:t,fence:s.fence}):(t.replaceChild(n,s.fence),t.mathmlTree&&-1===t.mathml.indexOf(t.mathmlTree)&&t.mathml.push(t.mathmlTree),{node:s.node,fence:t})},sre.SemanticProcessor.propagateFencePointer_=function(e,t){e.fencePointer=t.fencePointer||t.id.toString(),e.embellished=null},sre.SemanticProcessor.classifyMultiline=function(e){for(var t,s,n=0,o=e.childNodes.length;n<o&&(!(s=e.childNodes[n])||!s.childNodes.length);)n++;n>=o||(t=s.childNodes[0].role,t!==sre.SemanticAttr.Role.UNKNOWN&&e.childNodes.every(function(e){return e=e.childNodes[0],!e||e.role===t&&(sre.SemanticPred.isAttribute("type","RELATION")(e)||sre.SemanticPred.isAttribute("type","RELSEQ")(e))})&&(e.role=t))},sre.SemanticProcessor.classifyTable=function(e){var t=sre.SemanticProcessor.computeColumns_(e);sre.SemanticProcessor.classifyByColumns_(e,t,"EQUALITY")||sre.SemanticProcessor.classifyByColumns_(e,t,"INEQUALITY",["EQUALITY"])||sre.SemanticProcessor.classifyByColumns_(e,t,"ARROW")},sre.SemanticProcessor.classifyByColumns_=function(e,t,n,s){s=function(e){return sre.SemanticProcessor.isPureRelation_(e,n)};var o=function(e){return sre.SemanticProcessor.isEndRelation_(e,n)||sre.SemanticProcessor.isPureRelation_(e,n)},i=function(e){return sre.SemanticProcessor.isEndRelation_(e,n,!0)||sre.SemanticProcessor.isPureRelation_(e,n)};return!!(3===t.length&&sre.SemanticProcessor.testColumns_(t,1,s)||2===t.length&&(sre.SemanticProcessor.testColumns_(t,1,o)||sre.SemanticProcessor.testColumns_(t,0,i)))&&(e.role=sre.SemanticAttr.Role[n],!0)},sre.SemanticProcessor.isEndRelation_=function(e,t,n){return n=n?e.childNodes.length-1:0,sre.SemanticPred.isAttribute("type","RELSEQ")(e)&&sre.SemanticPred.isAttribute("role",t)(e)&&sre.SemanticPred.isAttribute("type","EMPTY")(e.childNodes[n])},sre.SemanticProcessor.isPureRelation_=function(e,t){return sre.SemanticPred.isAttribute("type","RELATION")(e)&&sre.SemanticPred.isAttribute("role",t)(e)},sre.SemanticProcessor.computeColumns_=function(e){for(var t,s,o,n=[],i=0;o=e.childNodes[i];i++)for(t=0;s=o.childNodes[t];t++)n[t]?n[t].push(s):n[t]=[s];return n},sre.SemanticProcessor.testColumns_=function(e,t,n){return!!(e=e[t])&&e.some(function(e){return e.childNodes.length&&n(e.childNodes[0])})&&e.every(function(e){return!e.childNodes.length||n(e.childNodes[0])})},sre.SemanticProcessor.MATHJAX_FONTS={"-tex-caligraphic":sre.SemanticAttr.Font.CALIGRAPHIC,"-tex-caligraphic-bold":sre.SemanticAttr.Font.CALIGRAPHICBOLD,"-tex-calligraphic":sre.SemanticAttr.Font.CALIGRAPHIC,"-tex-calligraphic-bold":sre.SemanticAttr.Font.CALIGRAPHICBOLD,"-tex-oldstyle":sre.SemanticAttr.Font.OLDSTYLE,"-tex-oldstyle-bold":sre.SemanticAttr.Font.OLDSTYLEBOLD,"-tex-mathit":sre.SemanticAttr.Font.ITALIC},sre.SemanticProcessor.prototype.font=function(e){var t=sre.SemanticProcessor.MATHJAX_FONTS[e];return t||e},sre.SemanticProcessor.prototype.propagateSimpleFunction=function(e){"clearspeak"!==sre.Engine.getInstance().domain||e.type!==sre.SemanticAttr.Type.INFIXOP&&e.type!==sre.SemanticAttr.Type.FRACTION||!e.childNodes.every(sre.SemanticPred.isSimpleFunction)||(e.role=sre.SemanticAttr.Role.COMPFUNC)},sre.SemanticProcessor.prototype.propagateComposedFunction=function(e){"clearspeak"===sre.Engine.getInstance().domain&&e.type===sre.SemanticAttr.Type.FENCED&&e.childNodes[0].role===sre.SemanticAttr.Role.COMPFUNC&&(e.role=sre.SemanticAttr.Role.COMPFUNC)},sre.SemanticProcessor.proof=function(e,t,n){return t=sre.SemanticProcessor.separateSemantics(t),sre.SemanticProcessor.getInstance().proof(e,t,n)},sre.SemanticProcessor.prototype.proof=function(e,t,n){return t.inference||t.axiom||console.log("Noise"),t.axiom?(t=this.cleanInference(e.childNodes),t=t.length?this.factory_.makeBranchNode(sre.SemanticAttr.Type.INFERENCE,n(t),[]):this.factory_.makeEmptyNode(),t.role=sre.SemanticAttr.Role.AXIOM,t.mathmlTree=e,t):(e=this.inference(e,t,n),t.proof&&(e.role=sre.SemanticAttr.Role.PROOF,e.childNodes[0].role=sre.SemanticAttr.Role.FINAL),e)},sre.SemanticProcessor.prototype.inference=function(e,t,n){if(t.inferenceRule)return n=this.getFormulas(e,[],n),n=this.factory_.makeBranchNode(sre.SemanticAttr.Type.INFERENCE,[n.conclusion,n.premises],[]);var s=t.labelledRule,o=sre.DomUtil.toArray(e.childNodes);return t=[],"left"!==s&&"both"!==s||t.push(this.getLabel(e,o,n,sre.SemanticAttr.Role.LEFT)),"right"!==s&&"both"!==s||t.push(this.getLabel(e,o,n,sre.SemanticAttr.Role.RIGHT)),n=this.getFormulas(e,o,n),n=this.factory_.makeBranchNode(sre.SemanticAttr.Type.INFERENCE,[n.conclusion,n.premises],t),n.mathmlTree=e,n},sre.SemanticProcessor.prototype.getLabel=function(e,t,n,s){return e=this.findNestedRow(t,"prooflabel",s),n=this.factory_.makeBranchNode(sre.SemanticAttr.Type.RULELABEL,n(sre.DomUtil.toArray(e.childNodes)),[]),n.role=s,n.mathmlTree=e,n},sre.SemanticProcessor.prototype.getFormulas=function(e,t,n){t=t.length?this.findNestedRow(t,"inferenceRule"):e;var o,i,a,s="up"===sre.SemanticProcessor.getSemantics(t).inferenceRule;e=s?t.childNodes[0]:t.childNodes[1],t=(s?t.childNodes[1]:t.childNodes[0]).childNodes[0].childNodes[0],i=sre.DomUtil.toArray(t.childNodes[0].childNodes),s=[],a=1,i=$jscomp.makeIterator(i);for(o=i.next();!o.done;o=i.next())o=o.value,a%2&&s.push(o.childNodes[0]),a++;return s=n(s),n=n(sre.DomUtil.toArray(e.childNodes[0].childNodes))[0],s=this.factory_.makeBranchNode(sre.SemanticAttr.Type.PREMISES,s,[]),s.mathmlTree=t,n=this.factory_.makeBranchNode(sre.SemanticAttr.Type.CONCLUSION,[n],[]),n.mathmlTree=e.childNodes[0].childNodes[0],{conclusion:n,premises:s}},sre.SemanticProcessor.prototype.findNestedRow=function(e,t,n){return this.findNestedRow_(e,t,0,n)},sre.SemanticProcessor.prototype.findNestedRow_=function(e,t,n,s){if(3<n)return null;for(var o,i,a=0;o=e[a];a++)if(i=sre.DomUtil.tagName(o),"MSPACE"!==i){if("MROW"===i)return this.findNestedRow_(sre.DomUtil.toArray(o.childNodes),t,n+1,s);if(sre.SemanticProcessor.findSemantics(o,t,s))return o}return null},sre.SemanticProcessor.prototype.cleanInference=function(e){return sre.DomUtil.toArray(e).filter(function(e){return"MSPACE"!==sre.DomUtil.tagName(e)})},sre.SemanticProcessor.findSemantics=function(e,t,n){return n=n??null,!!((e=sre.SemanticProcessor.getSemantics(e))&&e[t])&&(n==null||e[t]===n)},sre.SemanticProcessor.getSemantics=function(e){return(e=e.getAttribute("semantics"))?sre.SemanticProcessor.separateSemantics(e):null},sre.SemanticProcessor.removePrefix=function(e){return e=$jscomp.makeIterator(e.split("_")),e.next(),$jscomp.arrayFromIterator(e).join("_")},sre.SemanticProcessor.separateSemantics=function(e){var t={};return e.split(";").forEach(function(e){var n=$jscomp.makeIterator(e.split(":"));e=n.next().value,n=n.next().value,t[sre.SemanticProcessor.removePrefix(e)]=n}),t},sre.SemanticMathml=function(){sre.SemanticAbstractParser.call(this,"MathML"),this.parseMap_={SEMANTICS:goog.bind(this.semantics_,this),MATH:goog.bind(this.rows_,this),MROW:goog.bind(this.rows_,this),MPADDED:goog.bind(this.rows_,this),MSTYLE:goog.bind(this.rows_,this),MFRAC:goog.bind(this.fraction_,this),MSUB:goog.bind(this.limits_,this),MSUP:goog.bind(this.limits_,this),MSUBSUP:goog.bind(this.limits_,this),MOVER:goog.bind(this.limits_,this),MUNDER:goog.bind(this.limits_,this),MUNDEROVER:goog.bind(this.limits_,this),MROOT:goog.bind(this.root_,this),MSQRT:goog.bind(this.sqrt_,this),MTABLE:goog.bind(this.table_,this),MLABELEDTR:goog.bind(this.tableLabeledRow_,this),MTR:goog.bind(this.tableRow_,this),MTD:goog.bind(this.tableCell_,this),MS:goog.bind(this.text_,this),MTEXT:goog.bind(this.text_,this),"ANNOTATION-XML":goog.bind(this.text_,this),MI:goog.bind(this.identifier_,this),MN:goog.bind(this.number_,this),MO:goog.bind(this.operator_,this),MFENCED:goog.bind(this.fenced_,this),MENCLOSE:goog.bind(this.enclosed_,this),MMULTISCRIPTS:goog.bind(this.multiscripts_,this),ANNOTATION:goog.bind(this.empty_,this),NONE:goog.bind(this.empty_,this),MACTION:goog.bind(this.action_,this)};var e={type:sre.SemanticAttr.Type.IDENTIFIER,role:sre.SemanticAttr.Role.NUMBERSET,font:sre.SemanticAttr.Font.DOUBLESTRUCK};"CHNPQRZℂℍℕℙℚℝℤ".split("").forEach(function(t){this.getFactory().defaultMap.add(t,e)}.bind(this))},goog.inherits(sre.SemanticMathml,sre.SemanticAbstractParser),sre.SemanticMathml.prototype.parse=function(e){sre.SemanticProcessor.getInstance().setNodeFactory(this.getFactory());var t=sre.DomUtil.toArray(e.childNodes),n=sre.DomUtil.tagName(e),s=this.parseMap_[n],t=(s||goog.bind(this.dummy_,this))(e,t);return sre.SemanticUtil.addAttributes(t,e),-1!==["MATH","MROW","MPADDED","MSTYLE","SEMANTICS"].indexOf(n)?t:(t.mathml.unshift(e),t.mathmlTree=e,t)},sre.SemanticMathml.prototype.semantics_=function(e,t){return t.length?this.parse(t[0]):this.getFactory().makeEmptyNode()},sre.SemanticMathml.prototype.rows_=function(e,t){var n=e.getAttribute("semantics");return n&&n.match("bspr_")?sre.SemanticProcessor.proof(e,n,goog.bind(this.parseList,this)):(t=sre.SemanticUtil.purgeNodes(t),t=1===t.length?this.parse(t[0]):sre.SemanticProcessor.getInstance().row(this.parseList(t)),t.mathml.unshift(e),t)},sre.SemanticMathml.prototype.fraction_=function(e,t){return sre.SemanticProcessor.getInstance().fractionLikeNode(this.parse(t[0]),this.parse(t[1]),e.getAttribute("linethickness"),"true"===e.getAttribute("bevelled"))},sre.SemanticMathml.prototype.limits_=function(e,t){return sre.SemanticProcessor.getInstance().limitNode(sre.DomUtil.tagName(e),this.parseList(t))},sre.SemanticMathml.prototype.root_=function(e,t){return this.getFactory().makeBranchNode(sre.SemanticAttr.Type.ROOT,[this.parse(t[1]),this.parse(t[0])],[])},sre.SemanticMathml.prototype.sqrt_=function(e,t){return e=this.parseList(sre.SemanticUtil.purgeNodes(t)),this.getFactory().makeBranchNode(sre.SemanticAttr.Type.SQRT,[sre.SemanticProcessor.getInstance().row(e)],[])},sre.SemanticMathml.prototype.table_=function(e,t){var n=e.getAttribute("semantics");return n&&n.match("bspr_")?sre.SemanticProcessor.proof(e,n,goog.bind(this.parseList,this)):(e=this.getFactory().makeBranchNode(sre.SemanticAttr.Type.TABLE,this.parseList(t),[]),sre.SemanticProcessor.tableToMultiline(e),e)},sre.SemanticMathml.prototype.tableRow_=function(e,t){return e=this.getFactory().makeBranchNode(sre.SemanticAttr.Type.ROW,this.parseList(t),[]),e.role=sre.SemanticAttr.Role.TABLE,e},sre.SemanticMathml.prototype.tableLabeledRow_=function(e,t){return t.length?(e=this.parse(t[0]),e.role=sre.SemanticAttr.Role.LABEL,t=this.getFactory().makeBranchNode(sre.SemanticAttr.Type.ROW,this.parseList(t.slice(1)),[e]),t.role=sre.SemanticAttr.Role.TABLE,t):this.tableRow_(e,t)},sre.SemanticMathml.prototype.tableCell_=function(e,t){return e=this.parseList(sre.SemanticUtil.purgeNodes(t)),e=e.length?1===e.length&&sre.SemanticPred.isAttribute("type","EMPTY")(e[0])?e:[sre.SemanticProcessor.getInstance().row(e)]:[],e=this.getFactory().makeBranchNode(sre.SemanticAttr.Type.CELL,e,[]),e.role=sre.SemanticAttr.Role.TABLE,e},sre.SemanticMathml.prototype.text_=function(e,t){return t=this.leaf_(e,t),e.textContent?(t.updateContent(e.textContent,!0),sre.SemanticProcessor.getInstance().text(t,sre.DomUtil.tagName(e))):t},sre.SemanticMathml.prototype.identifier_=function(e,t){return t=this.leaf_(e,t),e=sre.SemanticProcessor.getInstance().identifierNode(t,sre.SemanticProcessor.getInstance().font(e.getAttribute("mathvariant")),e.getAttribute("class")),"clearspeak"!==sre.Engine.getInstance().domain?e:(-1!=="fghFGH".split("").indexOf(e.textContent)&&(e.role=sre.SemanticAttr.Role.SIMPLEFUNC),e)},sre.SemanticMathml.prototype.number_=function(e,t){return e=this.leaf_(e,t),sre.SemanticProcessor.number(e),e},sre.SemanticMathml.prototype.operator_=function(e,t){return e=this.leaf_(e,t),e.type===sre.SemanticAttr.Type.UNKNOWN&&(e.type=sre.SemanticAttr.Type.OPERATOR),e},sre.SemanticMathml.prototype.fenced_=function(e,t){t=this.parseList(sre.SemanticUtil.purgeNodes(t));var n=sre.SemanticMathml.getAttribute_(e,"separators",","),s=sre.SemanticMathml.getAttribute_(e,"open","(");return e=sre.SemanticMathml.getAttribute_(e,"close",")"),e=sre.SemanticProcessor.getInstance().mfenced(s,e,n,t),sre.SemanticProcessor.getInstance().tablesInRow([e])[0]},sre.SemanticMathml.prototype.enclosed_=function(e,t){return t=this.parseList(sre.SemanticUtil.purgeNodes(t)),t=this.getFactory().makeBranchNode(sre.SemanticAttr.Type.ENCLOSE,[sre.SemanticProcessor.getInstance().row(t)],[]),t.role=e.getAttribute("notation")||sre.SemanticAttr.Role.UNKNOWN,t},sre.SemanticMathml.prototype.multiscripts_=function(e,t){if(!t.length)return this.getFactory().makeEmptyNode();if(e=this.parse(t.shift()),!t.length)return e;for(var n,o=[],i=[],a=[],r=[],c=!1,s=0,l=0;n=t[l];l++)"MPRESCRIPTS"===sre.DomUtil.tagName(n)?(c=!0,s=0):(c?s&1?o.push(n):i.push(n):s&1?a.push(n):r.push(n),s++);return sre.SemanticUtil.purgeNodes(o).length||sre.SemanticUtil.purgeNodes(i).length?sre.SemanticProcessor.getInstance().tensor(e,this.parseList(i),this.parseList(o),this.parseList(r),this.parseList(a)):sre.SemanticProcessor.getInstance().pseudoTensor(e,this.parseList(r),this.parseList(a))},sre.SemanticMathml.prototype.empty_=function(){return this.getFactory().makeEmptyNode()},sre.SemanticMathml.prototype.action_=function(e,t){return 1<t.length?this.parse(t[1]):this.getFactory().makeUnprocessed(e)},sre.SemanticMathml.prototype.dummy_=function(e,t){return t=this.getFactory().makeUnprocessed(e),t.role=e.tagName,t},sre.SemanticMathml.prototype.leaf_=function(e,t){return 1===t.length&&t[0].nodeType!==sre.DomUtil.NodeType.TEXT_NODE?(e=this.getFactory().makeUnprocessed(e),sre.SemanticUtil.addAttributes(e,t[0]),e):this.getFactory().makeLeafNode(e.textContent,sre.SemanticProcessor.getInstance().font(e.getAttribute("mathvariant")))},sre.SemanticMathml.getAttribute_=function(e,t,n){return e.hasAttribute(t)?(e=e.getAttribute(t),e.match(/^\s*$/)?null:e):n},sre.SemanticTree=function(e){this.mathml=e,this.parser=new sre.SemanticMathml,this.root=this.parser.parse(e),this.collator=this.parser.getFactory().leafMap.collateMeaning();var t=this.collator.newDefault();t&&(this.parser=new sre.SemanticMathml,this.parser.getFactory().defaultMap=t,this.root=this.parser.parse(e)),sre.SemanticTree.implicitVisitor_.visit(this.root,{}),sre.SemanticTree.unitVisitor_.visit(this.root,{}),sre.SemanticAnnotations.getInstance().annotate(this.root)},sre.SemanticTree.implicitVisitor_=new sre.SemanticVisitor("general",function(e){return e.type===sre.SemanticAttr.Type.INFIXOP&&e.role===sre.SemanticAttr.Role.MULTIPLICATION&&e.contentNodes.every(function(e){return!e.embellished&&e.textContent===sre.SemanticAttr.invisibleTimes()})&&(e.role=sre.SemanticAttr.Role.IMPLICIT),!1}),sre.SemanticTree.unitVisitor_=new sre.SemanticVisitor("general",function(e,t){return e.type===sre.SemanticAttr.Type.INFIXOP&&e.role===sre.SemanticAttr.Role.MULTIPLICATION&&(t=e.childNodes,t.length&&(sre.SemanticPred.isPureUnit(t[0])||sre.SemanticPred.isUnitCounter(t[0]))&&e.childNodes.slice(1).every(sre.SemanticPred.isPureUnit)&&(e.role=sre.SemanticAttr.Role.UNIT)),!1}),sre.SemanticTree.empty=function(){var e=sre.DomUtil.parseInput("<math/>"),t=new sre.SemanticTree(e);return t.mathml=e,t},sre.SemanticTree.fromNode=function(e,t){var n=sre.SemanticTree.empty();return n.root=e,t&&(n.mathml=t),n},sre.SemanticTree.fromRoot=function(e,t){for(;e.parent;)e=e.parent;return e=sre.SemanticTree.fromNode(e),t&&(e.mathml=t),e},sre.SemanticTree.prototype.xml=function(e){var t=sre.DomUtil.parseInput("<stree></stree>");return e=this.root.xml(t.ownerDocument,e),t.appendChild(e),t},sre.SemanticTree.prototype.toString=function(e){return(new sre.SystemExternal.xmldom.XMLSerializer).serializeToString(this.xml(e))},sre.SemanticTree.prototype.formatXml=function(e){return e=this.toString(e),sre.DomUtil.formatXml(e)},sre.SemanticTree.prototype.displayTree=function(){this.root.displayTree()},sre.SemanticTree.prototype.replaceNode=function(e,t){var n=e.parent;n?n.replaceChild(e,t):this.root=t},sre.SemanticTree.prototype.toJson=function(){var e={};return e.stree=this.root.toJson(),e},sre.Semantic={},sre.Semantic.Font=sre.SemanticAttr.Font,sre.Semantic.Role=sre.SemanticAttr.Role,sre.Semantic.Type=sre.SemanticAttr.Type,sre.Semantic.xmlTree=function(e){return sre.Semantic.getTree(e).xml()},sre.Semantic.getTree=function(e){return new sre.SemanticTree(e)},sre.Semantic.getTreeFromString=function(e){return e=sre.DomUtil.parseInput(e),sre.Semantic.getTree(e)},sre.MathspeakUtil={},sre.MathspeakUtil.spaceoutText=function(e){return e.textContent.split("").join(" ")},sre.MathspeakUtil.spaceoutNodes=function(e,t){var n,s,a=e.textContent.split(""),o=[],i=sre.SemanticProcessor.getInstance();e=e.ownerDocument;for(s=0;n=a[s];s++)n=i.getNodeFactory().makeLeafNode(n,sre.Semantic.Font.UNKNOWN),n=i.identifierNode(n,sre.Semantic.Font.UNKNOWN,""),t(n),o.push(n.xml(e));return o},sre.MathspeakUtil.spaceoutNumber=function(e){return sre.MathspeakUtil.spaceoutNodes(e,function(e){e.textContent.match(/\W/)||(e.type=sre.Semantic.Type.NUMBER)})},sre.MathspeakUtil.spaceoutIdentifier=function(e){return sre.MathspeakUtil.spaceoutNodes(e,function(e){e.font=sre.Semantic.Font.UNKNOWN,e.type=sre.Semantic.Type.IDENTIFIER})},sre.MathspeakUtil.nestingBarriers=[sre.Semantic.Type.CASES,sre.Semantic.Type.CELL,sre.Semantic.Type.INTEGRAL,sre.Semantic.Type.LINE,sre.Semantic.Type.MATRIX,sre.Semantic.Type.MULTILINE,sre.Semantic.Type.OVERSCORE,sre.Semantic.Type.ROOT,sre.Semantic.Type.ROW,sre.Semantic.Type.SQRT,sre.Semantic.Type.SUBSCRIPT,sre.Semantic.Type.SUPERSCRIPT,sre.Semantic.Type.TABLE,sre.Semantic.Type.UNDERSCORE,sre.Semantic.Type.VECTOR],sre.MathspeakUtil.nestingDepth={},sre.MathspeakUtil.resetNestingDepth=function(e){return sre.MathspeakUtil.nestingDepth={},[e]},sre.MathspeakUtil.getNestingDepth=function(e,t,n,s,o,i){s=s||sre.MathspeakUtil.nestingBarriers,o=o||{},i=i||function(){return!1};var a=(new sre.SystemExternal.xmldom.XMLSerializer).serializeToString(t);return sre.MathspeakUtil.nestingDepth[e]||(sre.MathspeakUtil.nestingDepth[e]={}),sre.MathspeakUtil.nestingDepth[e][a]?sre.MathspeakUtil.nestingDepth[e][a]:i(t)||0>n.indexOf(t.tagName)?0:(t=sre.MathspeakUtil.computeNestingDepth_(t,n,sre.BaseUtil.setdifference(s,n),o,i,0),sre.MathspeakUtil.nestingDepth[e][a]=t)},sre.MathspeakUtil.containsAttr=function(e,t){if(!e.attributes)return!1;e=sre.DomUtil.toArray(e.attributes);for(var n,s=0;n=e[s];s++)if(t[n.nodeName]===n.nodeValue)return!0;return!1},sre.MathspeakUtil.computeNestingDepth_=function(e,t,n,s,o,i){return o(e)||-1<n.indexOf(e.tagName)||sre.MathspeakUtil.containsAttr(e,s)?i:(-1<t.indexOf(e.tagName)&&i++,!e.childNodes||0===e.childNodes.length?i:(e=sre.DomUtil.toArray(e.childNodes),Math.max.apply(null,e.map(function(e){return sre.MathspeakUtil.computeNestingDepth_(e,t,n,s,o,i)}))))},sre.MathspeakUtil.fractionNestingDepth=function(e){return sre.MathspeakUtil.getNestingDepth("fraction",e,["fraction"],sre.MathspeakUtil.nestingBarriers,{},sre.Messages.MS_FUNC.FRAC_NEST_DEPTH)},sre.MathspeakUtil.nestedFraction=function(e,t,n){return e=sre.MathspeakUtil.fractionNestingDepth(e),e=Array.apply(null,Array(e)).map(function(){return t}),n&&e.push(n),e.join(sre.Messages.REGEXP.JOINER_FRAC)},sre.MathspeakUtil.openingFractionVerbose=function(e){return sre.MathspeakUtil.nestedFraction(e,sre.Messages.MS.START,sre.Messages.MS.FRAC_V)},sre.MathspeakUtil.closingFractionVerbose=function(e){return sre.MathspeakUtil.nestedFraction(e,sre.Messages.MS.END,sre.Messages.MS.FRAC_V)},sre.MathspeakUtil.overFractionVerbose=function(e){return sre.MathspeakUtil.nestedFraction(e,sre.Messages.MS.FRAC_OVER)},sre.MathspeakUtil.openingFractionBrief=function(e){return sre.MathspeakUtil.nestedFraction(e,sre.Messages.MS.START,sre.Messages.MS.FRAC_B)},sre.MathspeakUtil.closingFractionBrief=function(e){return sre.MathspeakUtil.nestedFraction(e,sre.Messages.MS.END,sre.Messages.MS.FRAC_B)},sre.MathspeakUtil.openingFractionSbrief=function(e){return e=sre.MathspeakUtil.fractionNestingDepth(e),1===e?sre.Messages.MS.FRAC_S:sre.Messages.MS_FUNC.COMBINE_NESTED_FRACTION(sre.Messages.MS.NEST_FRAC,sre.Messages.MS_FUNC.RADICAL_NEST_DEPTH(e-1),sre.Messages.MS.FRAC_S)},sre.MathspeakUtil.closingFractionSbrief=function(e){return e=sre.MathspeakUtil.fractionNestingDepth(e),1===e?sre.Messages.MS.ENDFRAC:sre.Messages.MS_FUNC.COMBINE_NESTED_FRACTION(sre.Messages.MS.NEST_FRAC,sre.Messages.MS_FUNC.RADICAL_NEST_DEPTH(e-1),sre.Messages.MS.ENDFRAC)},sre.MathspeakUtil.overFractionSbrief=function(e){return e=sre.MathspeakUtil.fractionNestingDepth(e),1===e?sre.Messages.MS.FRAC_OVER:sre.Messages.MS_FUNC.COMBINE_NESTED_FRACTION(sre.Messages.MS.NEST_FRAC,sre.Messages.MS_FUNC.RADICAL_NEST_DEPTH(e-1),sre.Messages.MS.FRAC_OVER)},sre.MathspeakUtil.isSmallVulgarFraction=function(e){return sre.NumbersUtil.vulgarFractionSmall(e,10,100)?[e]:[]},sre.MathspeakUtil.nestedSubSuper=function(e,t,n){for(;e.parentNode;){var i=e.parentNode,o=i.parentNode,s=e.getAttribute&&e.getAttribute("role");(o.tagName===sre.Semantic.Type.SUBSCRIPT&&e===i.childNodes[1]||o.tagName===sre.Semantic.Type.TENSOR&&s&&(s===sre.Semantic.Role.LEFTSUB||s===sre.Semantic.Role.RIGHTSUB))&&(t=n.sub+sre.Messages.REGEXP.JOINER_SUBSUPER+t),(o.tagName===sre.Semantic.Type.SUPERSCRIPT&&e===i.childNodes[1]||o.tagName===sre.Semantic.Type.TENSOR&&s&&(s===sre.Semantic.Role.LEFTSUPER||s===sre.Semantic.Role.RIGHTSUPER))&&(t=n.sup+sre.Messages.REGEXP.JOINER_SUBSUPER+t),e=o}return t.trim()},sre.MathspeakUtil.subscriptVerbose=function(e){return sre.MathspeakUtil.nestedSubSuper(e,sre.Messages.MS.SUBSCRIPT,{sup:sre.Messages.MS.SUPER,sub:sre.Messages.MS.SUB})},sre.MathspeakUtil.subscriptBrief=function(e){return sre.MathspeakUtil.nestedSubSuper(e,sre.Messages.MS.SUB,{sup:sre.Messages.MS.SUP,sub:sre.Messages.MS.SUB})},sre.MathspeakUtil.superscriptVerbose=function(e){return sre.MathspeakUtil.nestedSubSuper(e,sre.Messages.MS.SUPERSCRIPT,{sup:sre.Messages.MS.SUPER,sub:sre.Messages.MS.SUB})},sre.MathspeakUtil.superscriptBrief=function(e){return sre.MathspeakUtil.nestedSubSuper(e,sre.Messages.MS.SUP,{sup:sre.Messages.MS.SUP,sub:sre.Messages.MS.SUB})},sre.MathspeakUtil.baselineVerbose=function(e){return(e=sre.MathspeakUtil.nestedSubSuper(e,"",{sup:sre.Messages.MS.SUPER,sub:sre.Messages.MS.SUB}))?e.replace(new RegExp(sre.Messages.MS.SUB+"$"),sre.Messages.MS.SUBSCRIPT).replace(new RegExp(sre.Messages.MS.SUPER+"$"),sre.Messages.MS.SUPERSCRIPT):sre.Messages.MS.BASELINE},sre.MathspeakUtil.baselineBrief=function(e){return sre.MathspeakUtil.nestedSubSuper(e,"",{sup:sre.Messages.MS.SUP,sub:sre.Messages.MS.SUB})||sre.Messages.MS.BASE},sre.MathspeakUtil.radicalNestingDepth=function(e){return sre.MathspeakUtil.getNestingDepth("radical",e,["sqrt","root"],sre.MathspeakUtil.nestingBarriers,{})},sre.MathspeakUtil.nestedRadical=function(e,t,n){var s=sre.MathspeakUtil.radicalNestingDepth(e);return n=(e=sre.MathspeakUtil.getRootIndex(e))?sre.Messages.MS_FUNC.COMBINE_ROOT_INDEX(n,e):n,1===s?n:sre.Messages.MS_FUNC.COMBINE_NESTED_RADICAL(t,sre.Messages.MS_FUNC.RADICAL_NEST_DEPTH(s-1),n)},sre.MathspeakUtil.getRootIndex=function(e){return e="sqrt"===e.tagName?"2":sre.XpathUtil.evalXPath("children/*[1]",e)[0].textContent.trim(),sre.Messages.MS_ROOT_INDEX[e]||""},sre.MathspeakUtil.openingRadicalVerbose=function(e){return sre.MathspeakUtil.nestedRadical(e,sre.Messages.MS.NESTED,sre.Messages.MS.STARTROOT)},sre.MathspeakUtil.closingRadicalVerbose=function(e){return sre.MathspeakUtil.nestedRadical(e,sre.Messages.MS.NESTED,sre.Messages.MS.ENDROOT)},sre.MathspeakUtil.indexRadicalVerbose=function(e){return sre.MathspeakUtil.nestedRadical(e,sre.Messages.MS.NESTED,sre.Messages.MS.ROOTINDEX)},sre.MathspeakUtil.openingRadicalBrief=function(e){return sre.MathspeakUtil.nestedRadical(e,sre.Messages.MS.NEST_ROOT,sre.Messages.MS.STARTROOT)},sre.MathspeakUtil.closingRadicalBrief=function(e){return sre.MathspeakUtil.nestedRadical(e,sre.Messages.MS.NEST_ROOT,sre.Messages.MS.ENDROOT)},sre.MathspeakUtil.indexRadicalBrief=function(e){return sre.MathspeakUtil.nestedRadical(e,sre.Messages.MS.NEST_ROOT,sre.Messages.MS.ROOTINDEX)},sre.MathspeakUtil.openingRadicalSbrief=function(e){return sre.MathspeakUtil.nestedRadical(e,sre.Messages.MS.NEST_ROOT,sre.Messages.MS.ROOT)},sre.MathspeakUtil.indexRadicalSbrief=function(e){return sre.MathspeakUtil.nestedRadical(e,sre.Messages.MS.NEST_ROOT,sre.Messages.MS.INDEX)},sre.MathspeakUtil.underscoreNestingDepth=function(e){return sre.MathspeakUtil.getNestingDepth("underscore",e,["underscore"],sre.MathspeakUtil.nestingBarriers,{},function(e){return e.tagName&&e.tagName===sre.Semantic.Type.UNDERSCORE&&e.childNodes[0].childNodes[1].getAttribute("role")===sre.Semantic.Role.UNDERACCENT})},sre.MathspeakUtil.nestedUnderscore=function(e){return e=sre.MathspeakUtil.underscoreNestingDepth(e),Array(e).join(sre.Messages.MS.UNDER)+sre.Messages.MS.UNDERSCRIPT},sre.MathspeakUtil.overscoreNestingDepth=function(e){return sre.MathspeakUtil.getNestingDepth("overscore",e,["overscore"],sre.MathspeakUtil.nestingBarriers,{},function(e){return e.tagName&&e.tagName===sre.Semantic.Type.OVERSCORE&&e.childNodes[0].childNodes[1].getAttribute("role")===sre.Semantic.Role.OVERACCENT})},sre.MathspeakUtil.nestedOverscore=function(e){return e=sre.MathspeakUtil.overscoreNestingDepth(e),Array(e).join(sre.Messages.MS.OVER)+sre.Messages.MS.OVERSCRIPT},sre.MathspeakUtil.determinantIsSimple=function(e){if(e.tagName!==sre.Semantic.Type.MATRIX||e.getAttribute("role")!==sre.Semantic.Role.DETERMINANT)return[];for(var t,s=sre.XpathUtil.evalXPath("children/row/children/cell/children/*",e),n=0;t=s[n];n++)if(t.tagName!==sre.Semantic.Type.NUMBER){if(t.tagName===sre.Semantic.Type.IDENTIFIER&&(t=t.getAttribute("role"),t===sre.Semantic.Role.LATINLETTER||t===sre.Semantic.Role.GREEKLETTER||t===sre.Semantic.Role.OTHERLETTER))continue;return[]}return[e]},sre.MathspeakUtil.generateBaselineConstraint=function(){for(var s,e=function(e){return e.map(function(e){return"ancestor::"+e})},i="not("+e(["subscript","superscript","tensor"]).join(" or ")+")",t=e(["relseq","multrel"]),e=e(["fraction","punctuation","fenced","sqrt","root"]),n=[],o=0;s=e[o];o++)n=n.concat(t.map(function(e){return s+"/"+e}));return t="not("+n.join(" | ")+")",["ancestor::*/following-sibling::*",i,t].join(" and ")},sre.MathspeakUtil.removeParens=function(e){return!e.childNodes.length||!e.childNodes[0].childNodes.length||!e.childNodes[0].childNodes[0].childNodes.length?"":(e=e.childNodes[0].childNodes[0].childNodes[0].textContent,e.match(/^\(.+\)$/)?e.slice(1,-1):e)},sre.MathspeakUtil.componentString_={3:"CSFleftsuperscript",4:"CSFleftsubscript",2:"CSFbaseline",1:"CSFrightsubscript",0:"CSFrightsuperscript"},sre.MathspeakUtil.childNumber_={4:2,3:3,2:1,1:4,0:5},sre.MathspeakUtil.generateTensorRuleStrings_=function(e){var t,n,o,s=[],i="",a="";e=parseInt(e,2);for(t=0;5>t;t++)n="children/*["+sre.MathspeakUtil.childNumber_[t]+"]",e&1?(o=sre.MathspeakUtil.componentString_[t%5],i="[t] "+o+"Verbose; [n] "+n+";"+i,a="[t] "+o+"Brief; [n] "+n+";"+a):s.unshift("name("+n+')="empty"'),e>>=1;return s.push(i),s.push(a),s},sre.MathspeakUtil.generateTensorRules=function(e){o=goog.bind(e.defineRule,e),l=goog.bind(e.defineRulesAlias,e),e=goog.bind(e.defineSpecialisedRule,e);for(d="11111 11110 11101 11100 10111 10110 10101 10100 01111 01110 01101 01100".split(" "),i=0;n=d[i];i++){var o,i,l,d,t="tensor"+n,n=sre.MathspeakUtil.generateTensorRuleStrings_(n),a=n.pop(),r=n.pop(),s=[t,"default",r,"self::tensor"].concat(n),c=[t,"brief",a,"self::tensor"].concat(n);o.apply(null,s),o.apply(null,c),e(t,"brief","sbrief"),s=sre.MathspeakUtil.componentString_[2],r+="; [t]"+s+"Verbose",a+="; [t]"+s+"Brief",t+="-baseline",s=[t,"default",r,"self::tensor","following-sibling::*"].concat(n),c=[t,"brief",a,"self::tensor","following-sibling::*"].concat(n),o.apply(null,s),o.apply(null,c),e(t,"brief","sbrief"),t=[t,"self::tensor","not(following-sibling::*)","ancestor::fraction|ancestor::punctuated|ancestor::fenced|ancestor::root|ancestor::sqrt|ancestor::relseq|ancestor::multirel|@embellished"].concat(n),l.apply(null,t)}},sre.Locale={},sre.Locale.nestingToString=function(e){switch(e){case 1:return sre.Messages.MS.ONCE||"";case 2:return sre.Messages.MS.TWICE;default:return e.toString()}},sre.Locale.vulgarNestingDepth=function(e){return!!sre.MathspeakUtil.isSmallVulgarFraction(e).length},sre.Locale.combinePostfixIndex=function(e,t){return e===sre.Messages.MS.ROOTINDEX||e===sre.Messages.MS.INDEX?e:e+" "+t},sre.Locale.localFont=function(e){var t=sre.Messages.FONT[e];return void 0===t&&(t=e||""),"string"==typeof t?t:t[0]},sre.Grammar.getInstance().setCorrection("localFont",sre.Locale.localFont),sre.Locale.localRole=function(e){return sre.Messages.ROLE[e]||e},sre.Grammar.getInstance().setCorrection("localRole",sre.Locale.localRole),sre.Locale.localEnclose=function(e){return sre.Messages.ENCLOSE[e]||e},sre.Grammar.getInstance().setCorrection("localEnclose",sre.Locale.localEnclose),sre.Locale.makePlural=function(e){var t=sre.Messages.PLURAL_UNIT[e];return t||sre.Messages.PLURAL(e)},sre.Grammar.getInstance().setCorrection("plural",sre.Locale.makePlural),sre.Locale.prefixCombiner=function(e,t,n){return e=n?n+" "+e:e,t?t+" "+e:e},sre.Locale.postfixCombiner=function(e,t,n){return e=n?n+" "+e:e,t?e+" "+t:e},sre.Numbers.de={},sre.Numbers.de.onesNumbers_=" eins zwei drei vier fünf sechs sieben acht neun zehn elf zwölf dreizehn vierzehn fünfzehn sechzehn siebzehn achtzehn neunzehn".split(" "),sre.Numbers.de.tensNumbers_="  zwanzig dreißig vierzig fünfzig sechzig siebzig achtzig neunzig".split(" "),sre.Numbers.de.largeNumbers_=" tausend million milliarde billion billiarde trillion trilliard quadrillion quadrilliard quintillion quintilliarde sextillion sextilliarde".split(" "),sre.Numbers.de.onePrefix_=function(e){return e===sre.Numbers.de.onesNumbers_[1]?"ein":e},sre.Numbers.de.hundredsToWords_=function(e){e%=1e3;var s,t=sre.Numbers.de.onesNumbers_[Math.floor(e/100)],n=t?sre.Numbers.de.onePrefix_(t)+"hundert":"";return(e%=100)&&(n+=n?sre.Numbers.de.NUMBERS.numSep:"",(t=sre.Numbers.de.onesNumbers_[e])?n+=t:(s=sre.Numbers.de.tensNumbers_[Math.floor(e/10)],t=sre.Numbers.de.onesNumbers_[e%10],n+=t?sre.Numbers.de.onePrefix_(t)+"und"+s:s)),n},sre.Numbers.de.numberToWords=function(e){if(e>=Math.pow(10,36))return e.toString();for(var s,t=0,n="";0<e;)e%1e3&&(s=sre.Numbers.de.hundredsToWords_(e%1e3),n=sre.Numbers.de.onePrefix_(s)+(t?sre.Numbers.de.largeNumbers_[t]:"")+n),e=Math.floor(e/1e3),t++;return n.replace(/ein$/,"eins")},sre.Numbers.de.numberToOrdinal=function(e,t){return 1===e?"eintel":2===e?t?"halbe":"halb":sre.Numbers.de.wordOrdinal(e)+"l"},sre.Numbers.de.wordOrdinal=function(e){return 1===e?"erste":3===e?"dritte":7===e?"siebte":8===e?"achte":sre.Numbers.de.numberToWords(e)+(19>e?"te":"ste")},sre.Numbers.de.simpleOrdinal=function(e){return e.toString()+"."},sre.Numbers.de.NUMBERS={wordOrdinal:sre.Numbers.de.wordOrdinal,simpleOrdinal:sre.Numbers.de.simpleOrdinal,numberToWords:sre.Numbers.de.numberToWords,numberToOrdinal:sre.Numbers.de.numberToOrdinal,vulgarSep:" ",numSep:""},germanPrefixCombiner=function(e,t,n){return"s"===n&&(t=t.split(" ").map(function(e){return e.replace(/s$/,"")}).join(" "),n=""),e=n?n+" "+e:e,t?t+" "+e:e},germanPostfixCombiner=function(e,t,n){return e=n&&"s"!==n?n+" "+e:e,t?e+" "+t:e},sre.Locale.de={MS:{START:"Anfang",FRAC_V:"Bruch",FRAC_B:"Bruch",FRAC_S:"Bruch",END:"Ende",FRAC_OVER:"durch",TWICE:"Twice",NEST_FRAC:"geschachtelt",ENDFRAC:"Ende Bruch",SUPER:"hoch",SUB:"Index",SUP:"hoch",SUPERSCRIPT:"hoch",SUBSCRIPT:"Index",BASELINE:"Grundlinie",BASE:"Grund",NESTED:"geschachtelte",NEST_ROOT:"geschachtelte",STARTROOT:"Anfang Wurzel",ENDROOT:"Ende Wurzel",ROOTINDEX:"Wurzelexponent",ROOT:"Wurzel",INDEX:"Exponent",UNDER:"Unter",UNDERSCRIPT:"Unterschrift",OVER:"Über",OVERSCRIPT:"Überschrift"},MS_FUNC:{FRAC_NEST_DEPTH:sre.Locale.vulgarNestingDepth,RADICAL_NEST_DEPTH:function(e){return 1<e?sre.Numbers.de.NUMBERS.numberToWords(e)+"fach":""},COMBINE_ROOT_INDEX:function(e,t){return e.replace("Wurzel",t?t+"wurzel":"")},COMBINE_NESTED_FRACTION:function(e,t,n){return e+t+n},COMBINE_NESTED_RADICAL:function(e,t,n){return e=n.match(/exponent$/)?e+"r":e,e=(t?t+" ":"")+e,n.match(/ /)?n.replace(/ /," "+e+" "):e+" "+n},FONT_REGEXP:function(e){return e=e.split(" ").map(function(e){return e.replace(/s$/,"(|s)")}).join(" "),new RegExp("((^"+e+" )|( "+e+"$))")}},MS_ROOT_INDEX:{2:"Quadrat",3:"Kubik"},FONT:{bold:"fettes","bold-fraktur":"fettes Fraktur","bold-italic":"fettkursives","bold-script":"fettes Schreibschrift",caligraphic:"kalligrafisches","caligraphic-bold":"fettes kalligrafisches","double-struck":["mit Doppelstrich",germanPostfixCombiner],"double-struck-italic":["kursiv mit Doppelstrich",germanPostfixCombiner],fraktur:"Fraktur",fullwidth:"vollbreites",italic:"kursives",monospace:"nichtproportionales",normal:"normales",oldstyle:"antiquiertes","oldstyle-bold":"antiquiertes fettes",script:"Schreibschrift","sans-serif":"serifenloses","sans-serif-italic":"serifenloses kursives","sans-serif-bold":"serifenloses fettes","sans-serif-bold-italic":"serifenloses fettkursives",unknown:"unbekannt"},EMBELLISH:{super:"hoch",sub:"Index",circled:"eingekreistes",parenthesized:"eingeklammertes",period:["Punkt",germanPostfixCombiner],"negative-circled":"schwarz eingekreistes","double-circled":"doppelt eingekreistes","circled-sans-serif":"eingekreistes serifenloses","negative-circled-sans-serif":"schwarz eingekreistes serifenloses",comma:["Komma",germanPostfixCombiner],squared:"umrahmtes","negative-squared":"schwarz umrahmtes"},ROLE:{addition:"Addition",multiplication:"Multiplikation",subtraction:"Subtraktion",division:"Division",equality:"Gleichung",inequality:"Ungleichung",element:"Element",arrow:"Pfeil",determinant:"Determinante",rowvector:"Zeilenvektor",binomial:"Binomialkoeffizient",squarematrix:"quadratische Matrize",multiline:"mehrzeiligem Ausdruck",matrix:"Matrize",vector:"Vektor",cases:"Fallunterscheidung",table:"Tabelle",unknown:"unbekannt"},ENCLOSE:{longdiv:"langer Bruchstrich",actuarial:"Bilanzsumme",radical:"Quadratwurzel",box:"rechteckige Umrandung",roundedbox:"abgerundete rechteckige Umrandung",circle:"kreisähnliche Umrandung",left:"senkrechte Linie links",right:"senkrechte Linie rechts",top:"waagerechte Linie oberhalb",bottom:"waagerechte Linie unterhalb",updiagonalstrike:"durchgestrichen",downdiagonalstrike:"durchgestrichen",verticalstrike:"senkrecht durchgestrichen",horizontalstrike:"durchgestrichen",madruwb:"arabisches Fakultätssymbol",updiagonalarrow:"Pfeil von links unten nach rechts oben",phasorangle:"phasor angle",unknown:"langer Bruchstrich"},NAVIGATE:{COLLAPSIBLE:"kollabierbar",EXPANDABLE:"ausfaltbar",LEVEL:"Niveau"},REGEXP:{TEXT:"a-zA-ZäöüÄÖÜß",NUMBER:"((\\d{1,3})(?=(.| ))((.| )\\d{3})*(\\,\\d+)?)|^\\d*\\,\\d+|^\\d+",DECIMAL_MARK:",",DIGIT_GROUP:"\\.",JOINER_SUBSUPER:" ",JOINER_FRAC:" "},PLURAL_UNIT:{Meile:"Meilen",Yard:"Yards",Joule:"Joules",Gallone:"Gallonen",Unze:"Unzen",Tonne:"Tonnen",Minute:"Minuten",Stunde:"Stunden",Sekunde:"Sekunden"},PLURAL:function(e){return e.match(/(B|b)yte$/)?e.replace(/yte$/,"ytes"):e},NUMBERS:sre.Numbers.de.NUMBERS,ALPHABETS:{latinSmall:"abcdefghijklmnopqrstuvwxyz".split(""),latinCap:"ABCDEFGHIJKLMNOPQRSTUVWXYZ".split(""),greekSmall:"nabla;alpha;beta;gamma;delta;epsilon;zeta;eta;theta;iota;kappa;lambda;my;ny;xi;omikron;pi;rho;abschließendes sigma;sigma;tau;ypsilon;phi;chi;psi;omega;partielle Ableitung;epsilon;theta;kappa;phi;rho;pi".split(";"),greekCap:"Alpha Beta Gamma Delta Epsilon Zeta Eta Theta Iota Kappa Lambda My Ny Xi Omikron Pi Rho Theta Sigma Tau Ypsilon Phi Chi Psi Omega".split(" ")},ALPHABET_TRANSFORMERS:{digit:{default:function(e){return 0===e?"null":sre.Numbers.de.numberToWords(e)},mathspeak:function(e){return e.toString()},clearspeak:function(e){return e.toString()}},letter:{default:function(e){return e}}},ALPHABET_PREFIXES:{capPrefix:{default:"großes"},smallPrefix:{default:""},digitPrefix:{default:"s"}},ALPHABET_COMBINER:germanPrefixCombiner},sre.Grammar.getInstance().setCorrection("correctOne",function(e){return e.replace(/^eins /,"ein ")}),sre.Grammar.getInstance().setCorrection("localFontNumber",function(e){var t=sre.Messages.FONT[e];return void 0===t&&(t=e||""),t="string"==typeof t?t:t[0],t.split(" ").map(function(e){return e.replace(/s$/,"")}).join(" ")}),sre.Grammar.getInstance().setCorrection("lowercase",function(e){return e.toLowerCase()}),sre.Grammar.getInstance().setCorrection("article",function(e){return"dative"===sre.Grammar.getInstance().getParameter("case")?{der:"dem",die:"der",das:"dem"}[e]:e}),sre.Grammar.getInstance().setCorrection("masculine",function(e){return"dative"===sre.Grammar.getInstance().getParameter("case")?e+"n":e}),sre.Numbers.en={},sre.Numbers.en.onesNumbers_=" one two three four five six seven eight nine ten eleven twelve thirteen fourteen fifteen sixteen seventeen eighteen nineteen".split(" "),sre.Numbers.en.tensNumbers_="  twenty thirty forty fifty sixty seventy eighty ninety".split(" "),sre.Numbers.en.largeNumbers_=" thousand million billion trillion quadrillion quintillion sextillion septillion octillion nonillion decillion".split(" "),sre.Numbers.en.hundredsToWords_=function(e){e%=1e3;var t=sre.Numbers.en.onesNumbers_[Math.floor(e/100)]?sre.Numbers.en.onesNumbers_[Math.floor(e/100)]+sre.Numbers.en.NUMBERS.numSep+"hundred":"";return(e%=100)&&(t+=t?sre.Numbers.en.NUMBERS.numSep:"",t+=sre.Numbers.en.onesNumbers_[e]||sre.Numbers.en.tensNumbers_[Math.floor(e/10)]+(e%10?sre.Numbers.en.NUMBERS.numSep+sre.Numbers.en.onesNumbers_[e%10]:"")),t},sre.Numbers.en.numberToWords=function(e){if(e>=Math.pow(10,36))return e.toString();for(var t=0,n="";0<e;)e%1e3&&(n=sre.Numbers.en.hundredsToWords_(e%1e3)+(t?"-"+sre.Numbers.en.largeNumbers_[t]+"-":"")+n),e=Math.floor(e/1e3),t++;return n.replace(/-$/,"")},sre.Numbers.en.numberToOrdinal=function(e,t){return 1===e?t?"oneths":"oneth":2===e?t?"halves":"half":(e=sre.Numbers.en.wordOrdinal(e),t?e+"s":e)},sre.Numbers.en.wordOrdinal=function(e){return e=sre.Numbers.en.numberToWords(e),e=e.match(/one$/)?e.slice(0,-3)+"first":e.match(/two$/)?e.slice(0,-3)+"second":e.match(/three$/)?e.slice(0,-5)+"third":e.match(/five$/)?e.slice(0,-4)+"fifth":e.match(/eight$/)?e.slice(0,-5)+"eighth":e.match(/nine$/)?e.slice(0,-4)+"ninth":e.match(/twelve$/)?e.slice(0,-6)+"twelfth":e.match(/ty$/)?e.slice(0,-2)+"tieth":e+"th"},sre.Numbers.en.simpleOrdinal=function(e){var n=e%100,t=e.toString();if(10<n&&20>n)return t+"th";switch(e%10){case 1:return t+"st";case 2:return t+"nd";case 3:return t+"rd";default:return t+"th"}},sre.Numbers.en.NUMBERS={wordOrdinal:sre.Numbers.en.wordOrdinal,simpleOrdinal:sre.Numbers.en.simpleOrdinal,numberToWords:sre.Numbers.en.numberToWords,numberToOrdinal:sre.Numbers.en.numberToOrdinal,vulgarSep:" ",numSep:" "},sre.Locale.en={MS:{START:"Start",FRAC_V:"Fraction",FRAC_B:"Frac",FRAC_S:"Frac",END:"End",FRAC_OVER:"Over",TWICE:"Twice",NEST_FRAC:"Nest",ENDFRAC:"EndFrac",SUPER:"Super",SUB:"Sub",SUP:"Sup",SUPERSCRIPT:"Superscript",SUBSCRIPT:"Subscript",BASELINE:"Baseline",BASE:"Base",NESTED:"Nested",NEST_ROOT:"Nest",STARTROOT:"StartRoot",ENDROOT:"EndRoot",ROOTINDEX:"RootIndex",ROOT:"Root",INDEX:"Index",UNDER:"Under",UNDERSCRIPT:"Underscript",OVER:"Over",OVERSCRIPT:"Overscript"},MS_FUNC:{FRAC_NEST_DEPTH:sre.Locale.vulgarNestingDepth,RADICAL_NEST_DEPTH:sre.Locale.nestingToString,COMBINE_ROOT_INDEX:function(e){return e},COMBINE_NESTED_FRACTION:function(e,t,n){return e+t+n},COMBINE_NESTED_RADICAL:function(e,t,n){return e+t+n},FONT_REGEXP:function(e){return new RegExp("^"+e.split(/ |-/).join("( |-)")+"( |-)")}},MS_ROOT_INDEX:{},FONT:{bold:"bold","bold-fraktur":"bold fraktur","bold-italic":"bold italic","bold-script":"bold script",caligraphic:"calligraphic","caligraphic-bold":"calligraphic bold","double-struck":"double struck","double-struck-italic":"double struck italic",fraktur:"fraktur",fullwidth:"fullwidth",italic:"italic",monospace:"monospace",normal:"normal",oldstyle:"oldstyle","oldstyle-bold":"oldstyle bold",script:"script","sans-serif":"sans serif","sans-serif-italic":"sans serif italic","sans-serif-bold":"sans serif bold","sans-serif-bold-italic":"sans serif bold italic",unknown:"unknown"},EMBELLISH:{super:"super",sub:"sub",circled:"circled",parenthesized:"parenthesized",period:["period",sre.Locale.postfixCombiner],"negative-circled":"black circled","double-circled":"double circled","circled-sans-serif":"circled sans serif","negative-circled-sans-serif":"black circled sans serif",comma:["comma",sre.Locale.postfixCombiner],squared:"squared","negative-squared":"black squared"},ROLE:{addition:"addition",multiplication:"multiplication",subtraction:"subtraction",division:"division",equality:"equality",inequality:"inequality",element:"element",arrow:"arrow",determinant:"determinant",rowvector:"row vector",binomial:"binomial",squarematrix:"square matrix",multiline:"multiple lines",matrix:"matrix",vector:"vector",cases:"case statement",table:"table",unknown:"unknown"},ENCLOSE:{longdiv:"long division",actuarial:"actuarial symbol",radical:"square root",box:"box",roundedbox:"rounded box",circle:"circle",left:"left vertical-line",right:"right vertical-line",top:"overbar",bottom:"underbar",updiagonalstrike:"crossout",downdiagonalstrike:"crossout",verticalstrike:"vertical strikeout",horizontalstrike:"crossout",madruwb:"Arabic factorial symbol",updiagonalarrow:"diagonal arrow",phasorangle:"phasor angle",unknown:"long division"},NAVIGATE:{COLLAPSIBLE:"collapsible",EXPANDABLE:"expandable",LEVEL:"Level"},REGEXP:{TEXT:"a-zA-Z",NUMBER:"((\\d{1,3})(?=(,| ))((,| )\\d{3})*(\\.\\d+)?)|^\\d*\\.\\d+|^\\d+",DECIMAL_MARK:"\\.",DIGIT_GROUP:",",JOINER_SUBSUPER:" ",JOINER_FRAC:""},PLURAL_UNIT:{foot:"feet",inch:"inches","square foot":"square feet","square inch":"square inches","cubic foot":"cubic feet","cubic inch":"cubic inches"},NUMBERS:sre.Numbers.en.NUMBERS,ALPHABETS:{latinSmall:"abcdefghijklmnopqrstuvwxyz".split(""),latinCap:"ABCDEFGHIJKLMNOPQRSTUVWXYZ".split(""),greekSmall:"nabla;alpha;beta;gamma;delta;epsilon;zeta;eta;theta;iota;kappa;lamda;mu;nu;xi;omicron;pi;rho;final sigma;sigma;tau;upsilon;phi;chi;psi;omega;partial differential;epsilon;theta;kappa;phi;rho;pi".split(";"),greekCap:"Alpha Beta Gamma Delta Epsilon Zeta Eta Theta Iota Kappa Lamda Mu Nu Xi Omicron Pi Rho Theta Sigma Tau Upsilon Phi Chi Psi Omega".split(" ")},ALPHABET_TRANSFORMERS:{digit:{default:function(e){return 0===e?"zero":sre.Numbers.en.numberToWords(e)},mathspeak:function(e){return e.toString()},clearspeak:function(e){return e.toString()}},letter:{default:function(e){return e}}},ALPHABET_PREFIXES:{capPrefix:{default:"cap",mathspeak:"upper"},smallPrefix:{default:""},digitPrefix:{default:""}},ALPHABET_COMBINER:sre.Locale.prefixCombiner},sre.Numbers.es={},sre.Numbers.es.onesNumbers_=" uno dos tres cuatro cinco seis siete ocho nueve diez once doce trece catorce quince dieciséis diecisiete dieciocho diecinueve veinte veintiuno veintidós veintitrés veinticuatro veinticinco veintiséis veintisiete veintiocho veintinueve".split(" "),sre.Numbers.es.tensNumbers_="   treinta cuarenta cincuenta sesenta setenta ochenta noventa".split(" "),sre.Numbers.es.hundredsNumbers_=" cien doscientos trescientos cuatrocientos quinientos seiscientos setecientos ochocientos novecientos".split(" "),sre.Numbers.es.largeNumbers_=";mil;millón;mil millónes;billón;mil billónes;trillón;mil trillónes;cuatrilló;mil cuatrillóes;quintillón;mil quintillónes;sextillón;mil sextillónes;septillón;mil septillónes;octillón;mil octillónes;nonillón;mil nonillónes;decillón;mil decillónes".split(";"),sre.Numbers.es.tensToWords_=function(e){var t=e%100;return 30>t?sre.Numbers.es.onesNumbers_[t]:(e=sre.Numbers.es.tensNumbers_[Math.floor(t/10)],t=sre.Numbers.es.onesNumbers_[t%10],e&&t?e+" y "+t:e||t)},sre.Numbers.es.hundredsToWords_=function(e){var n,t=e%1e3;return e=Math.floor(t/100),n=sre.Numbers.es.hundredsNumbers_[e],t=sre.Numbers.es.tensToWords_(t%100),1===e?t?n+"to "+t:n:n&&t?n+" "+t:n||t},sre.Numbers.es.numberToWords=function(e){if(e>=Math.pow(10,36))return e.toString();for(var t,s,i,o=0,n="";0<e;)s=e%1e3,s&&(t=sre.Numbers.es.largeNumbers_[o],i=sre.Numbers.es.hundredsToWords_(s),o?1===s?(t=t.match("/^mil( |$)/")?t:"un "+t,n=t+(n?" "+n:"")):(t=t.replace(/\u00f3n$/,"ones"),n=sre.Numbers.es.hundredsToWords_(s)+" "+t+(n?" "+n:"")):n=i),e=Math.floor(e/1e3),o++;return n},sre.Numbers.es.onesOrdinals_="primera segunda tercera cuarta quinta sexta séptima octava novena décima undécima duodécima".split(" "),sre.Numbers.es.tensOrdinals_="décima vigésima trigésima cuadragésima quincuagésima sexagésima septuagésima octogésima nonagésima".split(" "),sre.Numbers.es.hundredsOrdinals_="centésima ducentésima tricentésima cuadringentésima quingentésima sexcentésima septingentésima octingentésima noningentésima".split(" "),sre.Numbers.es.numberToOrdinal=function(e,t){if(1999<e)return e.toString()+"a";if(12>=e)return sre.Numbers.es.onesOrdinals_[e-1];if(t=[],1e3<=e&&(e-=1e3,t.push("milésima")),!e)return t.join(" ");var n=Math.floor(e/100);return 0<n&&(t.push(sre.Numbers.es.hundredsOrdinals_[n-1]),e%=100),12>=e?t.push(sre.Numbers.es.onesOrdinals_[e-1]):(n=Math.floor(e/10),0<n&&(t.push(sre.Numbers.es.tensOrdinals_[n-1]),e%=10),0<e&&t.push(sre.Numbers.es.onesOrdinals_[e-1])),t.join(" ")},sre.Numbers.es.simpleOrdinal=function(e){var t=sre.Grammar.getInstance().getParameter("gender");return e.toString()+("female"===t?"a":"o")},sre.Numbers.es.NUMBERS={simpleOrdinal:sre.Numbers.es.simpleOrdinal,numberToWords:sre.Numbers.es.numberToWords,numberToOrdinal:sre.Numbers.es.numberToOrdinal,vulgarSep:"-"},sansserifCombiner=function(e,t,n){return e="sans serif "+(n?n+" "+e:e),t?e+" "+t:e},sre.Locale.es={MS:{START:"empezar",FRAC_V:"fracción",FRAC_B:"frac",FRAC_S:"frac",END:"finalizar",FRAC_OVER:"entre",TWICE:"",NEST_FRAC:"",ENDFRAC:"",SUPER:"super",SUB:"sub",SUP:"sup",SUPERSCRIPT:"superíndice",SUBSCRIPT:"subíndice",BASELINE:"línea base",BASE:"",NESTED:"",NEST_ROOT:"",STARTROOT:"empezar raíz",ENDROOT:"finalizar raíz",ROOTINDEX:"índice de raíz",ROOT:"raíz",INDEX:"",UNDER:"bajo",UNDERSCRIPT:"bajoíndice",OVER:"sobre",OVERSCRIPT:"sobreíndice"},MS_FUNC:{FRAC_NEST_DEPTH:function(){return!1},RADICAL_NEST_DEPTH:function(){return""},COMBINE_ROOT_INDEX:sre.Locale.combinePostfixIndex,COMBINE_NESTED_FRACTION:function(e,t,n){return e+t+n},COMBINE_NESTED_RADICAL:function(e,t,n){return e+n},FONT_REGEXP:function(e){return RegExp("^"+e+" ")}},MS_ROOT_INDEX:{2:"cuadrada",3:"cúbica",4:"a la cuarta",5:"a la quinta",6:"a la sexta",7:"a la séptima",8:"a la octava",9:"a la novena",10:"a la décima"},FONT:{bold:"negrita","bold-fraktur":"negrita Fraktur","bold-italic":"negrita cursiva","bold-script":"negrita script",caligraphic:"caligráfica","caligraphic-bold":"caligráfica negrita","double-struck":"negrita de pizarra","double-struck-italic":"negrita de pizarra cursiva",fraktur:"Fraktur",fullwidth:"ancho completo",italic:"cursiva",monospace:"monoespacio",normal:"normal",oldstyle:"estilo antiguo","oldstyle-bold":"estilo antiguo negrita",script:"script","sans-serif":"sans serif","sans-serif-italic":"sans serif cursiva","sans-serif-bold":"sans serif negrita","sans-serif-bold-italic":"sans serif negrita cursiva",unknown:"desconocida"},ROLE:{addition:"adición",multiplication:"multiplicación",subtraction:"resta",division:"división",equality:"igualdad",inequality:"desigualdad",element:"elemento",arrow:"flecha",determinant:"determinante",rowvector:"fila vector",binomial:"binomial",squarematrix:"matriz cuadrada",multiline:"líneas múltiples",matrix:"matriz",vector:"vector",cases:"declaración de caso",table:"mesa",unknown:"desconocida"},ENCLOSE:{longdiv:"división larga",actuarial:"símbolo actuarial",radical:"raíz cuadrada",box:"caja",roundedbox:"caja redondeada",circle:"círculo",left:"barra vertical izquierda",right:"barra vertical derecha",top:"barra",bottom:"subbarra",updiagonalstrike:"tachadura",downdiagonalstrike:"tachadura",verticalstrike:"ponchado vertical",horizontalstrike:"cruce",madruwb:"símbolo factorial árabe",updiagonalarrow:"flecha diagonal",phasorangle:"ángulo de fasores",unknown:"división larga"},EMBELLISH:{super:"superíndice",sub:"subíndice",circled:["en circulo",sre.Locale.postfixCombiner],parenthesized:["entre paréntesis",sre.Locale.postfixCombiner],period:["punto",sre.Locale.postfixCombiner],"negative-circled":["en circulo negro",sre.Locale.postfixCombiner],"double-circled":["en doble circulo",sre.Locale.postfixCombiner],"circled-sans-serif":["en circulo",sansserifCombiner],"negative-circled-sans-serif":["en circulo negro",sansserifCombiner],comma:["coma",sre.Locale.postfixCombiner],squared:["en cuadrado",sre.Locale.postfixCombiner],"negative-squared":["en cuadrado negro",sre.Locale.postfixCombiner]},NAVIGATE:{COLLAPSIBLE:"plegable",EXPANDABLE:"ampliable",LEVEL:"nivel"},REGEXP:{TEXT:"a-zA-ZáéíóúñÁÉÍÓÚÑ",NUMBER:"((\\d{1,3})(?=( ))(( )\\d{3})*(,\\d+)?)|^\\d*,\\d+|^\\d+",DECIMAL_MARK:",",DIGIT_GROUP:"",JOINER_SUBSUPER:" ",JOINER_FRAC:" "},PLURAL_UNIT:{},PLURAL:function(e){return/.*s$/.test(e)?e:e+"s"},NUMBERS:sre.Numbers.es.NUMBERS,ALPHABETS:{latinSmall:"abcdefghijklmnopqrstuvwxyz".split(""),latinCap:"ABCDEFGHIJKLMNOPQRSTUVWXYZ".split(""),greekSmall:"nabla;alfa;beta;gamma;delta;épsilon;zeta;eta;theta;iota;kappa;lambda;mi;ni;xi;ómicron;pi;rho;sigma final;sigma;tau;ípsilon;phi;ji;psi;omega;diferencial parcial;épsilon;theta;kappa;phi;rho;pi".split(";"),greekCap:"Alfa Beta Gamma Delta Épsilon Zeta Eta Theta Iota Kappa Lambda Mi Ni Xi Ómicron Pi Rho Theta Sigma Tau Ípsilon Phi Ji Psi Omega".split(" ")},ALPHABET_TRANSFORMERS:{digit:{default:function(e){return 0===e?"cero":sre.Numbers.es.numberToWords(e)},mathspeak:function(e){return e.toString()},clearspeak:function(e){return e.toString()}},letter:{default:function(e){return e}}},ALPHABET_PREFIXES:{capPrefix:{default:"mayúscula"},smallPrefix:{default:""},digitPrefix:{default:""}},ALPHABET_COMBINER:sre.Locale.prefixCombiner,UNIT_TIMES:"por"},sre.Numbers.fr={},sre.Numbers.fr.SUB_ISO="fr",sre.Numbers.fr.onesNumbers_=" un deux trois quatre cinq six sept huit neuf dix onze douze treize quatorze quinze seize dix-sept dix-huit dix-neuf".split(" "),sre.Numbers.fr.tensNumbers_={fr:"  vingt trente quarante cinquante soixante soixante-dix quatre-vingts quatre-vingt-dix".split(" "),be:"  vingt trente quarante cinquante soixante septante quatre-vingts nonante".split(" "),sw:"  vingt trente quarante cinquante soixante septante huitante nonante".split(" ")},sre.Numbers.fr.largeNumbers_=";mille;millions;milliards;billions;mille billions;trillions;mille trillions;quadrillions;mille quadrillions;quintillions;mille quintillions".split(";"),sre.Numbers.fr.hundredsToWords_=function(e){var n,s,t=e%1e3;return e=sre.Numbers.fr.onesNumbers_[Math.floor(t/100)]?sre.Numbers.fr.onesNumbers_[Math.floor(t/100)]+"-cent":"",(t%=100)&&(e+=e?"-":"",n=sre.Numbers.fr.onesNumbers_[t],n?e+=n:(s=sre.Numbers.fr.tensNumbers_[sre.Numbers.fr.SUB_ISO][Math.floor(t/10)],s.match(/-dix$/)?(n=sre.Numbers.fr.onesNumbers_[t%10+10],e+=s.replace(/-dix$/,"")+"-"+n):e+=s+(t%10?"-"+sre.Numbers.fr.onesNumbers_[t%10]:""))),(t=e.match(/s-\w+$/))?e.replace(/s-\w+$/,t[0].slice(1)):e.replace(/-un$/,"-et-un")},sre.Numbers.fr.numberToWords=function(e){if(e>=Math.pow(10,36))return e.toString();for(var t,n,i,o=0,s="";0<e;)n=e%1e3,n&&(t=sre.Numbers.fr.largeNumbers_[o],i=sre.Numbers.fr.hundredsToWords_(n),t&&t.match(/^mille /)?(n=t.replace(/^mille /,""),s=s.match(RegExp(n))?i+(o?"-mille-":"")+s:s.match(RegExp(n.replace(/s$/,"")))?i+(o?"-mille-":"")+s.replace(n.replace(/s$/,""),n):i+(o?"-"+t+"-":"")+s):(t=1===n&&t?t.replace(/s$/,""):t,s=i+(o?"-"+t+"-":"")+s)),e=Math.floor(e/1e3),o++;return s.replace(/-$/,"")},sre.Numbers.fr.SMALL_ORDINAL={1:"unième",2:"demi",3:"tiers",4:"quart"},sre.Numbers.fr.numberToOrdinal=function(e,t){var n=sre.Numbers.fr.SMALL_ORDINAL[e]||sre.Numbers.fr.wordOrdinal(e);return 3===e?n:t?n+"s":n},sre.Numbers.fr.wordOrdinal=function(e){return 1===e?"première":(e=sre.Numbers.fr.numberToWords(e),e.match(/^neuf$/)?e=e.slice(0,-1)+"v":e.match(/cinq$/)?e+="u":e.match(/trois$/)||!e.match(/e$/)&&!e.match(/s$/)||(e=e.slice(0,-1)),e+"ième")},sre.Numbers.fr.simpleOrdinal=function(e){var t=sre.Grammar.getInstance().getParameter("gender");return 1===e?e.toString()+("male"===t?"er":"re"):e.toString()+"e"},sre.Numbers.fr.NUMBERS={wordOrdinal:sre.Numbers.fr.wordOrdinal,simpleOrdinal:sre.Numbers.fr.simpleOrdinal,numberToWords:sre.Numbers.fr.numberToWords,numberToOrdinal:sre.Numbers.fr.numberToOrdinal,vulgarSep:"-"},sre.Locale.fr={MS:{START:"début",FRAC_V:"fraction",FRAC_B:"frac",FRAC_S:"frac",END:"fin",FRAC_OVER:"sur",ONCE:"1",TWICE:"2",NEST_FRAC:"imbriquée",ENDFRAC:"fin frac",SUPER:"sup",SUB:"sub",SUP:"sup",SUPERSCRIPT:"exposant",SUBSCRIPT:"indice",BASELINE:"position de base",BASE:"position de base",NESTED:"imbriquée",NEST_ROOT:"imbriquée",STARTROOT:"début racine",ENDROOT:"fin racine",ROOTINDEX:"indice du radical",ROOT:"racine",INDEX:"indice",UNDER:"sous",UNDERSCRIPT:"souscript",OVER:"sus",OVERSCRIPT:"suscript"},MS_FUNC:{FRAC_NEST_DEPTH:function(){return!1},RADICAL_NEST_DEPTH:sre.Locale.nestingToString,COMBINE_ROOT_INDEX:sre.Locale.combinePostfixIndex,COMBINE_NESTED_FRACTION:function(e,t,n){return n.replace(/ $/g,"")+t+e},COMBINE_NESTED_RADICAL:function(e,t,n){return n+" "+e},FONT_REGEXP:function(e){return RegExp(" (en |)"+e+"$")}},MS_ROOT_INDEX:{2:"carrée",3:"cubique"},FONT:{bold:"en gras","bold-fraktur":"en gothique gras","bold-italic":"en italique gras","bold-script":"de ronde en gras",caligraphic:"en calligraphique","caligraphic-bold":"en calligraphique gras","double-struck":"ajouré","double-struck-italic":"ajouré en italique",fraktur:"en gothique",fullwidth:"en pleine largeur",italic:"en italique",monospace:"en chasse fixe",normal:"en normal",oldstyle:"en ancien","oldstyle-bold":"en ancien gras",script:"de ronde","sans-serif":"sans empattement","sans-serif-italic":"en italique sans empattement","sans-serif-bold":"en gras sans empattement","sans-serif-bold-italic":"en italique gras sans empattement",unknown:"inconnu"},EMBELLISH:{super:["exposant",sre.Locale.prefixCombiner],sub:["indice",sre.Locale.prefixCombiner],circled:"encerclé",parenthesized:"entre parenthèses",period:"un point","negative-circled":"encerclé noir","double-circled":"encerclé double","circled-sans-serif":"sans empattement encerclé","negative-circled-sans-serif":"sans empattement encerclé noir",comma:"virgule",squared:"encadré","negative-squared":"encadré inverse"},ROLE:{addition:"addition",multiplication:"multiplication",subtraction:"soustraction",division:"division",equality:"égalité",inequality:"inégalité",element:"élément",arrow:"flèche",determinant:"déterminant",rowvector:"vecteur-rangée",binomial:"binomial",squarematrix:"matrice carrée","set empty":"ensemble vide","set extended":"extension","set singleton":"singleton","set collection":"collection",label:"étiquette",multiline:"multi-ligne",matrix:"matrice",vector:"vecteur",cases:"déclaration de cas",table:"tableau",unknown:"inconnu"},ENCLOSE:{longdiv:"longue division",actuarial:"notation actuarielle",radical:"radical",box:"boîte",roundedbox:"boîte arrondie",circle:"cercle",left:"barre verticale gauche",right:"barre verticale droite",top:"trait suscrit",bottom:"trait souscrit",updiagonalstrike:"texte biffé diagonal montant",downdiagonalstrike:"texte biffé diagonal descendant",verticalstrike:"texte biffé vertical",horizontalstrike:"texte biffé horizontal",madruwb:"symbole factorielle arabe",updiagonalarrow:"flèche diagonale montante",phasorangle:"angle de phase",unknown:"division longue"},NAVIGATE:{COLLAPSIBLE:"compressible",EXPANDABLE:"décompressible",LEVEL:"niveau"},REGEXP:{TEXT:"a-zA-ZàâæçéèêëîïôœùûüÿÀÂÆÇÉÈÊËÎÏÔŒÙÛÜŸ",NUMBER:"((\\d{1,3})(?=( ))(( )\\d{3})*(,\\d+)?)|^\\d*,\\d+|^\\d+",DECIMAL_MARK:",",DIGIT_GROUP:"",JOINER_SUBSUPER:"-",JOINER_FRAC:" "},PLURAL_UNIT:{foot:"feet",inch:"inches"},NUMBERS:sre.Numbers.fr.NUMBERS,ALPHABETS:{latinSmall:"abcdefghijklmnopqrstuvwxyz".split(""),latinCap:"ABCDEFGHIJKLMNOPQRSTUVWXYZ".split(""),greekSmall:"nabla;alpha;bêta;gamma;delta;epsilon;zêta;êta;thêta;iota;kappa;lambda;mû;nû;xi;omicron;pi;rhô;sigma final;sigma;tau;upsilon;phi;chi;psi;oméga;dérivée partielle;epsilon;thêta;kappa;phi;rhô;pi".split(";"),greekCap:"Alpha Bêta Gamma Delta Epsilon Zêta Êta Thêta Iota Kappa Lambda Mû Nû Xi Omicron Pi Rhô Thêta Sigma Tau Upsilon Phi Chi Psi Oméga".split(" ")},ALPHABET_TRANSFORMERS:{digit:{default:function(e){return 0===e?"zero":sre.Numbers.fr.numberToWords(e)},mathspeak:function(e){return e.toString()},clearspeak:function(e){return e.toString()}},letter:{default:function(e){return e}}},ALPHABET_PREFIXES:{capPrefix:{default:"majuscule"},smallPrefix:{default:""},digitPrefix:{default:""}},ALPHABET_COMBINER:function(e,t,n){return e=n?e+" "+n:e,t?e+" "+t:e}},sre.Numbers.nemeth={},sre.Numbers.nemeth.oneNumbers_="⠴⠂⠆⠒⠲⠢⠖⠶⠦⠔".split(""),sre.Numbers.nemeth.numberToWords=function(e){return e.toString().split("").map(function(e){return sre.Numbers.nemeth.oneNumbers_[parseInt(e,10)]}).join("")},sre.Numbers.nemeth.NUMBERS={numberToWords:sre.Numbers.nemeth.numberToWords,simpleOrdinal:sre.Numbers.nemeth.numberToWords};var $jscomp,$jscomp$lookupPolyfilledValue,COMPILED,goog,sre,germanPrefixCombiner,germanPostfixCombiner,sansserifCombiner,postfixCombiner=function(e,t){return t?e+t:e},embellishCombiner=function(e,t,n){return t+(n||"⠰")+e+"⠻"},doubleEmbellishCombiner=function(e,t,n){return t+(n||"⠰")+e+"⠻⠻"},parensCombiner=function(e,t,n){return t+(n||"⠰")+e+"⠾"},SRE;sre.Locale.nemeth={MS:{FRACTION_REPEAT:"⠠",FRACTION_START:"⠹",FRAC_V:"⠹",FRAC_B:"Frac",FRAC_S:"Frac",END:"⠠",FRACTION_OVER:"⠌",TWICE:"Twice",NEST_FRAC:"Nest",ENDFRAC:"⠼",FRACTION_END:"⠼",SUPER:"⠘",SUB:"⠰",SUP:"⠘",SUPERSCRIPT:"⠘",SUBSCRIPT:"⠰",BASELINE:"⠐",BASE:"⠐",NESTED:"⠨",NEST_ROOT:"Nest",STARTROOT:"⠜",ENDROOT:"⠻",ROOTINDEX:"⠣",ROOT:"⠨",INDEX:"⠣",UNDER:"⠩",UNDERSCRIPT:"⠩",OVER:"⠣",OVERSCRIPT:"⠣"},MS_FUNC:{FRAC_NEST_DEPTH:function(){return!1},RADICAL_NEST_DEPTH:function(){return""},COMBINE_ROOT_INDEX:function(e){return e},FONT_REGEXP:function(e){return RegExp("^"+e)}},MS_ROOT_INDEX:{},FONT:{bold:"⠸","bold-fraktur":"⠸⠀⠸","bold-italic":"⠸⠨","bold-script":"⠸⠈",caligraphic:"⠈","caligraphic-bold":"⠈⠸","double-struck":"⠸","double-struck-italic":"⠸⠨",fraktur:"⠸",italic:"⠨",monospace:"",normal:"",oldstyle:"","oldstyle-bold":"⠸",script:"⠈","sans-serif":"⠠⠨","sans-serif-italic":"⠠⠨⠨","sans-serif-bold":"⠠⠨⠸","sans-serif-bold-italic":"⠠⠨⠸⠨",unknown:""},EMBELLISH:{super:"⠘",sub:"⠰",circled:["⠫⠉⠸⠫",embellishCombiner],parenthesized:["⠷",parensCombiner],period:["⠸⠲",postfixCombiner],"negative-circled":["⠫⠸⠉⠸⠫",embellishCombiner],"double-circled":["⠫⠉⠸⠫⠫⠉⠸⠫",doubleEmbellishCombiner],"circled-sans-serif":["⠫⠉⠸⠫⠠⠨",embellishCombiner],"negative-circled-sans-serif":["⠫⠸⠉⠸⠫⠠⠨",embellishCombiner],comma:["⠠",postfixCombiner],squared:["⠫⠲⠸⠫",embellishCombiner],"negative-squared":["⠫⠸⠲⠸⠫",embellishCombiner]},ROLE:{addition:"addition",multiplication:"multiplication",subtraction:"subtraction",division:"division",equality:"equality",inequality:"inequality",element:"element",arrow:"arrow",determinant:"determinant",rowvector:"row vector",binomial:"binomial",squarematrix:"square matrix",multiline:"multiple lines",matrix:"matrix",vector:"vector",cases:"case statement",table:"table",unknown:"unknown"},ENCLOSE:{longdiv:"long division",actuarial:"actuarial symbol",radical:"square root",box:"box",roundedbox:"rounded box",circle:"circle",left:"left vertical-line",right:"right vertical-line",top:"overbar",bottom:"underbar",updiagonalstrike:"crossout",downdiagonalstrike:"crossout",verticalstrike:"vertical strikeout",horizontalstrike:"crossout",madruwb:"Arabic factorial symbol",updiagonalarrow:"diagonal arrow",phasorangle:"phasor angle",unknown:"long division"},REGEXP:{TEXT:"a-zA-Z",NUMBER:"((\\d{1,3})(?=(,| ))((,| )\\d{3})*(\\.\\d+)?)|^\\d*\\.\\d+|^\\d+",DECIMAL_MARK:".",DIGIT_GROUP:",",JOINER_SUBSUPER:"",JOINER_FRAC:""},NAVIGATE:{COLLAPSIBLE:"collapsible",EXPANDABLE:"expandable",LEVEL:"Level"},NUMBERS:sre.Numbers.nemeth.NUMBERS,ALPHABETS:{latinSmall:"⠁⠃⠉⠙⠑⠋⠛⠓⠊⠚⠅⠇⠍⠝⠕⠏⠟⠗⠎⠞⠥⠧⠺⠭⠽⠵".split(""),latinCap:"⠠⠁ ⠠⠃ ⠠⠉ ⠠⠙ ⠠⠑ ⠠⠋ ⠠⠛ ⠠⠓ ⠠⠊ ⠠⠚ ⠠⠅ ⠠⠇ ⠠⠍ ⠠⠝ ⠠⠕ ⠠⠏ ⠠⠟ ⠠⠗ ⠠⠎ ⠠⠞ ⠠⠥ ⠠⠧ ⠠⠺ ⠠⠭ ⠠⠽ ⠠⠵".split(" "),greekSmall:"⠨⠫ ⠨⠁ ⠨⠃ ⠨⠛ ⠨⠙ ⠨⠑ ⠨⠱ ⠨⠦ ⠨⠹ ⠨⠊ ⠨⠅ ⠨⠇ ⠨⠍ ⠨⠝ ⠨⠭ ⠨⠕ ⠨⠏ ⠨⠗ ⠨⠒ ⠨⠎ ⠨⠞ ⠨⠥ ⠨⠋ ⠨⠯ ⠨⠓ ⠨⠕ ⠈⠙ ⠨⠑ ⠨⠹ ⠨⠅ ⠨⠋ ⠨⠗ ⠨⠏".split(" "),greekCap:"⠨⠠⠁ ⠨⠠⠃ ⠨⠠⠛ ⠨⠠⠙ ⠨⠠⠑ ⠨⠠⠱ ⠨⠠⠣ ⠨⠠⠹ ⠨⠠⠊ ⠨⠠⠅ ⠨⠠⠇ ⠨⠠⠍ ⠨⠠⠝ ⠨⠠⠭ ⠨⠠⠕ ⠨⠠⠏ ⠨⠠⠗ ⠨⠠⠹ ⠨⠠⠎ ⠨⠠⠥ ⠨⠠⠥ ⠨⠠⠋ ⠨⠠⠯ ⠨⠠⠫ ⠨⠠⠺".split(" ")},ALPHABET_TRANSFORMERS:{digit:{default:sre.Numbers.nemeth.numberToWords},letter:{default:function(e){return e}}},ALPHABET_PREFIXES:{capPrefix:{default:""},smallPrefix:{default:""},digitPrefix:{default:"⠼"}},ALPHABET_COMBINER:function(e,t){return t?t+e:e}},sre.L10n={},sre.L10n.setLocale=function(){var e,t=sre.L10n.getLocale();if(t)for(e in t)sre.Messages[e]=t[e]},sre.L10n.getLocale=function(){var e=sre.Engine.getInstance().locale;return-1===sre.Variables.LOCALES.indexOf(e)&&(console.error("Locale "+e+" does not exist! Using en instead."),sre.Engine.getInstance().locale="en"),sre.Locale[sre.Engine.getInstance().locale]||sre.Locale.en},sre.EnrichCase=function(){},sre.EnrichCase.prototype.getMathml=function(){},sre.AbstractEnrichCase=function(e){this.semantic=e},sre.AbstractEnrichCase.prototype.getMathml=goog.abstractMethod,sre.EnrichCaseFactory=function(){},sre.EnrichCaseFactory.cases=[],sre.EnrichCaseFactory.getCase=function(e){for(var t,n=0;t=sre.EnrichCaseFactory.cases[n];n++)if(t.test(e))return new t.constr(e);return null},sre.SemanticSkeleton=function(e){this.array=e=0===e?e:e||[],this.levelsMap=this.parents=null},sre.SemanticSkeleton.prototype.populate=function(){this.parents&&this.levelsMap||(this.parents={},this.levelsMap={},this.populate_(this.array,this.array,[]))},sre.SemanticSkeleton.prototype.populate_=function(e,t,n){if(sre.SemanticSkeleton.simpleCollapseStructure(e))this.levelsMap[e]=t,this.parents[e]=e===n[0]?n.slice(1):n;else{t=sre.SemanticSkeleton.contentCollapseStructure(e)?e.slice(1):e,n=[t[0]].concat(n);for(var s=0,o=t.length;s<o;s++)this.populate_(t[s],e,n)}},sre.SemanticSkeleton.prototype.toString=function(){return sre.SemanticSkeleton.makeSexp_(this.array)},sre.SemanticSkeleton.makeSexp_=function(e){return sre.SemanticSkeleton.simpleCollapseStructure(e)?e.toString():sre.SemanticSkeleton.contentCollapseStructure(e)?"(c "+e.slice(1).map(sre.SemanticSkeleton.makeSexp_).join(" ")+")":"("+e.map(sre.SemanticSkeleton.makeSexp_).join(" ")+")"},sre.SemanticSkeleton.fromTree=function(e){return sre.SemanticSkeleton.fromNode(e.root)},sre.SemanticSkeleton.fromNode=function(e){return new sre.SemanticSkeleton(sre.SemanticSkeleton.fromNode_(e))},sre.SemanticSkeleton.fromString=function(e){return new sre.SemanticSkeleton(sre.SemanticSkeleton.fromString_(e))},sre.SemanticSkeleton.fromString_=function(e){return e=e.replace(/\(/g,"["),e=e.replace(/\)/g,"]"),e=e.replace(/ /g,","),e=e.replace(/c/g,'"c"'),JSON.parse(e)},sre.SemanticSkeleton.fromNode_=function(e){if(!e)return[];var t,n,s=e.contentNodes;return s.length&&(n=s.map(sre.SemanticSkeleton.fromNode_),n.unshift("c")),t=e.childNodes,t.length?(t=t.map(sre.SemanticSkeleton.fromNode_),s.length&&t.unshift(n),t.unshift(e.id),t):s.length?[e.id,n]:e.id},sre.SemanticSkeleton.simpleCollapseStructure=function(e){return"number"==typeof e},sre.SemanticSkeleton.contentCollapseStructure=function(e){return!!e&&!sre.SemanticSkeleton.simpleCollapseStructure(e)&&"c"===e[0]},sre.SemanticSkeleton.interleaveIds=function(e,t){return sre.BaseUtil.interleaveLists(sre.SemanticSkeleton.collapsedLeafs(e),sre.SemanticSkeleton.collapsedLeafs(t))},sre.SemanticSkeleton.collapsedLeafs=function(){var e=function(e){return sre.SemanticSkeleton.simpleCollapseStructure(e)?[e]:sre.SemanticSkeleton.contentCollapseStructure(e[1])?e.slice(2):e.slice(1)};return Array.prototype.slice.call(arguments,0).reduce(function(t,n){return t.concat(e(n))},[])},sre.SemanticSkeleton.fromStructure=function(e,t){return new sre.SemanticSkeleton(sre.SemanticSkeleton.tree_(e,t.root))},sre.SemanticSkeleton.tree_=function(e,t){if(!t)return[];if(!t.childNodes.length)return t.id;var s,n=t.id,o=[n],n=sre.XpathUtil.evalXPath(".//self::*[@"+sre.EnrichMathml.Attribute.ID+"="+n+"]",e)[0];for(t=sre.SemanticSkeleton.combineContentChildren(t,t.contentNodes.map(function(e){return e}),t.childNodes.map(function(e){return e})),n&&n.setAttribute(sre.EnrichMathml.Attribute.OWNS,t.map(function(e){return e.id}).join(" ")),n=0;s=t[n];n++)o.push(sre.SemanticSkeleton.tree_(e,s));return o},sre.SemanticSkeleton.combineContentChildren=function(e,t,n){switch(e.type){case sre.Semantic.Type.RELSEQ:case sre.Semantic.Type.INFIXOP:case sre.Semantic.Type.MULTIREL:return sre.BaseUtil.interleaveLists(n,t);case sre.Semantic.Type.PREFIXOP:return t.concat(n);case sre.Semantic.Type.POSTFIXOP:return n.concat(t);case sre.Semantic.Type.FENCED:return n.unshift(t[0]),n.push(t[1]),n;case sre.Semantic.Type.APPL:return[n[0],t[0],n[1]];case sre.Semantic.Type.ROOT:return[n[1],n[0]];case sre.Semantic.Type.ROW:case sre.Semantic.Type.LINE:return t.length&&n.unshift(t[0]),n;default:return n}},sre.EnrichMathml={},sre.EnrichMathml.Error=function(e){Error.call(this),this.message=e||"",this.name="MathML Enrichment Error"},goog.inherits(sre.EnrichMathml.Error,Error),sre.EnrichMathml.SETTINGS={collapsed:!0,implicit:!0},sre.EnrichMathml.ATTRIBUTE_PREFIX_="data-semantic-",sre.EnrichMathml.Attribute={ADDED:sre.EnrichMathml.ATTRIBUTE_PREFIX_+"added",ALTERNATIVE:sre.EnrichMathml.ATTRIBUTE_PREFIX_+"alternative",CHILDREN:sre.EnrichMathml.ATTRIBUTE_PREFIX_+"children",COLLAPSED:sre.EnrichMathml.ATTRIBUTE_PREFIX_+"collapsed",CONTENT:sre.EnrichMathml.ATTRIBUTE_PREFIX_+"content",EMBELLISHED:sre.EnrichMathml.ATTRIBUTE_PREFIX_+"embellished",FENCEPOINTER:sre.EnrichMathml.ATTRIBUTE_PREFIX_+"fencepointer",FONT:sre.EnrichMathml.ATTRIBUTE_PREFIX_+"font",ID:sre.EnrichMathml.ATTRIBUTE_PREFIX_+"id",ANNOTATION:sre.EnrichMathml.ATTRIBUTE_PREFIX_+"annotation",OPERATOR:sre.EnrichMathml.ATTRIBUTE_PREFIX_+"operator",OWNS:sre.EnrichMathml.ATTRIBUTE_PREFIX_+"owns",PARENT:sre.EnrichMathml.ATTRIBUTE_PREFIX_+"parent",PREFIX:sre.EnrichMathml.ATTRIBUTE_PREFIX_+"prefix",ROLE:sre.EnrichMathml.ATTRIBUTE_PREFIX_+"role",SPEECH:sre.EnrichMathml.ATTRIBUTE_PREFIX_+"speech",STRUCTURE:sre.EnrichMathml.ATTRIBUTE_PREFIX_+"structure",TYPE:sre.EnrichMathml.ATTRIBUTE_PREFIX_+"type"},sre.EnrichMathml.enrich=function(e,t){var n=e.cloneNode(!0);return sre.EnrichMathml.walkTree(t.root),sre.Engine.getInstance().structure&&e.setAttribute(sre.EnrichMathml.Attribute.STRUCTURE,sre.SemanticSkeleton.fromStructure(e,t).toString()),sre.Debugger.getInstance().generateOutput(function(){return sre.EnrichMathml.formattedOutput(n,e,t,!0),[]}),e},sre.EnrichMathml.walkTree=function(e){var n,s,t=sre.EnrichCaseFactory.getCase(e);return t?(t=t.getMathml(),sre.EnrichMathml.ascendNewNode(t)):1===e.mathml.length?(sre.Debugger.getInstance().output("Walktree Case 0"),t=e.mathml[0],sre.EnrichMathml.setAttributes(t,e),sre.EnrichMathml.ascendNewNode(t)):(t=e.contentNodes.map(sre.EnrichMathml.cloneContentNode),sre.EnrichMathml.setOperatorAttribute_(e,t),n=e.childNodes.map(sre.EnrichMathml.walkTree),n=sre.SemanticSkeleton.combineContentChildren(e,t,n),t=e.mathmlTree,null===t?(sre.Debugger.getInstance().output("Walktree Case 1"),t=sre.EnrichMathml.introduceNewLayer(n)):(s=sre.EnrichMathml.attachedElement_(n),sre.Debugger.getInstance().output("Walktree Case 2"),s?(sre.Debugger.getInstance().output("Walktree Case 2.1"),t=s.parentNode):(sre.Debugger.getInstance().output("Walktree Case 2.2"),t=sre.EnrichMathml.getInnerNode(t))),t=sre.EnrichMathml.rewriteMfenced(t),sre.EnrichMathml.mergeChildren_(t,n),sre.EnrichMathml.setAttributes(t,e),sre.EnrichMathml.ascendNewNode(t))},sre.EnrichMathml.introduceNewLayer=function(e){var n=sre.EnrichMathml.mathmlLca_(e),t=n.node,s=n.type;return s===sre.EnrichMathml.lcaType.VALID&&sre.SemanticUtil.hasEmptyTag(t)||(sre.Debugger.getInstance().output("Walktree Case 1.1"),t=sre.DomUtil.createElement("mrow"),s===sre.EnrichMathml.lcaType.PRUNED?(sre.Debugger.getInstance().output("Walktree Case 1.1.0"),t=sre.EnrichMathml.introduceLayerAboveLca(t,n.node,e)):e[0]&&(sre.Debugger.getInstance().output("Walktree Case 1.1.1"),n=sre.EnrichMathml.attachedElement_(e),e=sre.EnrichMathml.childrenSubset_(n.parentNode,e),sre.DomUtil.replaceNode(n,t),e.forEach(function(e){t.appendChild(e)}))),t},sre.EnrichMathml.introduceLayerAboveLca=function(e,t,n){var o,s=sre.EnrichMathml.descendNode_(t);return sre.SemanticUtil.hasMathTag(s)&&(sre.Debugger.getInstance().output("Walktree Case 1.1.0.0"),sre.EnrichMathml.moveSemanticAttributes_(s,e),sre.DomUtil.toArray(s.childNodes).forEach(function(t){e.appendChild(t)}),o=e,e=s,s=o),t=n.indexOf(t),n[t]=s,sre.DomUtil.replaceNode(s,e),e.appendChild(s),n.forEach(function(t){e.appendChild(t)}),e},sre.EnrichMathml.moveSemanticAttributes_=function(e,t){for(s in sre.EnrichMathml.Attribute){var s,n=sre.EnrichMathml.Attribute[s];e.hasAttribute(n)&&(t.setAttribute(n,e.getAttribute(n)),e.removeAttribute(n))}},sre.EnrichMathml.childrenSubset_=function(e,t){var o=sre.DomUtil.toArray(e.childNodes),n=1/0,s=-(1/0);return t.forEach(function(e){e=o.indexOf(e),-1!==e&&(n=Math.min(n,e),s=Math.max(s,e))}),o.slice(n,s+1)},sre.EnrichMathml.mergeChildren_=function(e,t){var n,s=e.childNodes;if(s.length)for(n=0;t.length;)s[n]===t[0]||sre.EnrichMathml.functionApplication_(s[n],t[0])?(t.shift(),n++):s[n]&&-1===t.indexOf(s[n])?n++:(sre.EnrichMathml.isDescendant_(t[0],e)||e.insertBefore(t[0],s[n]||null),t.shift());else t.forEach(function(t){e.appendChild(t)})},sre.EnrichMathml.isDescendant_=function(e,t){if(!e)return!1;do if(e=e.parentNode,e===t)return!0;while(e)return!1},sre.EnrichMathml.functionApplication_=function(e,t){var s,n=sre.SemanticAttr.functionApplication();if(e&&t&&e.textContent&&t.textContent&&e.textContent===n&&t.textContent===n&&"true"===t.getAttribute(sre.EnrichMathml.Attribute.ADDED)){for(n=0;s=e.attributes[n];n++)t.hasAttribute(s.nodeName)||t.setAttribute(s.nodeName,s.nodeValue);return sre.DomUtil.replaceNode(e,t),!0}return!1},sre.EnrichMathml.lcaType={VALID:"valid",INVALID:"invalid",PRUNED:"pruned"},sre.EnrichMathml.mathmlLca_=function(e){var n,s,o,t=sre.EnrichMathml.attachedElement_(e);return t?(n=sre.EnrichMathml.attachedElement_(e.slice().reverse()),t===n?{type:sre.EnrichMathml.lcaType.VALID,node:t}:(t=sre.EnrichMathml.pathToRoot_(t),s=sre.EnrichMathml.prunePath_(t,e),e=sre.EnrichMathml.pathToRoot_(n,function(e){return-1!==s.indexOf(e)}),n=e[0],o=s.indexOf(n),-1===o?{type:sre.EnrichMathml.lcaType.INVALID,node:null}:{type:s.length!==t.length?sre.EnrichMathml.lcaType.PRUNED:sre.EnrichMathml.validLca_(s[o+1],e[1])?sre.EnrichMathml.lcaType.VALID:sre.EnrichMathml.lcaType.INVALID,node:n})):{type:sre.EnrichMathml.lcaType.INVALID,node:null}},sre.EnrichMathml.prunePath_=function(e,t){for(var n=0;e[n]&&-1===t.indexOf(e[n]);)n++;return e.slice(0,n+1)},sre.EnrichMathml.attachedElement_=function(e){for(var t=0,n=null;!n&&t<e.length;)e[t].parentNode&&(n=e[t]),t++;return n},sre.EnrichMathml.pathToRoot_=function(e,t){t=t||function(){return!1};for(var n=[e];!t(e)&&!sre.SemanticUtil.hasMathTag(e)&&e.parentNode;)e=sre.EnrichMathml.parentNode_(e),n.unshift(e);return n},sre.EnrichMathml.validLca_=function(e,t){return!(!e||!t||e.previousSibling||t.nextSibling)},sre.EnrichMathml.ascendNewNode=function(e){for(;!sre.SemanticUtil.hasMathTag(e)&&sre.EnrichMathml.unitChild_(e);)e=sre.EnrichMathml.parentNode_(e);return e},sre.EnrichMathml.descendNode_=function(e){var t=sre.DomUtil.toArray(e.childNodes);return t?(t=t.filter(function(e){return e.nodeType===sre.DomUtil.NodeType.ELEMENT_NODE&&!sre.SemanticUtil.hasIgnoreTag(e)}),1===t.length&&sre.SemanticUtil.hasEmptyTag(t[0])&&!t[0].hasAttribute(sre.EnrichMathml.Attribute.TYPE)?sre.EnrichMathml.descendNode_(t[0]):e):e},sre.EnrichMathml.unitChild_=function(e){var t=sre.EnrichMathml.parentNode_(e);return!!(t&&sre.SemanticUtil.hasEmptyTag(t))&&sre.DomUtil.toArray(t.childNodes).every(function(t){return t===e||sre.EnrichMathml.isIgnorable_(t)})},sre.EnrichMathml.isIgnorable_=function(e){if(!e||sre.SemanticUtil.hasIgnoreTag(e))return!0;var t=sre.DomUtil.toArray(e.childNodes);return!(!sre.SemanticUtil.hasEmptyTag(e)&&t.length)&&sre.DomUtil.toArray(e.childNodes).every(sre.EnrichMathml.isIgnorable_)},sre.EnrichMathml.parentNode_=function(e){return e.parentNode},sre.EnrichMathml.addCollapsedAttribute=function(e,t){t=new sre.SemanticSkeleton(t),e.setAttribute(sre.EnrichMathml.Attribute.COLLAPSED,t.toString())},sre.EnrichMathml.cloneContentNode=function(e){if(e.mathml.length)return sre.EnrichMathml.walkTree(e);var t=sre.EnrichMathml.SETTINGS.implicit?sre.EnrichMathml.createInvisibleOperator_(e):sre.DomUtil.createElement("mrow");return e.mathml=[t],t},sre.EnrichMathml.makeIdList=function(e){return e.map(function(e){return e.id}).join(",")},sre.EnrichMathml.setAttributes=function(e,t){e.setAttribute(sre.EnrichMathml.Attribute.TYPE,t.type);for(var n,o=t.allAttributes(),s=0;n=o[s];s++)e.setAttribute(sre.EnrichMathml.Attribute[n[0].toUpperCase()],n[1]);t.childNodes.length&&e.setAttribute(sre.EnrichMathml.Attribute.CHILDREN,sre.EnrichMathml.makeIdList(t.childNodes)),t.contentNodes.length&&e.setAttribute(sre.EnrichMathml.Attribute.CONTENT,sre.EnrichMathml.makeIdList(t.contentNodes)),t.parent&&e.setAttribute(sre.EnrichMathml.Attribute.PARENT,t.parent.id)},sre.EnrichMathml.rewriteMfenced=function(e){if("MFENCED"!==sre.DomUtil.tagName(e))return e;for(var t,n=sre.DomUtil.createElement("mrow"),s=0;t=e.attributes[s];s++)-1===["open","close","separators"].indexOf(t.name)&&n.setAttribute(t.name,t.value);return sre.DomUtil.toArray(e.childNodes).forEach(function(e){n.appendChild(e)}),sre.DomUtil.replaceNode(e,n),n},sre.EnrichMathml.createInvisibleOperator_=function(e){var t=sre.DomUtil.createElement("mo"),n=sre.DomUtil.createTextNode(e.textContent);return t.appendChild(n),sre.EnrichMathml.setAttributes(t,e),t.setAttribute(sre.EnrichMathml.Attribute.ADDED,"true"),t},sre.EnrichMathml.setOperatorAttribute_=function(e,t){var n=e.type+(e.textContent?","+e.textContent:"");t.forEach(function(e){sre.EnrichMathml.getInnerNode(e).setAttribute(sre.EnrichMathml.Attribute.OPERATOR,n)})},sre.EnrichMathml.getInnerNode=function(e){if(t=sre.DomUtil.toArray(e.childNodes),!t)return e;t=t.filter(function(e){return e.nodeType===sre.DomUtil.NodeType.ELEMENT_NODE&&!sre.EnrichMathml.isIgnorable_(e)});for(var t,n,s,o=[],i=0;n=t[i];i++)sre.SemanticUtil.hasEmptyTag(n)?(s=sre.EnrichMathml.getInnerNode(n),s&&s!==n&&o.push(s)):o.push(n);return 1===o.length?o[0]:e},sre.EnrichMathml.formattedOutput=function(e,t,n,s){s=s||!1,sre.EnrichMathml.formattedOutput_(e,"Original MathML",s),sre.EnrichMathml.formattedOutput_(n,"Semantic Tree",s),sre.EnrichMathml.formattedOutput_(t,"Semantically enriched MathML",s)},sre.EnrichMathml.formattedOutput_=function(e,t,n){e=sre.DomUtil.formatXml(e.toString()),n?console.info(t+":\n```html\n"+sre.EnrichMathml.removeAttributePrefix(e)+"\n```\n"):console.info(e)},sre.EnrichMathml.removeAttributePrefix=function(e){return e.toString().replace(new RegExp(sre.EnrichMathml.ATTRIBUTE_PREFIX_,"g"),"")},sre.EnrichMathml.addPrefix=function(e){var t=e.toUpperCase();return sre.EnrichMathml.Attribute[t]||sre.EnrichMathml.ATTRIBUTE_PREFIX_+e},sre.EnrichMathml.collapsePunctuated=function(e,t){a=!!t,t=t||[];var n,o,i,a,r=e.parent,s=e.contentNodes.map(function(e){return e.id});s.unshift("c"),s=[e.id,s];for(o=0;i=e.childNodes[o];o++)n=sre.EnrichMathml.walkTree(i),t.push(n),n=sre.EnrichMathml.getInnerNode(n),r&&!a&&n.setAttribute(sre.EnrichMathml.Attribute.PARENT,r.id),s.push(i.id);return s},sre.EnrichMathml.printNodeList__=function(e,t){console.info(e),sre.DomUtil.toArray(t).forEach(function(e){console.info(e.toString())}),console.info("<<<<<<<<<<<<<<<<<")},sre.CaseBinomial=function(e){sre.AbstractEnrichCase.call(this,e),this.mml=e.mathmlTree},goog.inherits(sre.CaseBinomial,sre.AbstractEnrichCase),sre.CaseBinomial.test=function(e){return!e.mathmlTree&&e.type===sre.SemanticAttr.Type.LINE&&e.role===sre.SemanticAttr.Role.BINOMIAL},sre.CaseBinomial.prototype.getMathml=function(){if(!this.semantic.childNodes.length)return this.mml;if(this.mml=sre.EnrichMathml.walkTree(this.semantic.childNodes[0]),this.mml.hasAttribute(sre.EnrichMathml.Attribute.TYPE)){var e=sre.DomUtil.createElement("mrow");e.setAttribute(sre.EnrichMathml.Attribute.ADDED,"true"),sre.DomUtil.replaceNode(this.mml,e),e.appendChild(this.mml),this.mml=e}return sre.EnrichMathml.setAttributes(this.mml,this.semantic),this.mml},sre.CaseDoubleScript=function(e){sre.AbstractEnrichCase.call(this,e),this.mml=e.mathmlTree},goog.inherits(sre.CaseDoubleScript,sre.AbstractEnrichCase),sre.CaseDoubleScript.test=function(e){if(!e.mathmlTree||!e.childNodes.length)return!1;var t=sre.DomUtil.tagName(e.mathmlTree);return e=e.childNodes[0].role,"MSUBSUP"===t&&e===sre.SemanticAttr.Role.SUBSUP||"MUNDEROVER"===t&&e===sre.SemanticAttr.Role.UNDEROVER},sre.CaseDoubleScript.prototype.getMathml=function(){var e=this.semantic.childNodes[0],t=e.childNodes[0],n=this.semantic.childNodes[1],s=e.childNodes[1],o=sre.EnrichMathml.walkTree(n),i=sre.EnrichMathml.walkTree(t),a=sre.EnrichMathml.walkTree(s);return sre.EnrichMathml.setAttributes(this.mml,this.semantic),this.mml.setAttribute(sre.EnrichMathml.Attribute.CHILDREN,sre.EnrichMathml.makeIdList([t,s,n])),[i,a,o].forEach(goog.bind(function(e){sre.EnrichMathml.getInnerNode(e).setAttribute(sre.EnrichMathml.Attribute.PARENT,this.mml.getAttribute(sre.EnrichMathml.Attribute.ID))},this)),this.mml.setAttribute(sre.EnrichMathml.Attribute.TYPE,e.role),sre.EnrichMathml.addCollapsedAttribute(this.mml,[this.semantic.id,[e.id,t.id,s.id],n.id]),this.mml},sre.CaseMultiindex=function(e){sre.AbstractEnrichCase.call(this,e),this.mml=e.mathmlTree},goog.inherits(sre.CaseMultiindex,sre.AbstractEnrichCase),sre.CaseMultiindex.prototype.completeMultiscript=function(e,t){var s=sre.DomUtil.toArray(this.mml.childNodes).slice(1),n=0,o=goog.bind(function(e){for(var t,o,i,a=0;o=e[a];a++)t=s[n],t&&o==sre.EnrichMathml.getInnerNode(t).getAttribute(sre.EnrichMathml.Attribute.ID)?(sre.EnrichMathml.getInnerNode(t).setAttribute(sre.EnrichMathml.Attribute.PARENT,this.semantic.id),n++):(i=this.semantic.querySelectorAll(function(e){return e.id===o}),this.mml.insertBefore(sre.CaseMultiindex.createNone_(i[0]),t||null))},this);o(e),s[n]&&"MPRESCRIPTS"!==sre.DomUtil.tagName(s[n])?this.mml.insertBefore(s[n],sre.DomUtil.createElement("mprescripts")):n++,o(t)},sre.CaseMultiindex.createNone_=function(e){var t=sre.DomUtil.createElement("none");return e&&sre.EnrichMathml.setAttributes(t,e),t.setAttribute(sre.EnrichMathml.Attribute.ADDED,"true"),t},sre.CaseMultiindex.multiscriptIndex=function(e){return e.type===sre.SemanticAttr.Type.PUNCTUATED&&e.contentNodes[0].role===sre.SemanticAttr.Role.DUMMY?sre.EnrichMathml.collapsePunctuated(e):(sre.EnrichMathml.walkTree(e),e.id)},sre.CaseMultiscripts=function(e){sre.CaseMultiindex.call(this,e)},goog.inherits(sre.CaseMultiscripts,sre.CaseMultiindex),sre.CaseMultiscripts.test=function(e){return!!e.mathmlTree&&"MMULTISCRIPTS"===sre.DomUtil.tagName(e.mathmlTree)&&(e.type===sre.SemanticAttr.Type.SUPERSCRIPT||e.type===sre.SemanticAttr.Type.SUBSCRIPT)},sre.CaseMultiscripts.prototype.getMathml=function(){if(sre.EnrichMathml.setAttributes(this.mml,this.semantic),this.semantic.childNodes[0]&&this.semantic.childNodes[0].role===sre.SemanticAttr.Role.SUBSUP){var e=this.semantic.childNodes[0],n=e.childNodes[0],t=sre.CaseMultiindex.multiscriptIndex(this.semantic.childNodes[1]),s=sre.CaseMultiindex.multiscriptIndex(e.childNodes[1]),o=[this.semantic.id,[e.id,n.id,s],t];sre.EnrichMathml.addCollapsedAttribute(this.mml,o),this.mml.setAttribute(sre.EnrichMathml.Attribute.TYPE,e.role),this.completeMultiscript(sre.SemanticSkeleton.interleaveIds(s,t),[])}else n=this.semantic.childNodes[0],t=sre.CaseMultiindex.multiscriptIndex(this.semantic.childNodes[1]),o=[this.semantic.id,n.id,t],sre.EnrichMathml.addCollapsedAttribute(this.mml,o);return e=sre.SemanticSkeleton.collapsedLeafs(s||[],t),t=sre.EnrichMathml.walkTree(n),sre.EnrichMathml.getInnerNode(t).setAttribute(sre.EnrichMathml.Attribute.PARENT,this.semantic.id),e.unshift(n.id),this.mml.setAttribute(sre.EnrichMathml.Attribute.CHILDREN,e.join(",")),this.mml},sre.CaseEmbellished=function(e){sre.AbstractEnrichCase.call(this,e),this.ofenceMml=this.ofence=this.fencedMml=this.fenced=null,this.ofenceMap={},this.cfenceMml=this.cfence=null,this.cfenceMap={},this.parentCleanup=[]},goog.inherits(sre.CaseEmbellished,sre.AbstractEnrichCase),sre.CaseEmbellished.test=function(e){return!!e.mathmlTree&&!!e.fencePointer},sre.CaseEmbellished.prototype.getMathml=function(){return this.getFenced_(),this.fencedMml=sre.EnrichMathml.walkTree(this.fenced),this.getFencesMml_(),this.rewrite_()},sre.CaseEmbellished.prototype.getFenced_=function(){for(var e=this.semantic;e.type!==sre.SemanticAttr.Type.FENCED;)e=e.childNodes[0];this.fenced=e.childNodes[0],this.ofence=e.contentNodes[0],this.cfence=e.contentNodes[1],sre.CaseEmbellished.fencedMap_(this.ofence,this.ofenceMap),sre.CaseEmbellished.fencedMap_(this.cfence,this.cfenceMap)},sre.CaseEmbellished.fencedMap_=function(e,t){t[e.id]=e.mathmlTree,e.embellished&&sre.CaseEmbellished.fencedMap_(e.childNodes[0],t)},sre.CaseEmbellished.prototype.getFencesMml_=function(){for(var e=this.semantic,t=Object.keys(this.ofenceMap),n=Object.keys(this.cfenceMap);!(this.ofenceMml&&this.cfenceMml||e===this.fenced);)-1===t.indexOf(e.fencePointer)||this.ofenceMml||(this.ofenceMml=e.mathmlTree),-1===n.indexOf(e.fencePointer)||this.cfenceMml||(this.cfenceMml=e.mathmlTree),e=e.childNodes[0];this.ofenceMml||(this.ofenceMml=this.ofence.mathmlTree),this.cfenceMml||(this.cfenceMml=this.cfence.mathmlTree),this.ofenceMml&&(this.ofenceMml=sre.EnrichMathml.ascendNewNode(this.ofenceMml)),this.cfenceMml&&(this.cfenceMml=sre.EnrichMathml.ascendNewNode(this.cfenceMml))},sre.CaseEmbellished.prototype.rewrite_=function(){var e,t,o,i,n=this.semantic,a=null,s=this.introduceNewLayer_();for(sre.EnrichMathml.setAttributes(s,this.fenced.parent);n.type!==sre.SemanticAttr.Type.FENCED;){if(e=n.mathmlTree,t=this.specialCase_(n,e),t)n=t;else{sre.EnrichMathml.setAttributes(e,n),t=[];for(o=1;i=n.childNodes[o];o++)t.push(sre.EnrichMathml.walkTree(i));n=n.childNodes[0]}t=sre.DomUtil.createElement("dummy"),o=s.parentNode,i=e.childNodes[0],sre.DomUtil.replaceNode(e,t),sre.DomUtil.replaceNode(s,e),sre.DomUtil.replaceNode(e.childNodes[0],s),sre.DomUtil.replaceNode(t,i),e.parentNode=o,s=e.childNodes[0],a||(a=e)}return sre.EnrichMathml.walkTree(this.ofence),sre.EnrichMathml.walkTree(this.cfence),this.cleanupParents_(),a||s},sre.CaseEmbellished.prototype.specialCase_=function(e,t){var s,o=sre.DomUtil.tagName(t),n=null;return"MSUBSUP"===o?(n=e.childNodes[0],s=sre.CaseDoubleScript):"MMULTISCRIPTS"===o&&(e.type===sre.SemanticAttr.Type.SUPERSCRIPT||e.type===sre.SemanticAttr.Type.SUBSCRIPT?s=sre.CaseMultiscripts:e.type===sre.SemanticAttr.Type.TENSOR&&(s=sre.CaseTensor),n=s&&e.childNodes[0]&&e.childNodes[0].role===sre.SemanticAttr.Role.SUBSUP?e.childNodes[0]:e),n?(o=n.childNodes[0],t=sre.CaseEmbellished.makeEmptyNode_(o.id),n.childNodes[0]=t,t=new s(e).getMathml(),n.childNodes[0]=o,this.parentCleanup.push(t),n.childNodes[0]):null},sre.CaseEmbellished.makeEmptyNode_=function(e){var t=sre.DomUtil.createElement("mrow");return e=new sre.SemanticNode(e),e.type=sre.SemanticAttr.Type.EMPTY,e.mathmlTree=t,e},sre.CaseEmbellished.prototype.introduceNewLayer_=function(){var t=this.fullFence(this.ofenceMml),n=this.fullFence(this.cfenceMml),e=sre.DomUtil.createElement("mrow");if(sre.DomUtil.replaceNode(this.fencedMml,e),e.appendChild(this.fencedMml),e.insertBefore(t,this.fencedMml),e.appendChild(n),!e.parentNode){for(t=sre.DomUtil.createElement("mrow");0<e.childNodes.length;)t.appendChild(e.childNodes[0]);e.appendChild(t),e=t}return e},sre.CaseEmbellished.prototype.fullFence=function(e){for(var t=this.fencedMml.parentNode;e.parentNode&&e.parentNode!==t;)e=e.parentNode;return e},sre.CaseEmbellished.prototype.cleanupParents_=function(){this.parentCleanup.forEach(function(e){var t=e.childNodes[1].getAttribute(sre.EnrichMathml.Attribute.PARENT);e.childNodes[0].setAttribute(sre.EnrichMathml.Attribute.PARENT,t)})},sre.CaseLine=function(e){sre.AbstractEnrichCase.call(this,e),this.mml=e.mathmlTree},goog.inherits(sre.CaseLine,sre.AbstractEnrichCase),sre.CaseLine.test=function(e){return!!e.mathmlTree&&e.type===sre.SemanticAttr.Type.LINE},sre.CaseLine.prototype.getMathml=function(){return this.semantic.contentNodes.length&&sre.EnrichMathml.walkTree(this.semantic.contentNodes[0]),this.semantic.childNodes.length&&sre.EnrichMathml.walkTree(this.semantic.childNodes[0]),sre.EnrichMathml.setAttributes(this.mml,this.semantic),this.mml},sre.CaseProof=function(e){sre.AbstractEnrichCase.call(this,e),this.mml=e.mathmlTree},goog.inherits(sre.CaseProof,sre.AbstractEnrichCase),sre.CaseProof.test=function(e){return!!e.mathmlTree&&(e.type===sre.SemanticAttr.Type.INFERENCE||e.type===sre.SemanticAttr.Type.PREMISES)},sre.CaseProof.prototype.getMathml=function(){return this.semantic.childNodes.length?(this.semantic.contentNodes.forEach(function(e){sre.EnrichMathml.walkTree(e),sre.EnrichMathml.setAttributes(e.mathmlTree,e)}),this.semantic.childNodes.forEach(function(e){sre.EnrichMathml.walkTree(e)}),sre.EnrichMathml.setAttributes(this.mml,this.semantic),this.mml.getAttribute("data-semantic-id")===this.mml.getAttribute("data-semantic-parent")&&this.mml.removeAttribute("data-semantic-parent"),this.mml):this.mml},sre.CaseTable=function(e){sre.AbstractEnrichCase.call(this,e),this.mml=e.mathmlTree,this.inner=[]},goog.inherits(sre.CaseTable,sre.AbstractEnrichCase),sre.CaseTable.test=function(e){return!!e.mathmlTree&&(e.type===sre.SemanticAttr.Type.MATRIX||e.type===sre.SemanticAttr.Type.VECTOR||e.type===sre.SemanticAttr.Type.CASES)},sre.CaseTable.prototype.getMathml=function(){var e=sre.EnrichMathml.cloneContentNode(this.semantic.contentNodes[0]),t=this.semantic.contentNodes[1]?sre.EnrichMathml.cloneContentNode(this.semantic.contentNodes[1]):null;return this.inner=this.semantic.childNodes.map(sre.EnrichMathml.walkTree),"MFENCED"===sre.DomUtil.tagName(this.mml)?(this.mml.insertBefore(e,this.mml.childNodes[0]||null),t&&this.mml.appendChild(t),this.mml=sre.EnrichMathml.rewriteMfenced(this.mml)):(e=[e,this.mml],t&&e.push(t),this.mml=sre.EnrichMathml.introduceNewLayer(e)),sre.EnrichMathml.setAttributes(this.mml,this.semantic),this.mml},sre.CaseTensor=function(e){sre.CaseMultiindex.call(this,e)},goog.inherits(sre.CaseTensor,sre.CaseMultiindex),sre.CaseTensor.test=function(e){return!!e.mathmlTree&&e.type===sre.SemanticAttr.Type.TENSOR},sre.CaseTensor.prototype.getMathml=function(){sre.EnrichMathml.walkTree(this.semantic.childNodes[0]);var e,t=sre.CaseMultiindex.multiscriptIndex(this.semantic.childNodes[1]),n=sre.CaseMultiindex.multiscriptIndex(this.semantic.childNodes[2]),s=sre.CaseMultiindex.multiscriptIndex(this.semantic.childNodes[3]),o=sre.CaseMultiindex.multiscriptIndex(this.semantic.childNodes[4]);return sre.EnrichMathml.setAttributes(this.mml,this.semantic),sre.EnrichMathml.addCollapsedAttribute(this.mml,[this.semantic.id,this.semantic.childNodes[0].id,t,n,s,o]),e=sre.SemanticSkeleton.collapsedLeafs(t,n,s,o),e.unshift(this.semantic.childNodes[0].id),this.mml.setAttribute(sre.EnrichMathml.Attribute.CHILDREN,e.join(",")),this.completeMultiscript(sre.SemanticSkeleton.interleaveIds(s,o),sre.SemanticSkeleton.interleaveIds(t,n)),this.mml},sre.CaseText=function(e){sre.AbstractEnrichCase.call(this,e),this.mml=e.mathmlTree},goog.inherits(sre.CaseText,sre.AbstractEnrichCase),sre.CaseText.test=function(e){return e.type===sre.SemanticAttr.Type.PUNCTUATED&&(e.role===sre.SemanticAttr.Role.TEXT||e.contentNodes.every(function(e){return e.role===sre.SemanticAttr.Role.DUMMY}))},sre.CaseText.prototype.getMathml=function(){var e=[],t=sre.EnrichMathml.collapsePunctuated(this.semantic,e);return this.mml=sre.EnrichMathml.introduceNewLayer(e),sre.EnrichMathml.setAttributes(this.mml,this.semantic),this.mml.removeAttribute(sre.EnrichMathml.Attribute.CONTENT),sre.EnrichMathml.addCollapsedAttribute(this.mml,t),this.mml},sre.EnrichCases=function(){},sre.EnrichCaseFactory.cases.push({test:sre.CaseEmbellished.test,constr:sre.CaseEmbellished},{test:sre.CaseDoubleScript.test,constr:sre.CaseDoubleScript},{test:sre.CaseTensor.test,constr:sre.CaseTensor},{test:sre.CaseMultiscripts.test,constr:sre.CaseMultiscripts},{test:sre.CaseLine.test,constr:sre.CaseLine},{test:sre.CaseBinomial.test,constr:sre.CaseBinomial},{test:sre.CaseProof.test,constr:sre.CaseProof},{test:sre.CaseTable.test,constr:sre.CaseTable},{test:sre.CaseText.test,constr:sre.CaseText}),sre.Enrich={},sre.Enrich.semanticMathmlNode=function(e){e=e.cloneNode(!0);var t=sre.Semantic.getTree(e);return sre.EnrichMathml.enrich(e,t)},sre.Enrich.semanticMathmlSync=function(e){return e=sre.DomUtil.parseInput(e),sre.Enrich.semanticMathmlNode(e)},sre.Enrich.semanticMathml=function(e,t){if(sre.Engine.isReady()){var n=sre.DomUtil.parseInput(e);t(sre.Enrich.semanticMathmlNode(n))}else setTimeout(function(){sre.Enrich.semanticMathml(e,t)},500)},sre.Enrich.testTranslation__=function(e){return new sre.EnrichCases,sre.Debugger.getInstance().init(),e=sre.Enrich.semanticMathmlSync(sre.Enrich.prepareMmlString(e)).toString(),sre.EnrichMathml.removeAttributePrefix(e),sre.Debugger.getInstance().exit(),e},sre.Enrich.prepareMmlString=function(e){return e.match(/^<math/)||(e="<math>"+e),e.match(/\/math>$/)||(e+="</math>"),e},sre.ColorPicker=function(e,t){this.foreground=sre.ColorPicker.getChannelColor_(t,sre.ColorPicker.DEFAULT_FOREGROUND_),this.background=sre.ColorPicker.getChannelColor_(e,sre.ColorPicker.DEFAULT_BACKGROUND_)},sre.ColorPicker.DEFAULT_BACKGROUND_="blue",sre.ColorPicker.DEFAULT_FOREGROUND_="black",sre.ColorPicker.namedColors_={red:{red:255,green:0,blue:0},green:{red:0,green:255,blue:0},blue:{red:0,green:0,blue:255},yellow:{red:255,green:255,blue:0},cyan:{red:0,green:255,blue:255},magenta:{red:255,green:0,blue:255},white:{red:255,green:255,blue:255},black:{red:0,green:0,blue:0}},sre.ColorPicker.getChannelColor_=function(e,t){e=e||{color:t};var n=e.color?sre.ColorPicker.namedColors_[e.color]:e;return n||(n=sre.ColorPicker.namedColors_[t]),n.alpha=e.hasOwnProperty("alpha")?e.alpha:1,sre.ColorPicker.normalizeColor_(n)},sre.ColorPicker.normalizeColor_=function(e){var t=function(e){return e=Math.max(e,0),e=Math.min(255,e),Math.round(e)};return e.red=t(e.red),e.green=t(e.green),e.blue=t(e.blue),e.alpha=Math.max(e.alpha,0),e.alpha=Math.min(1,e.alpha),e},sre.ColorPicker.prototype.rgba=function(){var e=function(e){return"rgba("+e.red+","+e.green+","+e.blue+","+e.alpha+")"};return{background:e(this.background),foreground:e(this.foreground)}},sre.ColorPicker.prototype.rgb=function(){var e=function(e){return"rgb("+e.red+","+e.green+","+e.blue+")"};return{background:e(this.background),alphaback:this.background.alpha.toString(),foreground:e(this.foreground),alphafore:this.foreground.alpha.toString()}},sre.ColorPicker.prototype.hex=function(){var e=function(e){return"#"+sre.ColorPicker.toHex_(e.red)+sre.ColorPicker.toHex_(e.green)+sre.ColorPicker.toHex_(e.blue)};return{background:e(this.background),alphaback:this.background.alpha.toString(),foreground:e(this.foreground),alphafore:this.foreground.alpha.toString()}},sre.ColorPicker.toHex_=function(e){return e=e.toString(16),1===e.length?"0"+e:e},sre.ContrastPicker=function(){this.hue=10,this.sat=100,this.incr=this.light=50},sre.ContrastPicker.prototype.generate=function(){return sre.ColorPicker.RGB2hex_(sre.ColorPicker.rgb2RGB_(sre.ColorPicker.hsl2rgb_(this.hue,this.sat,this.light)))},sre.ContrastPicker.prototype.increment=function(){this.hue=(this.hue+this.incr)%360},sre.ColorPicker.hsl2rgb_=function(e,t,n){n=1<n?n/100:n;var s,o,i=(1-Math.abs(2*n-1))*(1<t?t/100:t),a=i*(1-Math.abs(e/60%2-1));return n-=i/2,s=t=0,o=0,0<=e&&60>e?(e=$jscomp.makeIterator([i,a,0]),t=e.next().value,s=e.next().value,o=e.next().value):60<=e&&120>e?(e=$jscomp.makeIterator([a,i,0]),t=e.next().value,s=e.next().value,o=e.next().value):120<=e&&180>e?(e=$jscomp.makeIterator([0,i,a]),t=e.next().value,s=e.next().value,o=e.next().value):180<=e&&240>e?(e=$jscomp.makeIterator([0,a,i]),t=e.next().value,s=e.next().value,o=e.next().value):240<=e&&300>e?(e=$jscomp.makeIterator([a,0,i]),t=e.next().value,s=e.next().value,o=e.next().value):300<=e&&360>e&&(e=$jscomp.makeIterator([i,0,a]),t=e.next().value,s=e.next().value,o=e.next().value),{red:t+n,green:s+n,blue:o+n}},sre.ColorPicker.rgb2RGB_=function(e){return{red:Math.round(255*e.red),green:Math.round(255*e.green),blue:Math.round(255*e.blue)}},sre.ColorPicker.RGB2hex_=function(e){return"rgb("+e.red+","+e.green+","+e.blue+")"},sre.Highlighter=function(){},sre.Highlighter.prototype.highlight=function(){},sre.Highlighter.prototype.unhighlight=function(){},sre.Highlighter.prototype.highlightAll=function(){},sre.Highlighter.prototype.unhighlightAll=function(){},sre.Highlighter.prototype.setColor=function(){},sre.Highlighter.prototype.addEvents=function(){},sre.AbstractHighlighter=function(){this.currentHighlights_=[],this.color=null,this.mactionName=""},sre.AbstractHighlighter.ATTR="sre-highlight",sre.AbstractHighlighter.prototype.highlight=function(e){this.currentHighlights_.push(e.map(goog.bind(function(e){var t=this.highlightNode(e);return this.setHighlighted(e),t},this)))},sre.AbstractHighlighter.prototype.highlightNode=goog.abstractMethod,sre.AbstractHighlighter.prototype.highlightAll=function(e){e=this.getMactionNodes(e);for(var t,n=0;t=e[n];n++)this.highlight([t])},sre.AbstractHighlighter.prototype.unhighlight=function(){var e=this.currentHighlights_.pop();e&&e.forEach(goog.bind(function(e){this.isHighlighted(e.node)&&(this.unhighlightNode(e),this.unsetHighlighted(e.node))},this))},sre.AbstractHighlighter.prototype.unhighlightNode=goog.abstractMethod,sre.AbstractHighlighter.prototype.unhighlightAll=function(){for(;0<this.currentHighlights_.length;)this.unhighlight()},sre.AbstractHighlighter.prototype.setColor=function(e){this.color=e},sre.AbstractHighlighter.prototype.colorString=function(){return this.color.rgba()},sre.AbstractHighlighter.prototype.addEvents=function(e,t){e=this.getMactionNodes(e);for(var n,s,o=0;s=e[o];o++)for(n in t)s.addEventListener(n,t[n])},sre.AbstractHighlighter.prototype.getMactionNodes=function(e){return e.getElementsByClassName(this.mactionName)},sre.AbstractHighlighter.prototype.isMactionNode=function(e){return!!(e=e.className||e.getAttribute("class"))&&e.match(new RegExp(this.mactionName))},sre.AbstractHighlighter.prototype.isHighlighted=function(e){return e.hasAttribute(sre.AbstractHighlighter.ATTR)},sre.AbstractHighlighter.prototype.setHighlighted=function(e){e.setAttribute(sre.AbstractHighlighter.ATTR,!0)},sre.AbstractHighlighter.prototype.unsetHighlighted=function(e){e.removeAttribute(sre.AbstractHighlighter.ATTR)},sre.AbstractHighlighter.prototype.colorizeAll=function(e){sre.XpathUtil.evalXPath(".//*[@"+sre.EnrichMathml.Attribute.ID+"]",e).forEach(goog.bind(function(e){this.colorize(e)},this))},sre.AbstractHighlighter.prototype.uncolorizeAll=function(e){sre.XpathUtil.evalXPath(".//*[@"+sre.EnrichMathml.Attribute.ID+"]",e).forEach(goog.bind(function(e){this.uncolorize(e)},this))},sre.AbstractHighlighter.prototype.colorize=function(e){var t=sre.EnrichMathml.addPrefix("foreground");e.hasAttribute(t)&&(e.setAttribute(t+"-old",e.style.color),e.style.color=e.getAttribute(t))},sre.AbstractHighlighter.prototype.uncolorize=function(e){var t=sre.EnrichMathml.addPrefix("foreground")+"-old";e.hasAttribute(t)&&(e.style.color=e.getAttribute(t))},sre.CssHighlighter=function(){sre.AbstractHighlighter.call(this),this.mactionName="mjx-maction"},goog.inherits(sre.CssHighlighter,sre.AbstractHighlighter),sre.CssHighlighter.prototype.highlightNode=function(e){var n={node:e,background:e.style.backgroundColor,foreground:e.style.color},t=this.colorString();return e.style.backgroundColor=t.background,e.style.color=t.foreground,n},sre.CssHighlighter.prototype.unhighlightNode=function(e){e.node.style.backgroundColor=e.background,e.node.style.color=e.foreground},sre.ChtmlHighlighter=function(){sre.CssHighlighter.call(this)},goog.inherits(sre.ChtmlHighlighter,sre.CssHighlighter),sre.ChtmlHighlighter.prototype.isMactionNode=function(e){return e.tagName.toUpperCase()===this.mactionName.toUpperCase()},sre.ChtmlHighlighter.prototype.getMactionNodes=function(e){return e.getElementsByTagName(this.mactionName)},sre.HtmlHighlighter=function(){sre.AbstractHighlighter.call(this),this.mactionName="maction"},goog.inherits(sre.HtmlHighlighter,sre.AbstractHighlighter),sre.HtmlHighlighter.prototype.setMode=function(e){this.mode=e},sre.HtmlHighlighter.prototype.highlightNode=function(e){var t,n,s,i={node:e,foreground:e.style.color,position:e.style.position},o=this.color.rgb();return e.style.color=o.foreground,e.style.position="relative",n=e.bbox,n&&n.w&&(t=sre.DomUtil.createElement("span"),s=parseFloat(e.style.paddingLeft||"0"),t.style.backgroundColor=o.background,t.style.opacity=o.alphaback.toString(),t.style.display="inline-block",t.style.height=n.h+n.d+.1+"em",t.style.verticalAlign=-n.d+"em",t.style.marginTop=t.style.marginBottom="-0.05em",t.style.width=n.w+0+"em",t.style.marginLeft=s-0+"em",t.style.marginRight=-n.w-s+"em",e.parentNode.insertBefore(t,e),i.box=t),i},sre.HtmlHighlighter.prototype.unhighlightNode=function(e){var t=e.node;t.style.color=e.foreground,t.style.position=e.position,e.box&&e.box.parentNode.removeChild(e.box)},sre.MmlCssHighlighter=function(){sre.CssHighlighter.call(this),this.mactionName="maction"},goog.inherits(sre.MmlCssHighlighter,sre.CssHighlighter),sre.MmlCssHighlighter.prototype.getMactionNodes=function(e){return e.getElementsByTagName(this.mactionName)},sre.MmlCssHighlighter.prototype.isMactionNode=function(e){return e.tagName===this.mactionName},sre.MmlHighlighter=function(){sre.AbstractHighlighter.call(this),this.mactionName="maction"},goog.inherits(sre.MmlHighlighter,sre.AbstractHighlighter),sre.MmlHighlighter.prototype.highlightNode=function(e){var t=e.getAttribute("style");return t+=";background-color: "+this.colorString().background,t+=";color: "+this.colorString().foreground,e.setAttribute("style",t),{node:e}},sre.MmlHighlighter.prototype.unhighlightNode=function(e){var t=e.node.getAttribute("style"),t=t.replace(";background-color: "+this.colorString().background,""),t=t.replace(";color: "+this.colorString().foreground,"");e.node.setAttribute("style",t)},sre.MmlHighlighter.prototype.colorString=function(){return this.color.rgba()},sre.MmlHighlighter.prototype.getMactionNodes=function(e){return e.getElementsByTagName(this.mactionName)},sre.MmlHighlighter.prototype.isMactionNode=function(e){return e.tagName===this.mactionName},sre.SvgHighlighter=function(){sre.AbstractHighlighter.call(this),this.mactionName="mjx-svg-maction"},goog.inherits(sre.SvgHighlighter,sre.AbstractHighlighter),sre.SvgHighlighter.prototype.highlightNode=function(e){if(this.isHighlighted(e))return{node:e.previousSibling||e,background:e.style.backgroundColor,foreground:e.style.color};if("svg"===e.tagName){var n,s,t={node:e,background:e.style.backgroundColor,foreground:e.style.color};return e.style.backgroundColor=this.colorString().background,e.style.color=this.colorString().foreground,t}return t=sre.DomUtil.createElementNS("http://www.w3.org/2000/svg","rect"),"use"===e.nodeName?(s=sre.DomUtil.createElementNS("http://www.w3.org/2000/svg","g"),e.parentNode.insertBefore(s,e),s.appendChild(e),n=s.getBBox(),s.parentNode.replaceChild(e,s)):n=e.getBBox(),t.setAttribute("x",n.x-40),t.setAttribute("y",n.y-40),t.setAttribute("width",n.width+80),t.setAttribute("height",n.height+80),(n=e.getAttribute("transform"))&&t.setAttribute("transform",n),t.setAttribute("fill",this.colorString().background),t.setAttribute(sre.AbstractHighlighter.ATTR,!0),e.parentNode.insertBefore(t,e),t={node:t,foreground:e.getAttribute("fill")},e.setAttribute("fill",this.colorString().foreground),t},sre.SvgHighlighter.prototype.setHighlighted=function(e){"svg"===e.tagName&&sre.SvgHighlighter.superClass_.setHighlighted.call(this,e)},sre.SvgHighlighter.prototype.unhighlightNode=function(e){"background"in e?(e.node.style.backgroundColor=e.background,e.node.style.color=e.foreground):(e.foreground?e.node.nextSibling.setAttribute("fill",e.foreground):e.node.nextSibling.removeAttribute("fill"),e.node.parentNode.removeChild(e.node))},sre.SvgHighlighter.prototype.isMactionNode=function(e){return e=e.className||e.getAttribute("class"),!!(e=void 0!==e.baseVal?e.baseVal:e)&&e.match(new RegExp(this.mactionName))},sre.SvgV3Highlighter=function(){sre.SvgHighlighter.call(this),this.mactionName="maction"},goog.inherits(sre.SvgV3Highlighter,sre.SvgHighlighter),sre.SvgV3Highlighter.prototype.highlightNode=function(e){if(this.isHighlighted(e))return{node:e,background:this.colorString().background,foreground:this.colorString().foreground};if("svg"===e.tagName||"MJX-CONTAINER"===e.tagName){var n,t={node:e,background:e.style.backgroundColor,foreground:e.style.color};return e.style.backgroundColor=this.colorString().background,e.style.color=this.colorString().foreground,t}return t=sre.DomUtil.createElementNS("http://www.w3.org/2000/svg","rect"),t.setAttribute("sre-highlighter-added",!0),n=e.getBBox(),t.setAttribute("x",n.x-40),t.setAttribute("y",n.y-40),t.setAttribute("width",n.width+80),t.setAttribute("height",n.height+80),(n=e.getAttribute("transform"))&&t.setAttribute("transform",n),t.setAttribute("fill",this.colorString().background),e.setAttribute(sre.AbstractHighlighter.ATTR,!0),e.parentNode.insertBefore(t,e),t={node:e,foreground:e.getAttribute("fill")},"rect"===e.nodeName?(n=new sre.ColorPicker({alpha:0,color:"black"}),e.setAttribute("fill",n.rgba().foreground)):e.setAttribute("fill",this.colorString().foreground),t},sre.SvgV3Highlighter.prototype.unhighlightNode=function(e){var t=e.node.previousSibling;t&&t.hasAttribute("sre-highlighter-added")?(e.foreground?e.node.setAttribute("fill",e.foreground):e.node.removeAttribute("fill"),e.node.parentNode.removeChild(t)):(e.node.style.backgroundColor=e.background,e.node.style.color=e.foreground)},sre.SvgV3Highlighter.prototype.isMactionNode=function(e){return e.getAttribute("data-mml-node")===this.mactionName},sre.SvgV3Highlighter.prototype.getMactionNodes=function(e){return sre.XpathUtil.evalXPath('.//*[@data-mml-node="'+this.mactionName+'"]',e)},sre.HighlighterFactory={},sre.HighlighterFactory.highlighter=function(e,t,n){return e=new sre.ColorPicker(e,t),n=new(sre.HighlighterFactory.highlighterMapping_["NativeMML"===n.renderer&&"Safari"===n.browser?"MML-CSS":"SVG"===n.renderer&&"v3"===n.browser?"SVG-V3":n.renderer]||sre.HighlighterFactory.highlighterMapping_.NativeMML),n.setColor(e),n},sre.HighlighterFactory.addEvents=function(e,t,n){(n=sre.HighlighterFactory.highlighterMapping_[n.renderer])&&(new n).addEvents(e,t)},sre.HighlighterFactory.highlighterMapping_={SVG:sre.SvgHighlighter,"SVG-V3":sre.SvgV3Highlighter,NativeMML:sre.MmlHighlighter,"HTML-CSS":sre.HtmlHighlighter,"MML-CSS":sre.MmlCssHighlighter,CommonHTML:sre.CssHighlighter,CHTML:sre.ChtmlHighlighter},sre.Span=function(e,t){this.string=e,this.attributes=t},sre.AudioUtil={},sre.AudioUtil.mergePause=function(e,t,n){return e?{pause:sre.AudioUtil.mergePause_(e.pause,t.pause,n)}:t},sre.AudioUtil.mergePause_=function(e,t,n){return(n||function(n,s){return"number"==typeof n||"number"==typeof s?n+s:"number"==typeof n?s:"number"==typeof s?n:[e,t].sort()[0]}).call(null,e,t)},sre.AudioUtil.mergeMarkup=function(e,t){delete e.open,t.close.forEach(function(t){delete e[t]}),t.open.forEach(function(n){e[n]=t[n]});var n=Object.keys(e);e.open=n},sre.AudioUtil.sortClose=function(e,t){if(1>=e.length)return e;for(var n,s=[],o=0;n=t[o],e.length;o++)n.close&&n.close.length&&n.close.forEach(function(t){var n=e.indexOf(t);-1!==n&&(s.unshift(t),e.splice(n,1))});return s},sre.AudioUtil.PersonalityRanges_={},sre.AudioUtil.LastOpen_=[],sre.AudioUtil.personalityMarkup=function(e){sre.AudioUtil.PersonalityRanges_={},sre.AudioUtil.LastOpen_=[];for(var n=[],a={},i=0;s=e[i];i++){var o=null,r=s.descriptionSpan(),t=s.personality,s=t[sre.Engine.personalityProps.JOIN];delete t[sre.Engine.personalityProps.JOIN],"undefined"!=typeof t[sre.Engine.personalityProps.PAUSE]&&(o={},o[sre.Engine.personalityProps.PAUSE]=t[sre.Engine.personalityProps.PAUSE],delete t[sre.Engine.personalityProps.PAUSE]),t=sre.AudioUtil.personalityDiff_(t,a),sre.AudioUtil.appendMarkup_(n,r,t,s,o,!0)}return n=n.concat(sre.AudioUtil.finaliseMarkup_()),n=sre.AudioUtil.simplifyMarkup_(n)},sre.AudioUtil.appendElement_=function(e,t){var s,n=e[e.length-1];n?sre.AudioUtil.isSpanElement(t)&&sre.AudioUtil.isSpanElement(n)?"undefined"==typeof n.join?n.span=n.span.concat(t.span):(e=n.span.pop(),s=t.span.shift(),n.span.push(e+n.join+s),n.span=n.span.concat(t.span),n.join=t.join):sre.AudioUtil.isPauseElement(t)&&sre.AudioUtil.isPauseElement(n)?n.pause=sre.AudioUtil.mergePause_(n.pause,t.pause):e.push(t):e.push(t)},sre.AudioUtil.simplifyMarkup_=function(e){for(var t,n,i,a={},s=[],o=0;t=e[o];o++)sre.AudioUtil.isMarkupElement(t)?!t.close||1!==t.close.length||t.open.length?(sre.AudioUtil.copyValues_(t,a),s.push(t)):(n=e[o+1],!n||sre.AudioUtil.isSpanElement(n)?(sre.AudioUtil.copyValues_(t,a),s.push(t)):(i=sre.AudioUtil.isPauseElement(n)?n:null,i&&(n=e[o+2]),n&&sre.AudioUtil.isMarkupElement(n)&&n.open[0]===t.close[0]&&!n.close.length&&n[n.open[0]]===a[n.open[0]]?i?(sre.AudioUtil.appendElement_(s,i),o+=2):o+=1:(sre.AudioUtil.copyValues_(t,a),s.push(t)))):sre.AudioUtil.appendElement_(s,t);return s},sre.AudioUtil.copyValues_=function(e,t){e.rate&&(t.rate=e.rate),e.pitch&&(t.pitch=e.pitch),e.volume&&(t.volume=e.volume)},sre.AudioUtil.finaliseMarkup_=function(){for(var e,t,n,s,i=[],o=sre.AudioUtil.LastOpen_.length-1;0<=o;o--)if(e=sre.AudioUtil.LastOpen_[o],e.length){for(t={open:[],close:[]},n=0;n<e.length;n++)s=e[n],t.close.push(s),t[s]=0;i.push(t)}return i},sre.AudioUtil.isMarkupElement=function(e){return"object"==typeof e&&e.open},sre.AudioUtil.isPauseElement=function(e){return"object"==typeof e&&1===Object.keys(e).length&&Object.keys(e)[0]===sre.Engine.personalityProps.PAUSE},sre.AudioUtil.isSpanElement=function(e){var t=Object.keys(e);return"object"==typeof e&&(1===t.length&&"span"===t[0]||2===t.length&&("span"===t[0]&&"join"===t[1]||"span"===t[1]&&"join"===t[0]))},sre.AudioUtil.appendMarkup_=function(e,t,n,s,o,i){if(i){if(i=e[e.length-1])var a,r=i[sre.Engine.personalityProps.JOIN];i&&!t.string&&o&&sre.AudioUtil.isPauseElement(i)&&(a=sre.Engine.personalityProps.PAUSE,i[a]=sre.AudioUtil.mergePause_(i[a],o[a]),o=null),i&&t.string&&0===Object.keys(n).length&&sre.AudioUtil.isSpanElement(i)&&("undefined"!=typeof r&&(a=i.span.pop(),t=new sre.Span(a.string+r+t.string,a.attributes)),i.span.push(t),t=new sre.Span("",{}),i[sre.Engine.personalityProps.JOIN]=s)}0!==Object.keys(n).length&&e.push(n),t.string&&e.push({span:[t],join:s}),o&&e.push(o)},sre.AudioUtil.personalityDiff_=function(e,t){if(!t)return e;n={};for(o in sre.Engine.personalityProps){var n,o,a,s=sre.Engine.personalityProps[o],i=e[s],r=t[s];!i&&!r||i&&r&&i===r||(a=i||0,sre.AudioUtil.isMarkupElement(n)||(n.open=[],n.close=[]),i||n.close.push(s),r||n.open.push(s),r&&i&&(n.close.push(s),n.open.push(s)),t[s]=a,n[s]=a,sre.AudioUtil.PersonalityRanges_[s]?sre.AudioUtil.PersonalityRanges_[s].push(a):sre.AudioUtil.PersonalityRanges_[s]=[a])}if(sre.AudioUtil.isMarkupElement(n)){for(e=n.close.slice();0<e.length;)if(o=sre.AudioUtil.LastOpen_.pop(),s=sre.BaseUtil.setdifference(o,e),e=sre.BaseUtil.setdifference(e,o),o=s,0===e.length)0!==o.length&&sre.AudioUtil.LastOpen_.push(o);else if(0!==o.length)for(n.close=n.close.concat(o),n.open=n.open.concat(o),s=0;i=o[s];s++)n[i]=t[i];sre.AudioUtil.LastOpen_.push(n.open)}return n},sre.AudioRenderer=function(){},sre.AudioRenderer.prototype.setSeparator=function(){},sre.AudioRenderer.prototype.getSeparator=function(){},sre.AudioRenderer.prototype.markup=function(){},sre.AudioRenderer.prototype.error=function(){},sre.AudioRenderer.prototype.merge=function(){},sre.AudioRenderer.prototype.finalize=function(){},sre.AbstractAudioRenderer=function(){this.separator_=" "},sre.AbstractAudioRenderer.prototype.setSeparator=function(e){this.separator_=e},sre.AbstractAudioRenderer.prototype.getSeparator=function(){return this.separator_},sre.AbstractAudioRenderer.prototype.markup=goog.abstractMethod,sre.AbstractAudioRenderer.prototype.error=function(){return null},sre.AbstractAudioRenderer.prototype.merge=function(e){return e.map(function(e){return e.string}).join(this.getSeparator())},sre.AbstractAudioRenderer.prototype.finalize=function(e){return e},sre.AbstractAudioRenderer.prototype.pauseValue=function(e){switch(e){case"long":e=750;break;case"medium":e=500;break;case"short":e=250;break;default:e=parseInt(e,10)}return Math.floor(e*parseInt(sre.Engine.getInstance().getRate(),10)/100)},sre.MarkupRenderer=function(){sre.AbstractAudioRenderer.call(this),this.scaleFunction_=null},goog.inherits(sre.MarkupRenderer,sre.AbstractAudioRenderer),sre.MarkupRenderer.prototype.setScaleFunction=function(e,t,n,s,o){var i=o||0;this.scaleFunction_=function(o){return o=(o-e)/(t-e),+(Math.round(n*(1-o)+s*o+"e+"+i)+"e-"+i)}},sre.MarkupRenderer.prototype.applyScaleFunction=function(e){return this.scaleFunction_?this.scaleFunction_(e):e},sre.MarkupRenderer.prototype.pause=goog.abstractMethod,sre.MarkupRenderer.prototype.prosodyElement=goog.abstractMethod,sre.AcssRenderer=function(){sre.MarkupRenderer.call(this)},goog.inherits(sre.AcssRenderer,sre.MarkupRenderer),sre.AcssRenderer.prototype.markup=function(e){this.setScaleFunction(-2,2,0,10,0),e=sre.AudioUtil.personalityMarkup(e);for(var t,s,o=[],i={open:[]},n=null,a=!1,r=0;t=e[r];r++)sre.AudioUtil.isMarkupElement(t)?sre.AudioUtil.mergeMarkup(i,t):sre.AudioUtil.isPauseElement(t)?a&&(n=sre.AudioUtil.mergePause(n,t,Math.max)):(t='"'+this.merge(t.span)+'"',a=!0,n&&(o.push(this.pause(n)),n=null),s=this.prosody_(i),o.push(s?"(text ("+s+") "+t+")":t));return"(exp "+o.join(" ")+")"},sre.AcssRenderer.prototype.error=function(e){return'(error "'+sre.EventUtil.Move[e.toString()]+'")'},sre.AcssRenderer.prototype.prosody_=function(e){for(var t,o=e.open,n=[],s=0;t=o[s];s++)n.push(this.prosodyElement(t,e[t]));return n.join(" ")},sre.AcssRenderer.prototype.prosodyElement=function(e,t){switch(t=this.applyScaleFunction(t),e){case sre.Engine.personalityProps.RATE:return"(richness . "+t+")";case sre.Engine.personalityProps.PITCH:return"(average-pitch . "+t+")";case sre.Engine.personalityProps.VOLUME:return"(stress . "+t+")"}return"(value . "+t+")"},sre.AcssRenderer.prototype.pause=function(e){return"(pause . "+this.pauseValue(e[sre.Engine.personalityProps.PAUSE])+")"},sre.PunctuationRenderer=function(){sre.AbstractAudioRenderer.call(this)},goog.inherits(sre.PunctuationRenderer,sre.AbstractAudioRenderer),sre.PunctuationRenderer.prototype.markup=function(e){e=sre.AudioUtil.personalityMarkup(e);for(var t,s="",n=null,o=!1,i=0;t=e[i];i++)sre.AudioUtil.isMarkupElement(t)||(sre.AudioUtil.isPauseElement(t)?o&&(n=sre.AudioUtil.mergePause(n,t,Math.max)):(n&&(s+=this.pause(n[sre.Engine.personalityProps.PAUSE]),n=null),s+=(o?this.getSeparator():"")+this.merge(t.span),o=!0));return s},sre.PunctuationRenderer.PAUSE_PUNCTUATION_={short:",",medium:";",long:"."},sre.PunctuationRenderer.prototype.pause=function(e){return sre.PunctuationRenderer.PAUSE_PUNCTUATION_["number"==typeof e?250>=e?"short":500>=e?"medium":"long":e]||""},sre.XmlRenderer=function(){sre.MarkupRenderer.call(this)},goog.inherits(sre.XmlRenderer,sre.MarkupRenderer),sre.XmlRenderer.prototype.markup=function(e){this.setScaleFunction(-2,2,-100,100,2),e=sre.AudioUtil.personalityMarkup(e);for(var t,s,o,n=[],a=[],i=0;t=e[i];i++)if(t.span)n.push(this.merge(t.span));else if(sre.AudioUtil.isPauseElement(t))n.push(this.pause(t));else{if(t.close.length)for(o=0;o<t.close.length;o++){if(s=a.pop(),-1===t.close.indexOf(s))throw new sre.Engine.Error("Unknown closing markup element: "+s);n.push(this.closeTag(s))}t.open.length&&sre.AudioUtil.sortClose(t.open.slice(),e.slice(i+1)).forEach(goog.bind(function(e){n.push(this.prosodyElement(e,t[e])),a.push(e)},this))}return n.join(" ")},sre.XmlRenderer.prototype.closeTag=goog.abstractMethod,sre.SableRenderer=function(){sre.XmlRenderer.call(this)},goog.inherits(sre.SableRenderer,sre.XmlRenderer),sre.SableRenderer.prototype.finalize=function(e){return'<?xml version="1.0"?><!DOCTYPE SABLE PUBLIC "-//SABLE//DTD SABLE speech mark up//EN" "Sable.v0_2.dtd" []><SABLE>'+this.getSeparator()+e+this.getSeparator()+"</SABLE>"},sre.SableRenderer.prototype.pause=function(e){return'<BREAK MSEC="'+this.pauseValue(e[sre.Engine.personalityProps.PAUSE])+'"/>'},sre.SableRenderer.prototype.prosodyElement=function(e,t){switch(t=this.applyScaleFunction(t),e){case sre.Engine.personalityProps.PITCH:return'<PITCH RANGE="'+t+'%">';case sre.Engine.personalityProps.RATE:return'<RATE SPEED="'+t+'%">';case sre.Engine.personalityProps.VOLUME:return'<VOLUME LEVEL="'+t+'%">';default:return"<"+e.toUpperCase()+' VALUE="'+t+'">'}},sre.SableRenderer.prototype.closeTag=function(e){return"</"+e.toUpperCase()+">"},sre.SsmlRenderer=function(){sre.XmlRenderer.call(this)},goog.inherits(sre.SsmlRenderer,sre.XmlRenderer),sre.SsmlRenderer.prototype.finalize=function(e){return'<?xml version="1.0"?><speak version="1.1" xmlns="http://www.w3.org/2001/10/synthesis"><prosody rate="'+sre.Engine.getInstance().getRate()+'%">'+this.getSeparator()+e+this.getSeparator()+"</prosody></speak>"},sre.SsmlRenderer.prototype.pause=function(e){return'<break time="'+this.pauseValue(e[sre.Engine.personalityProps.PAUSE])+'ms"/>'},sre.SsmlRenderer.prototype.prosodyElement=function(e,t){return t=Math.floor(this.applyScaleFunction(t)),t=0>t?t.toString():"+"+t.toString(),"<prosody "+e.toLowerCase()+'="'+t+(e===sre.Engine.personalityProps.VOLUME?">":'%">')},sre.SsmlRenderer.prototype.closeTag=function(){return"</prosody>"},sre.SsmlStepRenderer=function(){sre.SsmlRenderer.call(this)},goog.inherits(sre.SsmlStepRenderer,sre.SsmlRenderer),sre.SsmlStepRenderer.prototype.markup=function(e){return sre.SsmlStepRenderer.MARKS={},sre.SsmlStepRenderer.superClass_.markup.call(this,e)},sre.SsmlStepRenderer.CHARACTER_ATTR_="character",sre.SsmlStepRenderer.MARKS={},sre.SsmlStepRenderer.prototype.merge=function(e){for(var t,n,s=[],o=0;o<e.length;o++)t=e[o],n=t.attributes.extid,n&&!sre.SsmlStepRenderer.MARKS[n]&&(s.push('<mark name="'+n+'"/>'),sre.SsmlStepRenderer.MARKS[n]=!0),1===t.string.length&&t.string.match(/[a-zA-Z]/)?s.push('<say-as interpret-as="'+sre.SsmlStepRenderer.CHARACTER_ATTR_+'">'+t.string+"</say-as>"):s.push(t.string);return s.join(this.getSeparator())},sre.StringRenderer=function(){sre.AbstractAudioRenderer.call(this)},goog.inherits(sre.StringRenderer,sre.AbstractAudioRenderer),sre.StringRenderer.prototype.markup=function(e){if(n="",e=e.filter(function(e){return e.descriptionString()}),!e.length)return n;for(t=0;t<e.length-1;t++){var t,n,o=e[t],s=o.personality[sre.Engine.personalityProps.JOIN],i="nemeth"===sre.Engine.getInstance().locale?"":this.getSeparator(),s="undefined"==typeof s?i:s;n+=o.descriptionString()+s}return n+=e[t].descriptionString()},sre.AuralRendering=function(){},goog.addSingletonGetter(sre.AuralRendering),sre.AuralRendering.prototype.setSeparator=function(e){var t=sre.AuralRendering.rendererMapping_[sre.Engine.getInstance().markup];t&&t.setSeparator(e)},sre.AuralRendering.prototype.getSeparator=function(){var e=sre.AuralRendering.rendererMapping_[sre.Engine.getInstance().markup];return e?e.getSeparator():""},sre.AuralRendering.prototype.markup=function(e){var t=sre.AuralRendering.rendererMapping_[sre.Engine.getInstance().markup];return t?t.markup(e):""},sre.AuralRendering.prototype.merge=function(e){var n=e.map(function(e){return{string:e,attributes:{}}}),t=sre.AuralRendering.rendererMapping_[sre.Engine.getInstance().markup];return t?t.merge(n):e.join()},sre.AuralRendering.prototype.finalize=function(e){var t=sre.AuralRendering.rendererMapping_[sre.Engine.getInstance().markup];return t?t.finalize(e):e},sre.AuralRendering.prototype.error=function(e){var t=sre.AuralRendering.rendererMapping_[sre.Engine.getInstance().markup];return t?t.error(e):""},sre.AuralRendering.registerRenderer=function(e,t){sre.AuralRendering.rendererMapping_[e]=t},sre.AuralRendering.ofType=function(e){return sre.AuralRendering.rendererMapping_[sre.Engine.getInstance().markup]instanceof e},sre.AuralRendering.rendererMapping_={},sre.AuralRendering.registerRenderer(sre.Engine.Markup.NONE,new sre.StringRenderer),sre.AuralRendering.registerRenderer(sre.Engine.Markup.PUNCTUATION,new sre.PunctuationRenderer),sre.AuralRendering.registerRenderer(sre.Engine.Markup.ACSS,new sre.AcssRenderer),sre.AuralRendering.registerRenderer(sre.Engine.Markup.SABLE,new sre.SableRenderer),sre.AuralRendering.xmlInstance=new sre.SsmlRenderer,sre.AuralRendering.registerRenderer(sre.Engine.Markup.VOICEXML,sre.AuralRendering.xmlInstance),sre.AuralRendering.registerRenderer(sre.Engine.Markup.SSML,sre.AuralRendering.xmlInstance),sre.AuralRendering.registerRenderer(sre.Engine.Markup.SSML_STEP,new sre.SsmlStepRenderer),sre.WalkerUtil={},sre.WalkerUtil.splitAttribute=function(e){return e?e.split(/,/):[]},sre.WalkerUtil.getAttribute=function(e,t){return sre.DomUtil.getDataAttribute(e,t)},sre.WalkerUtil.getSemanticRoot=function(e){if(e.hasAttribute(sre.EnrichMathml.Attribute.TYPE)&&!e.hasAttribute(sre.EnrichMathml.Attribute.PARENT))return e;for(var t,s=sre.DomUtil.querySelectorAllByAttr(e,sre.EnrichMathml.Attribute.TYPE),n=0;t=s[n];n++)if(!t.hasAttribute(sre.EnrichMathml.Attribute.PARENT))return t;return e},sre.WalkerUtil.getBySemanticId=function(e,t){return e.getAttribute(sre.EnrichMathml.Attribute.ID)===t?e:sre.DomUtil.querySelectorAllByAttrValue(e,sre.EnrichMathml.Attribute.ID,t)[0]},sre.RebuildStree=function(e){this.factory=new sre.SemanticNodeFactory,this.nodeDict={},this.mathml=e,this.mmlRoot=sre.WalkerUtil.getSemanticRoot(e),this.streeRoot=this.assembleTree(this.mmlRoot),this.stree=sre.SemanticTree.fromNode(this.streeRoot,this.mathml),this.xml=this.stree.xml(),sre.SemanticProcessor.getInstance().setNodeFactory(this.factory)},sre.RebuildStree.prototype.getTree=function(){return this.stree},sre.RebuildStree.addAttributes=function(e,t,n){n&&1===t.childNodes.length&&t.childNodes[0].nodeType!==sre.DomUtil.NodeType.TEXT_NODE&&sre.SemanticUtil.addAttributes(e,t.childNodes[0]),sre.SemanticUtil.addAttributes(e,t)},sre.RebuildStree.prototype.assembleTree=function(e){var t,n=this.makeNode(e),s=sre.WalkerUtil.splitAttribute(sre.WalkerUtil.getAttribute(e,sre.EnrichMathml.Attribute.CHILDREN)),o=sre.WalkerUtil.splitAttribute(sre.WalkerUtil.getAttribute(e,sre.EnrichMathml.Attribute.CONTENT));return sre.RebuildStree.addAttributes(n,e,!s.length&&!o.length),0===o.length&&0===s.length?(n.textContent=e.textContent,n):(0<o.length&&(t=sre.WalkerUtil.getBySemanticId(e,o[0]),t&&(t=sre.WalkerUtil.splitAttribute(sre.WalkerUtil.getAttribute(t,sre.EnrichMathml.Attribute.OPERATOR)),1<t.length&&(n.textContent=t[1]))),t=function(t){return t=sre.WalkerUtil.getBySemanticId(e,t),t=this.assembleTree(t),t.parent=n,t},n.contentNodes=o.map(goog.bind(t,this)),n.childNodes=s.map(goog.bind(t,this)),(s=sre.WalkerUtil.getAttribute(e,sre.EnrichMathml.Attribute.COLLAPSED))?this.postProcess(n,s):n)},sre.RebuildStree.prototype.makeNode=function(e){var s=sre.WalkerUtil.getAttribute(e,sre.EnrichMathml.Attribute.TYPE),o=sre.WalkerUtil.getAttribute(e,sre.EnrichMathml.Attribute.ROLE),i=sre.WalkerUtil.getAttribute(e,sre.EnrichMathml.Attribute.FONT),a=sre.WalkerUtil.getAttribute(e,sre.EnrichMathml.Attribute.ANNOTATION)||"",t=sre.WalkerUtil.getAttribute(e,sre.EnrichMathml.Attribute.ID),n=sre.WalkerUtil.getAttribute(e,sre.EnrichMathml.Attribute.EMBELLISHED);return e=sre.WalkerUtil.getAttribute(e,sre.EnrichMathml.Attribute.FENCEPOINTER),t=this.createNode(parseInt(t,10)),t.type=s,t.role=o,t.font=i||sre.SemanticAttr.Font.UNKNOWN,t.parseAnnotation(a),e&&(t.fencePointer=e),n&&(t.embellished=n),t},sre.RebuildStree.isPunctuated=function(e){return!sre.SemanticSkeleton.simpleCollapseStructure(e)&&e[1]&&sre.SemanticSkeleton.contentCollapseStructure(e[1])},sre.RebuildStree.prototype.makePunctuation=function(e){return e=this.createNode(e),e.updateContent(sre.SemanticAttr.invisibleComma()),e.role=sre.SemanticAttr.Role.DUMMY,e},sre.RebuildStree.prototype.makePunctuated=function(e,t,n){var s=this.createNode(t[0]);s.type=sre.SemanticAttr.Type.PUNCTUATED,s.embellished=e.embellished,s.fencePointer=e.fencePointer,s.role=n,e=t.splice(1,1)[0].slice(1),s.contentNodes=e.map(goog.bind(this.makePunctuation,this)),this.collapsedChildren_(t)},sre.RebuildStree.prototype.makeEmpty=function(e,t,n){t=this.createNode(t),t.type=sre.SemanticAttr.Type.EMPTY,t.embellished=e.embellished,t.fencePointer=e.fencePointer,t.role=n},sre.RebuildStree.prototype.makeIndex=function(e,t,n){sre.RebuildStree.isPunctuated(t)?this.makePunctuated(e,t,n):sre.SemanticSkeleton.simpleCollapseStructure(t)&&!this.nodeDict[t.toString()]&&this.makeEmpty(e,t,n)},sre.RebuildStree.prototype.postProcess=function(e,t){if(t=sre.SemanticSkeleton.fromString(t).array,e.type===sre.SemanticAttr.Role.SUBSUP){var n=this.createNode(t[1][0]);return n.type=sre.SemanticAttr.Type.SUBSCRIPT,n.role=sre.SemanticAttr.Role.SUBSUP,e.type=sre.SemanticAttr.Type.SUPERSCRIPT,n.embellished=e.embellished,n.fencePointer=e.fencePointer,this.makeIndex(e,t[1][2],sre.SemanticAttr.Role.RIGHTSUB),this.makeIndex(e,t[2],sre.SemanticAttr.Role.RIGHTSUPER),this.collapsedChildren_(t),e}return e.type===sre.SemanticAttr.Type.SUBSCRIPT?(this.makeIndex(e,t[2],sre.SemanticAttr.Role.RIGHTSUB),this.collapsedChildren_(t),e):e.type===sre.SemanticAttr.Type.SUPERSCRIPT?(this.makeIndex(e,t[2],sre.SemanticAttr.Role.RIGHTSUPER),this.collapsedChildren_(t),e):e.type===sre.SemanticAttr.Type.TENSOR?(this.makeIndex(e,t[2],sre.SemanticAttr.Role.LEFTSUB),this.makeIndex(e,t[3],sre.SemanticAttr.Role.LEFTSUPER),this.makeIndex(e,t[4],sre.SemanticAttr.Role.RIGHTSUB),this.makeIndex(e,t[5],sre.SemanticAttr.Role.RIGHTSUPER),this.collapsedChildren_(t),e):e.type===sre.SemanticAttr.Type.PUNCTUATED?(sre.RebuildStree.isPunctuated(t)&&(t=t.splice(1,1)[0].slice(1),e.contentNodes=t.map(goog.bind(this.makePunctuation,this))),e):(e.type===sre.SemanticAttr.Role.UNDEROVER&&(n=this.createNode(t[1][0]),e.childNodes[1].role===sre.SemanticAttr.Role.OVERACCENT?(n.type=sre.SemanticAttr.Type.OVERSCORE,e.type=sre.SemanticAttr.Type.UNDERSCORE):(n.type=sre.SemanticAttr.Type.UNDERSCORE,e.type=sre.SemanticAttr.Type.OVERSCORE),n.role=sre.SemanticAttr.Role.UNDEROVER,n.embellished=e.embellished,n.fencePointer=e.fencePointer,this.collapsedChildren_(t)),e)},sre.RebuildStree.prototype.createNode=function(e){var t=this.factory.makeNode(e);return this.nodeDict[e.toString()]=t},sre.RebuildStree.prototype.collapsedChildren_=function(e){var t=goog.bind(function(e){n=this.nodeDict[e[0]],n.childNodes=[];for(var n,s,o=1,i=e.length;o<i;o++)s=e[o],n.childNodes.push(sre.SemanticSkeleton.simpleCollapseStructure(s)?this.nodeDict[s]:t(s));return n},this);t(e)},sre.SpeechGenerator=function(){},sre.SpeechGenerator.prototype.getSpeech=function(){},sre.SpeechGenerator.prototype.getRebuilt=function(){},sre.SpeechGenerator.prototype.setRebuilt=function(){},sre.SpeechGenerator.prototype.setOptions=function(){},sre.SpeechGenerator.prototype.getOptions=function(){},sre.SpeechGenerator.prototype.start=function(){},sre.SpeechGenerator.prototype.end=function(){},sre.AuditoryDescription=function(e){this.context=e.context||"",this.text=e.text||"",this.userValue=e.userValue||"",this.annotation=e.annotation||"",this.attributes=e.attributes||{},this.personality=e.personality||{}},sre.AuditoryDescription.create=function(e,t){return e.text=sre.Grammar.getInstance().apply(e.text,t||{}),new sre.AuditoryDescription(e)},sre.AuditoryDescription.prototype.isEmpty=function(){return 0==this.context.length&&0==this.text.length&&0==this.userValue.length&&0==this.annotation.length},sre.AuditoryDescription.prototype.clone=function(){if(this.personality){var e,t,n={};for(e in this.personality)n=this.personality[e]}if(this.attributes){t={};for(e in this.attributes)t=this.attributes[e]}return new sre.AuditoryDescription({context:this.context,text:this.text,userValue:this.userValue,annotation:this.annotation,personality:n,attributes:t})},sre.AuditoryDescription.prototype.toString=function(){return'AuditoryDescription(context="'+this.context+'"  text="'+this.text+'"  userValue="'+this.userValue+'"  annotation="'+this.annotation+'")'},sre.AuditoryDescription.prototype.descriptionString=function(){return this.context&&this.text?this.context+" "+this.text:this.context||this.text},sre.AuditoryDescription.prototype.descriptionSpan=function(){return new sre.Span(this.descriptionString(),this.attributes)},sre.AuditoryDescription.prototype.equals=function(e){return this.context==e.context&&this.text==e.text&&this.userValue==e.userValue&&this.annotation==e.annotation},sre.SpeechRule=function(e,t,n,s){this.name=e,this.dynamicCstr=t,this.precondition=n,this.action=s,this.context=null},sre.SpeechRule.prototype.toString=function(){return this.name+" | "+this.dynamicCstr.toString()+" | "+this.precondition.toString()+" ==> "+this.action.toString()},sre.SpeechRule.Type={NODE:"NODE",MULTI:"MULTI",TEXT:"TEXT",PERSONALITY:"PERSONALITY"},sre.SpeechRule.Type.fromString=function(e){switch(e){case"[n]":return sre.SpeechRule.Type.NODE;case"[m]":return sre.SpeechRule.Type.MULTI;case"[t]":return sre.SpeechRule.Type.TEXT;case"[p]":return sre.SpeechRule.Type.PERSONALITY;default:throw"Parse error: "+e}},sre.SpeechRule.Type.toString=function(e){switch(e){case sre.SpeechRule.Type.NODE:return"[n]";case sre.SpeechRule.Type.MULTI:return"[m]";case sre.SpeechRule.Type.TEXT:return"[t]";case sre.SpeechRule.Type.PERSONALITY:return"[p]";default:throw"Unknown type error: "+e}},sre.SpeechRule.Component=function(e){this.type=e.type,this.content=e.content,this.attributes=e.attributes,this.grammar=e.grammar},sre.SpeechRule.Component.fromString=function(e){var n,t={};if(t.type=sre.SpeechRule.Type.fromString(e.substring(0,3)),e=e.slice(3).trim(),!e)throw new sre.SpeechRule.OutputError("Missing content.");switch(t.type){case sre.SpeechRule.Type.TEXT:if('"'==e[0]){if(n=sre.SpeechRule.splitString_(e,"\\(")[0].trim(),'"'!=n.slice(-1))throw new sre.SpeechRule.OutputError("Invalid string syntax.");t.content=n,e=e.slice(n.length).trim(),-1==e.indexOf("(")&&(e="");break}case sre.SpeechRule.Type.NODE:case sre.SpeechRule.Type.MULTI:n=e.indexOf(" ("),-1==n?(t.content=e.trim(),e=""):(t.content=e.substring(0,n).trim(),e=e.slice(n).trim())}return e&&(e=sre.SpeechRule.Component.attributesFromString(e),e.grammar&&(t.grammar=e.grammar,delete e.grammar),Object.keys(e).length&&(t.attributes=e)),t=new sre.SpeechRule.Component(t)},sre.SpeechRule.Component.prototype.toString=function(){var e,t=""+sre.SpeechRule.Type.toString(this.type);return t+=this.content?" "+this.content:"",e=this.attributesToString(),t+(e?" "+e:"")},sre.SpeechRule.Component.grammarFromString=function(e){return sre.Grammar.parseInput(e)},sre.SpeechRule.Component.prototype.grammarToString=function(){return this.getGrammar().join(":")},sre.SpeechRule.Component.prototype.getGrammar=function(){var e,t=[];for(e in this.grammar)!0===this.grammar[e]?t.push(e):!1===this.grammar[e]?t.push("!"+e):t.push(e+"="+this.grammar[e]);return t},sre.SpeechRule.Component.attributesFromString=function(e){if("("!=e[0]||")"!=e.slice(-1))throw new sre.SpeechRule.OutputError("Invalid attribute expression: "+e);n={},e=sre.SpeechRule.splitString_(e.slice(1,-1),",");for(var t,n,s,o,i=0,a=e.length;i<a;i++)t=e[i],s=t.indexOf(":"),-1==s?n[t.trim()]="true":(o=t.substring(0,s).trim(),t=t.slice(s+1).trim(),n[o]="grammar"===o?sre.SpeechRule.Component.grammarFromString(t):n[o]=t);return n},sre.SpeechRule.Component.prototype.attributesToString=function(){var e=this.getAttributes(),t=this.grammarToString();return t&&e.push("grammar:"+t),0<e.length?"("+e.join(", ")+")":""},sre.SpeechRule.Component.prototype.getAttributes=function(){var e,t,n=[];for(e in this.attributes)t=this.attributes[e],"true"===t?n.push(e):n.push(e+":"+t);return n},sre.SpeechRule.Action=function(e){this.components=e},sre.SpeechRule.Action.fromString=function(e){e=sre.SpeechRule.splitString_(e,";").filter(function(e){return e.match(/\S/)}).map(function(e){return e.trim()});for(var t,s=[],n=0,o=e.length;n<o;n++)t=sre.SpeechRule.Component.fromString(e[n]),t&&s.push(t);return new sre.SpeechRule.Action(s)},sre.SpeechRule.Action.prototype.toString=function(){return this.components.map(function(e){return e.toString()}).join("; ")},sre.SpeechRule.Precondition=function(e,t){this.query=e,this.constraints=t||[]},sre.SpeechRule.Precondition.prototype.toString=function(){var e=this.constraints.join(", ");return this.query+", "+e},sre.SpeechRule.splitString_=function(e,t){for(var n,o,i=[],s="";""!=e;)if(n=e.search(t),-1==n){if(0!=(e.match(/"/g)||[]).length%2)throw new sre.SpeechRule.OutputError("Invalid string in expression: "+e);i.push(s+e),e=s=""}else if(0==(e.substring(0,n).match(/"/g)||[]).length%2)i.push(s+e.substring(0,n)),s="",e=e.substring(n+1);else{if(o=e.substring(n).search('"'),-1==o)throw new sre.SpeechRule.OutputError("Invalid string in expression: "+e);s+=e.substring(0,n+o+1),e=e.substring(n+o+1)}return s&&i.push(s),i},sre.SpeechRule.OutputError=function(e){sre.Engine.Error.call(this,e),this.name="RuleError"},goog.inherits(sre.SpeechRule.OutputError,sre.Engine.Error),sre.SpeechRuleFunctions=function(){},sre.SpeechRuleFunctions.Store_=function(e,t){this.prefix_=e,this.store_=t},sre.SpeechRuleFunctions.Store_.prototype.add=function(e,t){this.checkCustomFunctionSyntax_(e)&&(this.store_[e]=t)},sre.SpeechRuleFunctions.Store_.prototype.addStore=function(e){for(var t,s=Object.keys(e.store_),n=0;t=s[n];n++)this.add(t,e.store_[t])},sre.SpeechRuleFunctions.Store_.prototype.lookup=function(e){return this.store_[e]},sre.SpeechRuleFunctions.CustomQueries=function(){sre.SpeechRuleFunctions.Store_.call(this,"CQF",{})},goog.inherits(sre.SpeechRuleFunctions.CustomQueries,sre.SpeechRuleFunctions.Store_),sre.SpeechRuleFunctions.CustomStrings=function(){sre.SpeechRuleFunctions.Store_.call(this,"CSF",{})},goog.inherits(sre.SpeechRuleFunctions.CustomStrings,sre.SpeechRuleFunctions.Store_),sre.SpeechRuleFunctions.ContextFunctions=function(){sre.SpeechRuleFunctions.Store_.call(this,"CTXF",{})},goog.inherits(sre.SpeechRuleFunctions.ContextFunctions,sre.SpeechRuleFunctions.Store_),sre.SpeechRuleFunctions.Store_.prototype.checkCustomFunctionSyntax_=function(e){return!!e.match(new RegExp("^"+this.prefix_))||(console.error("FunctionError: Invalid function name. Expected prefix "+this.prefix_),!1)},sre.SpeechRuleContext=function(){this.customQueries=new sre.SpeechRuleFunctions.CustomQueries,this.customStrings=new sre.SpeechRuleFunctions.CustomStrings,this.contextFunctions=new sre.SpeechRuleFunctions.ContextFunctions},sre.SpeechRuleContext.prototype.applyCustomQuery=function(e,t){return(t=this.customQueries.lookup(t))?t(e):null},sre.SpeechRuleContext.prototype.applySelector=function(e,t){return this.applyCustomQuery(e,t)||sre.XpathUtil.evalXPath(t,e)},sre.SpeechRuleContext.prototype.applyQuery=function(e,t){return e=this.applySelector(e,t),0<e.length?e[0]:null},sre.SpeechRuleContext.prototype.applyConstraint=function(e,t){return!!this.applyQuery(e,t)||sre.XpathUtil.evaluateBoolean(t,e)},sre.SpeechRuleContext.prototype.constructString=function(e,t){if(!t)return"";if('"'==t.charAt(0))return t.slice(1,-1);var n=this.customStrings.lookup(t);return n?n(e):sre.XpathUtil.evaluateString(t,e)},sre.SpeechRuleContext.prototype.parse=function(e){for(var t,n=0;t=e[n];n++)({CQF:this.customQueries,CSF:this.customStrings,CTXF:this.contextFunctions}[t[0]].add(t[1],t[2]))},sre.SpeechRuleEvaluator=function(){},sre.SpeechRuleEvaluator.prototype.evaluateDefault=goog.abstractMethod,sre.SpeechRuleStore=function(){},sre.SpeechRuleStore.prototype.addRule=goog.abstractMethod,sre.SpeechRuleStore.prototype.deleteRule=goog.abstractMethod,sre.SpeechRuleStore.prototype.findRule=goog.abstractMethod,sre.SpeechRuleStore.prototype.findAllRules=goog.abstractMethod,sre.SpeechRuleStore.prototype.lookupRule=goog.abstractMethod,sre.SpeechRuleStore.prototype.defineRule=goog.abstractMethod,sre.TrieNode=function(){},sre.TrieNode.prototype.getConstraint=function(){},sre.TrieNode.prototype.getKind=function(){},sre.TrieNode.prototype.applyTest=function(){},sre.TrieNode.prototype.addChild=function(){},sre.TrieNode.prototype.getChild=function(){},sre.TrieNode.prototype.getChildren=function(){},sre.TrieNode.prototype.findChildren=function(){},sre.TrieNode.Kind={ROOT:"root",DYNAMIC:"dynamic",QUERY:"query",BOOLEAN:"boolean",STATIC:"static"},sre.AbstractTrieNode=function(e,t){this.constraint=e,this.test=t,this.children_={},this.kind=sre.TrieNode.Kind.ROOT},sre.AbstractTrieNode.prototype.getConstraint=function(){return this.constraint},sre.AbstractTrieNode.prototype.getKind=function(){return this.kind},sre.AbstractTrieNode.prototype.applyTest=function(e){return this.test(e)},sre.AbstractTrieNode.prototype.addChild=function(e){var t=e.getConstraint(),n=this.children_[t];return this.children_[t]=e,n},sre.AbstractTrieNode.prototype.getChild=function(e){return this.children_[e]},sre.AbstractTrieNode.prototype.getChildren=function(){var e,t=[];for(e in this.children_)t.push(this.children_[e]);return t},sre.AbstractTrieNode.prototype.findChildren=function(e){var t,n,s=[];for(n in this.children_)t=this.children_[n],t.applyTest(e)&&s.push(t);return s},sre.AbstractTrieNode.prototype.toString=function(){return this.constraint},sre.StaticTrieNode=function(e,t){sre.AbstractTrieNode.call(this,e,t),this.kind=sre.TrieNode.Kind.STATIC,this.rule_=null},goog.inherits(sre.StaticTrieNode,sre.AbstractTrieNode),sre.StaticTrieNode.prototype.getRule=function(){return this.rule_},sre.StaticTrieNode.prototype.setRule=function(e){this.rule_&&sre.Debugger.getInstance().output("Replacing rule "+this.rule_+" with "+e),this.rule_=e},sre.StaticTrieNode.prototype.toString=function(){return this.getRule()?this.constraint+`
==> `+this.getRule().action:this.constraint},sre.TrieNodeFactory={},sre.TrieNodeFactory.getNode=function(e,t,n){switch(e){case sre.TrieNode.Kind.ROOT:return new sre.RootTrieNode;case sre.TrieNode.Kind.DYNAMIC:return new sre.DynamicTrieNode(t);case sre.TrieNode.Kind.QUERY:return new sre.QueryTrieNode(t,n);case sre.TrieNode.Kind.BOOLEAN:return new sre.BooleanTrieNode(t,n);default:return null}},sre.RootTrieNode=function(){sre.AbstractTrieNode.call(this,"",function(){return!0}),this.kind=sre.TrieNode.Kind.ROOT},goog.inherits(sre.RootTrieNode,sre.AbstractTrieNode),sre.DynamicTrieNode=function(e){sre.AbstractTrieNode.call(this,e,function(t){return t===e}),this.kind=sre.TrieNode.Kind.DYNAMIC},goog.inherits(sre.DynamicTrieNode,sre.AbstractTrieNode),sre.TrieNodeFactory.constraintTest_=function(e){if(e.match(/^self::\*$/))return function(){return!0};if(e.match(/^self::\w+$/)){var t,n,s,o=e.slice(6).toUpperCase();return function(e){return e.tagName&&sre.DomUtil.tagName(e)===o}}return e.match(/^self::\w+:\w+$/)?(e=e.split(":"),s=sre.XpathUtil.resolveNameSpace(e[2]),s?(o=e[3].toUpperCase(),function(e){return e.localName&&e.localName.toUpperCase()===o&&e.namespaceURI===s}):null):e.match(/^@\w+$/)?(t=e.slice(1),function(e){return e.hasAttribute&&e.hasAttribute(t)}):e.match(/^@\w+="[\w\d ]+"$/)?(e=e.split("="),t=e[0].slice(1),n=e[1].slice(1,-1),function(e){return e.hasAttribute&&e.hasAttribute(t)&&e.getAttribute(t)===n}):e.match(/^@\w+!="[\w\d ]+"$/)?(e=e.split("!="),t=e[0].slice(1),n=e[1].slice(1,-1),function(e){return!e.hasAttribute||!e.hasAttribute(t)||e.getAttribute(t)!==n}):e.match(/^contains\(\s*@grammar\s*,\s*"[\w\d ]+"\s*\)$/)?(e=e.split('"'),n=e[1],function(){return sre.Grammar.getInstance().getParameter(n)}):e.match(/^not\(\s*contains\(\s*@grammar\s*,\s*"[\w\d ]+"\s*\)\s*\)$/)?(e=e.split('"'),n=e[1],function(){return!sre.Grammar.getInstance().getParameter(n)}):null},sre.QueryTrieNode=function(e,t){this.context_=t,sre.StaticTrieNode.call(this,e,sre.TrieNodeFactory.constraintTest_(e)),this.kind=sre.TrieNode.Kind.QUERY},goog.inherits(sre.QueryTrieNode,sre.StaticTrieNode),sre.QueryTrieNode.prototype.applyTest=function(e){return this.test?this.test(e):this.context_.applyQuery(e,this.constraint)===e},sre.BooleanTrieNode=function(e,t){this.context_=t,sre.StaticTrieNode.call(this,e,sre.TrieNodeFactory.constraintTest_(e)),this.kind=sre.TrieNode.Kind.BOOLEAN},goog.inherits(sre.BooleanTrieNode,sre.StaticTrieNode),sre.BooleanTrieNode.prototype.applyTest=function(e){return this.test?this.test(e):this.context_.applyConstraint(e,this.constraint)},sre.Trie=function(e){this.store=e,this.root=sre.TrieNodeFactory.getNode(sre.TrieNode.Kind.ROOT,"",this.store.context)},sre.Trie.prototype.addRule=function(e){for(var t=this.root,o=e.context,s=e.dynamicCstr.getValues(),n=0,i=s.length;n<i;n++)t=this.addNode_(t,s[n],sre.TrieNode.Kind.DYNAMIC,o);t=this.addNode_(t,e.precondition.query,sre.TrieNode.Kind.QUERY,o),s=e.precondition.constraints,n=0;for(i=s.length;n<i;n++)t=this.addNode_(t,s[n],sre.TrieNode.Kind.BOOLEAN,o);t.setRule(e)},sre.Trie.prototype.addNode_=function(e,t,n,s){var o=e.getChild(t);return o||(o=sre.TrieNodeFactory.getNode(n,t,s),e.addChild(o)),o},sre.Trie.prototype.lookupRules=function(e,t){for(var n,o,i,s=[this.root],a=[];t.length;){for(i=t.shift(),o=[];s.length;)n=s.shift(),n=n.getChildren(),n.forEach(function(e){e.getKind()===sre.TrieNode.Kind.DYNAMIC&&-1===i.indexOf(e.getConstraint())||o.push(e)});s=o.slice()}for(;s.length;)n=s.shift(),n.getRule&&(t=n.getRule())&&a.push(t),n=n.findChildren(e),s=s.concat(n);return a},sre.Trie.prototype.hasSubtrie=function(e){for(var t=this.root,n=0,s=e.length;n<s;n++)if(t=t.getChild(e[n]),!t)return!1;return!0},sre.Trie.prototype.toString=function(){return sre.Trie.printWithDepth_(this.root,0,"")},sre.Trie.prototype.collectRules=function(){return sre.Trie.collectRules_(this.root)},sre.Trie.prototype.order=function(){return sre.Trie.order_(this.root)},sre.Trie.printWithDepth_=function(e,t,n){var o,s=Array(t+2).join(t)+": ";for(n+=s+e.toString()+`
`,e=e.getChildren(),s=0;o=e[s];s++)n=sre.Trie.printWithDepth_(o,t+1,n);return n},sre.Trie.order_=function(e){if(e=e.getChildren(),!e.length)return 0;var t=Math.max.apply(null,e.map(sre.Trie.order_));return Math.max(e.length,t)},sre.Trie.collectRules_=function(e){var t,n,s=[];for(e=[e];e.length;)t=e.shift(),(t.getKind()===sre.TrieNode.Kind.QUERY||t.getKind()===sre.TrieNode.Kind.BOOLEAN)&&(n=t.getRule(),n&&s.unshift(n)),e=e.concat(t.getChildren());return s},sre.Trie.prototype.enumerate=function(e){return this.enumerate_(this.root,e)},sre.Trie.prototype.enumerate_=function(e,t){t=t||{},e=e.getChildren();for(var n,s=0;n=e[s];s++)n.kind===sre.TrieNode.Kind.DYNAMIC&&(t[n.getConstraint()]=this.enumerate_(n,t[n.getConstraint()]));return t},sre.BaseRuleStore=function(){this.context=new sre.SpeechRuleContext,this.customQueries=this.context.customQueries,this.customStrings=this.context.customStrings,this.contextFunctions=this.context.contextFunctions,this.speechRules_=[],this.trie=new sre.Trie(this),this.parseOrder=sre.DynamicCstr.DEFAULT_ORDER,this.parser=new sre.DynamicCstr.Parser(this.parseOrder),this.locale=sre.DynamicCstr.DEFAULT_VALUES[sre.DynamicCstr.Axis.LOCALE],this.modality=sre.DynamicCstr.DEFAULT_VALUES[sre.DynamicCstr.Axis.MODALITY],this.domain=null,this.initialized=!1,this.parseMethods={Rule:goog.bind(this.defineRule,this)}},sre.BaseRuleStore.prototype.lookupRule=function(e,t){return!e||e.nodeType!=sre.DomUtil.NodeType.ELEMENT_NODE&&e.nodeType!=sre.DomUtil.NodeType.TEXT_NODE?null:(e=this.trie.lookupRules(e,t.allProperties()),0<e.length?this.pickMostConstraint_(t,e):null)},sre.BaseRuleStore.prototype.defineRule=function(e,t,n,s){try{var i=sre.SpeechRule.Action.fromString(n),a=Array.prototype.slice.call(arguments,4),r=new sre.SpeechRule.Precondition(s,a),c=this.parseCstr(t),o=new sre.SpeechRule(e,c,r,i)}catch(e){if("RuleError"==e.name)return console.error("Rule Error ",s,"("+t+"):",e.message),null;throw e}return this.addRule(o),o},sre.BaseRuleStore.prototype.addRule=function(e){e.context=this.context,this.trie.addRule(e),this.speechRules_.unshift(e)},sre.BaseRuleStore.prototype.deleteRule=function(e){e=this.speechRules_.indexOf(e),-1!=e&&this.speechRules_.splice(e,1)},sre.BaseRuleStore.prototype.findRule=function(e){for(var t,n=0;t=this.speechRules_[n];n++)if(e(t))return t;return null},sre.BaseRuleStore.prototype.findAllRules=function(e){return this.speechRules_.filter(e)},sre.BaseRuleStore.prototype.evaluateDefault=function(e){return[sre.AuditoryDescription.create({text:e.textContent})]},sre.BaseRuleStore.prototype.debugSpeechRule=function(e,t){var n=e.precondition,s=e.context.applyQuery(t,n.query);sre.Debugger.getInstance().output(n.query,s&&s.toString()),n.constraints.forEach(goog.bind(function(n){sre.Debugger.getInstance().output(n,e.context.applyConstraint(t,n))},this))},sre.BaseRuleStore.prototype.initialize=goog.abstractMethod,sre.BaseRuleStore.prototype.removeDuplicates=function(e){for(var t,n=this.speechRules_.length-1;t=this.speechRules_[n];n--)t!=e&&e.dynamicCstr.equal(t.dynamicCstr)&&sre.BaseRuleStore.comparePreconditions_(t,e)&&this.speechRules_.splice(n,1)},sre.BaseRuleStore.strongQuery_=function(e,t){e=e.precondition.query,t=t.precondition.query;var n=e.match(/^self::\*\[@[\w-]+\]$/),s=t.match(/^self::\*\[@[\w-]+\]$/);return n&&s?0:n?(t=t.match(/^self::[\w-]+\[@[\w-]+\]$/))?1:-1:s?(e=e.match(/^self::[\w-]+\[@[\w-]+\]$/))?-1:1:(e=e.match(/^self::[\w-]+\[@[\w-]+\]$/),t=t.match(/^self::[\w-]+\[@[\w-]+\]$/),e&&t?0:e?-1:t?1:0)},sre.BaseRuleStore.prototype.pickMostConstraint_=function(e,t){var n=sre.Engine.getInstance().comparator;return t.sort(function(e,t){return n.compare(e.dynamicCstr,t.dynamicCstr)||sre.BaseRuleStore.strongQuery_(e,t)||t.precondition.constraints.length-e.precondition.constraints.length}),sre.Debugger.getInstance().generateOutput(goog.bind(function(){return t.map(function(e){return e.name+"("+e.dynamicCstr.toString()+")"})},this)),t[0]},sre.BaseRuleStore.compareStaticConstraints_=function(e,t){if(e.length!=t.length)return!1;for(var n,s=0;n=e[s];s++)if(-1==t.indexOf(n))return!1;return!0},sre.BaseRuleStore.comparePreconditions_=function(e,t){return e=e.precondition,t=t.precondition,e.query==t.query&&sre.BaseRuleStore.compareStaticConstraints_(e.constraints,t.constraints)},sre.BaseRuleStore.prototype.getSpeechRules=function(){return this.speechRules_},sre.BaseRuleStore.prototype.setSpeechRules=function(e){this.speechRules_=e},sre.BaseRuleStore.prototype.parseCstr=function(e){return this.parser.parse(this.locale+"."+this.modality+(this.domain?"."+this.domain:"")+"."+e)},sre.BaseRuleStore.prototype.parse=function(e){this.modality=e.modality||this.modality,this.locale=e.locale||this.locale,this.domain=e.domain||this.domain,this.context.parse(e.functions||[]),this.parseRules(e.rules||[])},sre.BaseRuleStore.prototype.parseRules=function(e){for(t=0;n=e[t];t++){var t,n,s=n[0],o=this.parseMethods[s];s&&o&&o.apply(this,n.slice(1))}},sre.MathStore=function(){sre.BaseRuleStore.call(this),this.initializer=[],this.parseMethods.Alias=goog.bind(this.defineRuleAlias,this),this.parseMethods.Aliases=goog.bind(this.defineRulesAlias,this),this.parseMethods.UniqueAlias=goog.bind(this.defineUniqueRuleAlias,this),this.parseMethods.SpecializedRule=goog.bind(this.defineSpecialisedRule,this)},goog.inherits(sre.MathStore,sre.BaseRuleStore),sre.MathStore.prototype.initialize=function(){if(!this.initialized){for(var e,t=0;e=this.initializer[t];t++)e(this);this.setSpeechRules(this.trie.collectRules()),this.initialized=!0}},sre.MathStore.prototype.defineUniqueRuleAlias=function(e,t,n){var o=this.parseCstr(t),s=this.findRule(goog.bind(function(t){return t.name==e&&o.equal(t.dynamicCstr)},this));if(!s)throw new sre.SpeechRule.OutputError("Rule named "+e+" with style "+t+" does not exist.");this.addAlias_(s,n,Array.prototype.slice.call(arguments,3))},sre.MathStore.prototype.defineRuleAlias=function(e,t){var n=this.findRule(function(t){return t.name==e});if(!n)throw new sre.SpeechRule.OutputError("Rule with named "+e+" does not exist.");this.addAlias_(n,t,Array.prototype.slice.call(arguments,2))},sre.MathStore.prototype.defineRulesAlias=function(e,t){if(n=this.findAllRules(function(t){return t.name==e}),0==n.length)throw new sre.SpeechRule.OutputError("Rule with name "+e+" does not exist.");var n,o=Array.prototype.slice.call(arguments,2),s=[];n.forEach(goog.bind(function(e){a:{n=e.dynamicCstr.toString();for(var n,i,a=e.action.toString(),r=0;i=s[r];r++)if(i.action===a&&i.cstr===n){n=!1;break a}s.push({cstr:n,action:a}),n=!0}n&&this.addAlias_(e,t,o)},this))},sre.MathStore.prototype.addAlias_=function(e,t,n){t=new sre.SpeechRule.Precondition(t,n),t=new sre.SpeechRule(e.name,e.dynamicCstr,t,e.action),t.name=e.name,this.addRule(t)},sre.MathStore.prototype.defineSpecialisedRule=function(e,t,n,s){var i=this.parseCstr(t),o=this.findRule(goog.bind(function(t){return t.name==e&&i.equal(t.dynamicCstr)},this));if(!o)throw new sre.SpeechRule.OutputError("Rule named "+e+" with style "+t+" does not exist.");t=this.parseCstr(n),s=s?sre.SpeechRule.Action.fromString(s):o.action,o=new sre.SpeechRule(o.name,t,o.precondition,s),this.addRule(o)},sre.MathStore.prototype.evaluateDefault=function(e){return this.evaluateString_(e.textContent)},sre.MathStore.prototype.evaluateString_=function(e){var t,n,o,i,s=[];if(e.match(/^\s+$/))return s;if(t=this.matchNumber_(e),t&&t.length===e.length)return s.push(this.evaluate_(t.number)),s;e=sre.BaseUtil.removeEmpty(e.replace(/\s/g," ").split(" "));for(i=0;t=e[i];i++)if(1==t.length)s.push(this.evaluate_(t));else if(t.match(new RegExp("^["+sre.Messages.REGEXP.TEXT+"]+$")))s.push(this.evaluate_(t));else for(n=t;n;)t=this.matchNumber_(n),o=n.match(new RegExp("^["+sre.Messages.REGEXP.TEXT+"]+")),t?(s.push(this.evaluate_(t.number)),n=n.substring(t.length)):o?(s.push(this.evaluate_(o[0])),n=n.substring(o[0].length)):(t=n[0].charCodeAt(0),55296<=t&&56319>=t&&1<n.length&&!isNaN(n.charCodeAt(1))?(s.push(this.evaluate_(n.slice(0,2))),n=n.substring(2)):(s.push(this.evaluate_(n[0])),n=n.substring(1)));return s},sre.MathStore.prototype.matchNumber_=function(e){var s,t=e.match(new RegExp("^"+sre.Messages.REGEXP.NUMBER)),n=e.match(new RegExp("^"+sre.Locale.en.REGEXP.NUMBER));return!t&&!n?null:(s=n&&n[0]===e,t&&t[0]===e||!s?{number:t[0],length:t[0].length}:{number:n[0].replace(new RegExp(sre.Locale.en.REGEXP.DIGIT_GROUP,"g"),"X").replace(new RegExp(sre.Locale.en.REGEXP.DECIMAL_MARK,"g"),sre.Messages.REGEXP.DECIMAL_MARK).replace(/X/g,sre.Messages.REGEXP.DIGIT_GROUP.replace(/\\/g,"")),length:n[0].length})},sre.MathStore.prototype.evaluate_=function(e){return sre.AuditoryDescription.create({text:e},{adjust:!0,translate:!0})},sre.MathStore.prototype.parse=function(e){sre.MathStore.superClass_.parse.call(this,e),this.initializer=e.initialize||[]},sre.BrailleStore=function(){sre.MathStore.call(this),this.modality="braille"},goog.inherits(sre.BrailleStore,sre.MathStore),sre.BrailleStore.prototype.evaluateDefault=function(e){if(e=e.textContent.slice(0),t=[],e.match(/^\s+$/))return t;for(;e;){var t,n=e[0],s=n.charCodeAt(0);55296<=s&&56319>=s&&1<e.length&&!isNaN(e.charCodeAt(1))?(t.push(sre.AuditoryDescription.create({text:e.slice(0,2)},{adjust:!0,translate:!0})),e=e.substring(2)):(t.push(sre.AuditoryDescription.create({text:n},{adjust:!0,translate:!0})),e=e.substring(1))}return t},sre.ClearspeakPreferences=function(e,t){sre.DynamicCstr.call(this,e),this.preference=t},goog.inherits(sre.ClearspeakPreferences,sre.DynamicCstr),sre.ClearspeakPreferences.prototype.equal=function(e){if(!sre.ClearspeakPreferences.superClass_.equal.call(this,e))return!1;var t,n,s=Object.keys(this.preference);if(e=e.preference,s.length!==Object.keys(e).length)return!1;for(t=0;n=s[t];t++)if(this.preference[n]!==e[n])return!1;return!0},sre.ClearspeakPreferences.AUTO="Auto",sre.ClearspeakPreferences.PREFERENCES=new sre.DynamicProperties({AbsoluteValue:["Auto","AbsEnd","Cardinality","Determinant"],Bar:["Auto","Conjugate"],Caps:["Auto","SayCaps"],CombinationPermutation:["Auto","ChoosePermute"],Currency:["Auto","Position","Prefix"],Ellipses:["Auto","AndSoOn"],Exponent:["Auto","AfterPower","Ordinal","OrdinalPower","Exponent"],Fraction:"Auto EndFrac FracOver General GeneralEndFrac Ordinal Over OverEndFrac Per".split(" "),Functions:["Auto","None","Reciprocal"],ImpliedTimes:["Auto","MoreImpliedTimes","None"],Log:["Auto","LnAsNaturalLog"],Matrix:"Auto Combinatoric EndMatrix EndVector SilentColNum SpeakColNum Vector".split(" "),MultiLineLabel:"Auto Case Constraint Equation Line None Row Step".split(" "),MultiLineOverview:["Auto","None"],MultiLinePausesBetweenColumns:["Auto","Long","Short"],MultsymbolDot:["Auto","Dot"],MultsymbolX:["Auto","By","Cross"],Paren:"Auto CoordPoint Interval Silent Speak SpeakNestingLevel".split(" "),Prime:["Auto","Angle","Length"],Roots:["Auto","PosNegSqRoot","PosNegSqRootEnd","RootEnd"],SetMemberSymbol:["Auto","Belongs","Element","Member"],Sets:["Auto","SilentBracket","woAll"],TriangleSymbol:["Auto","Delta"],Trig:["Auto","ArcTrig","TrigInverse","Reciprocal"],VerticalLine:["Auto","Divides","Given","SuchThat"]}),sre.ClearspeakPreferences.comparator=function(){return new sre.ClearspeakPreferences.Comparator(sre.Engine.getInstance().dynamicCstr,sre.DynamicProperties.create([sre.DynamicCstr.DEFAULT_VALUES[sre.DynamicCstr.Axis.LOCALE]],[sre.DynamicCstr.DEFAULT_VALUES[sre.DynamicCstr.Axis.MODALITY]],[sre.DynamicCstr.DEFAULT_VALUES[sre.DynamicCstr.Axis.DOMAIN]],[sre.DynamicCstr.DEFAULT_VALUES[sre.DynamicCstr.Axis.STYLE]]))},sre.ClearspeakPreferences.Comparator=function(e,t){sre.DynamicCstr.DefaultComparator.call(this,e,t),this.preference=e.preference||{}},goog.inherits(sre.ClearspeakPreferences.Comparator,sre.DynamicCstr.DefaultComparator),sre.ClearspeakPreferences.Comparator.prototype.match=function(e){if(!sre.ClearspeakPreferences.Comparator.superClass_.match.call(this,e))return!1;if(!e.preference)return!0;for(var t,s=Object.keys(e.preference),n=0;t=s[n];n++)if(this.preference[t]!==e.preference[t])return!1;return!0},sre.ClearspeakPreferences.Comparator.prototype.compare=function(e,t){var n=sre.ClearspeakPreferences.Comparator.superClass_.compare.call(this,e,t);return 0!==n?n:!e.preference&&t.preference?1:e.preference&&!t.preference?-1:!e.preference&&!t.preference?0:(e=Object.keys(e.preference).length,t=Object.keys(t.preference).length,e>t?-1:e<t?1:0)},sre.ClearspeakPreferences.Parser=function(){sre.DynamicCstr.Parser.call(this,[sre.DynamicCstr.Axis.LOCALE,sre.DynamicCstr.Axis.MODALITY,sre.DynamicCstr.Axis.DOMAIN,sre.DynamicCstr.Axis.STYLE])},goog.inherits(sre.ClearspeakPreferences.Parser,sre.DynamicCstr.Parser),sre.ClearspeakPreferences.Parser.prototype.parse=function(e){var t,n=sre.ClearspeakPreferences.Parser.superClass_.parse.call(this,e);return e=n.getValue(sre.DynamicCstr.Axis.STYLE),n=n.getValue(sre.DynamicCstr.Axis.LOCALE),t={},e!==sre.DynamicCstr.DEFAULT_VALUE&&(t=this.fromPreference(e),e=this.toPreference(t)),new sre.ClearspeakPreferences({locale:n,modality:sre.DynamicCstr.DEFAULT_VALUES[sre.DynamicCstr.Axis.MODALITY],domain:"clearspeak",style:e},t)},sre.ClearspeakPreferences.Parser.prototype.fromPreference=function(e){return sre.ClearspeakPreferences.fromPreference(e)},sre.ClearspeakPreferences.fromPreference=function(e){e=e.split(":");for(var t,n,s={},o=sre.ClearspeakPreferences.PREFERENCES.getProperties(),a=Object.keys(o),i=0;t=e[i];i++)t=t.split("_"),-1!==a.indexOf(t[0])&&(n=t[1],n&&n!==sre.ClearspeakPreferences.AUTO&&-1!==o[t[0]].indexOf(n)&&(s[t[0]]=t[1]));return s},sre.ClearspeakPreferences.Parser.prototype.toPreference=function(e){return sre.ClearspeakPreferences.toPreference(e)},sre.ClearspeakPreferences.toPreference=function(e){for(var n=Object.keys(e),s=[],t=0;t<n.length;t++)s.push(n[t]+"_"+e[n[t]]);return s.length?s.join(":"):sre.DynamicCstr.DEFAULT_VALUE},sre.ClearspeakPreferences.LOCALE_PREFERENCES=null,sre.ClearspeakPreferences.getLocalePreferences=function(e){return sre.ClearspeakPreferences.LOCALE_PREFERENCES||(e=e||sre.MathCompoundStore.getInstance().enumerate(sre.SpeechRuleEngine.getInstance().enumerate()),sre.ClearspeakPreferences.LOCALE_PREFERENCES=sre.ClearspeakPreferences.getLocalePreferences_(e)),sre.ClearspeakPreferences.LOCALE_PREFERENCES},sre.ClearspeakPreferences.getLocalePreferences_=function(e){i={};for(o in e)if(e[o].speech&&e[o].speech.clearspeak){var t,n,s,o,i,a,r=Object.keys(e[o].speech.clearspeak),c=i[o]={};for(n in sre.ClearspeakPreferences.PREFERENCES.getProperties()){if(s=sre.ClearspeakPreferences.PREFERENCES.getProperties()[n],a=[n+"_Auto"],s){s=$jscomp.makeIterator(s);for(t=s.next();!t.done;t=s.next())t=t.value,-1!==r.indexOf(n+"_"+t)&&a.push(n+"_"+t)}c[n]=a}}return i},sre.ClearspeakPreferences.getSpeechExplorer=function(e){return(e=e.attached)&&e.length?e.find(function(e){return e.speechGenerator&&"speech"===e.speechGenerator.getOptions().modality}):null},sre.ClearspeakPreferences.smartPreferences=function(e,t){if(t=sre.ClearspeakPreferences.getLocalePreferences()[t],!t)return[];if(e=sre.ClearspeakPreferences.getSpeechExplorer(e),!e)return[{type:"radio",content:"Standard",id:"clearspeak-default",variable:"speechRules"}];e=sre.ClearspeakPreferences.relevantPreferences(e.walker.getFocus().getSemanticPrimary());var n=sre.Engine.DOMAIN_TO_STYLES.clearspeak;return[{type:"radio",content:"No Preferences",id:"clearspeak-default",variable:"speechRules"},{type:"radio",content:"Current Preferences",id:"clearspeak-"+n,variable:"speechRules"},{type:"rule"},{type:"label",content:"Preferences for "+e},{type:"rule"}].concat(t[e].map(function(e){return e=e.split("_"),{type:"radio",content:e[1],id:"clearspeak-"+sre.ClearspeakPreferences.addPreference(n,e[0],e[1]),variable:"speechRules"}}))},sre.ClearspeakPreferences.relevantPreferences=function(e){var t=sre.ClearspeakPreferences.SEMANTIC_MAPPING_[e.type];return t?t[e.role]||t[""]||"ImpliedTimes":"ImpliedTimes"},sre.ClearspeakPreferences.REVERSE_MAPPING_=[["AbsoluteValue",sre.SemanticAttr.Type.FENCED,sre.SemanticAttr.Role.NEUTRAL],["Bar",sre.SemanticAttr.Type.OVERSCORE,sre.SemanticAttr.Role.OVERACCENT],["Caps",sre.SemanticAttr.Type.IDENTIFIER,sre.SemanticAttr.Role.LATINLETTER],["CombinationPermutation",sre.SemanticAttr.Type.APPL,sre.SemanticAttr.Role.UNKNOWN],["Ellipses",sre.SemanticAttr.Type.PUNCTUATION,sre.SemanticAttr.Role.ELLIPSIS],["Exponent",sre.SemanticAttr.Type.SUPERSCRIPT,""],["Fraction",sre.SemanticAttr.Type.FRACTION,""],["Functions",sre.SemanticAttr.Type.APPL,sre.SemanticAttr.Role.SIMPLEFUNC],["ImpliedTimes",sre.SemanticAttr.Type.OPERATOR,sre.SemanticAttr.Role.IMPLICIT],["Log",sre.SemanticAttr.Type.APPL,sre.SemanticAttr.Role.PREFIXFUNC],["Matrix",sre.SemanticAttr.Type.MATRIX,""],["Matrix",sre.SemanticAttr.Type.VECTOR,""],["MultiLineLabel",sre.SemanticAttr.Type.MULTILINE,sre.SemanticAttr.Role.LABEL],["MultiLineOverview",sre.SemanticAttr.Type.MULTILINE,sre.SemanticAttr.Role.TABLE],["MultiLinePausesBetweenColumns",sre.SemanticAttr.Type.MULTILINE,sre.SemanticAttr.Role.TABLE],["MultiLineLabel",sre.SemanticAttr.Type.TABLE,sre.SemanticAttr.Role.LABEL],["MultiLineOverview",sre.SemanticAttr.Type.TABLE,sre.SemanticAttr.Role.TABLE],["MultiLinePausesBetweenColumns",sre.SemanticAttr.Type.TABLE,sre.SemanticAttr.Role.TABLE],["MultiLineLabel",sre.SemanticAttr.Type.CASES,sre.SemanticAttr.Role.LABEL],["MultiLineOverview",sre.SemanticAttr.Type.CASES,sre.SemanticAttr.Role.TABLE],["MultiLinePausesBetweenColumns",sre.SemanticAttr.Type.CASES,sre.SemanticAttr.Role.TABLE],["MultsymbolDot",sre.SemanticAttr.Type.OPERATOR,sre.SemanticAttr.Role.MULTIPLICATION],["MultsymbolX",sre.SemanticAttr.Type.OPERATOR,sre.SemanticAttr.Role.MULTIPLICATION],["Paren",sre.SemanticAttr.Type.FENCED,sre.SemanticAttr.Role.LEFTRIGHT],["Prime",sre.SemanticAttr.Type.SUPERSCRIPT,sre.SemanticAttr.Role.PRIME],["Roots",sre.SemanticAttr.Type.ROOT,""],["Roots",sre.SemanticAttr.Type.SQRT,""],["SetMemberSymbol",sre.SemanticAttr.Type.RELATION,sre.SemanticAttr.Role.ELEMENT],["Sets",sre.SemanticAttr.Type.FENCED,sre.SemanticAttr.Role.SETEXT],["TriangleSymbol",sre.SemanticAttr.Type.IDENTIFIER,sre.SemanticAttr.Role.GREEKLETTER],["Trig",sre.SemanticAttr.Type.APPL,sre.SemanticAttr.Role.PREFIXFUNC],["VerticalLine",sre.SemanticAttr.Type.PUNCTUATED,sre.SemanticAttr.Role.VBAR]],sre.ClearspeakPreferences.SEMANTIC_MAPPING_=function(){for(var e,t,s,n={},o=0;e=sre.ClearspeakPreferences.REVERSE_MAPPING_[o];o++)s=e[0],t=n[e[1]],t||(t={},n[e[1]]=t),t[e[2]]=s;return n}(),sre.ClearspeakPreferences.findPreference=function(e,t){return"default"===e?sre.ClearspeakPreferences.AUTO:sre.ClearspeakPreferences.fromPreference(e)[t]||sre.ClearspeakPreferences.AUTO},sre.ClearspeakPreferences.addPreference=function(e,t,n){return"default"===e?t+"_"+n:(e=sre.ClearspeakPreferences.fromPreference(e),e[t]=n,sre.ClearspeakPreferences.toPreference(e))},sre.Engine.getInstance().comparators.clearspeak=sre.ClearspeakPreferences.comparator,sre.Engine.getInstance().parsers.clearspeak=new sre.ClearspeakPreferences.Parser,sre.AlphabetGenerator={},sre.AlphabetGenerator.Font={BOLD:"bold",BOLDFRAKTUR:"bold-fraktur",BOLDITALIC:"bold-italic",BOLDSCRIPT:"bold-script",DOUBLESTRUCK:"double-struck",FULLWIDTH:"fullwidth",FRAKTUR:"fraktur",ITALIC:"italic",MONOSPACE:"monospace",NORMAL:"normal",SCRIPT:"script",SANSSERIF:"sans-serif",SANSSERIFITALIC:"sans-serif-italic",SANSSERIFBOLD:"sans-serif-bold",SANSSERIFBOLDITALIC:"sans-serif-bold-italic"},sre.AlphabetGenerator.Embellish={SUPER:"super",SUB:"sub",CIRCLED:"circled",PARENTHESIZED:"parenthesized",PERIOD:"period",NEGATIVECIRCLED:"negative-circled",DOUBLECIRCLED:"double-circled",CIRCLEDSANSSERIF:"circled-sans-serif",NEGATIVECIRCLEDSANSSERIF:"negative-circled-sans-serif",COMMA:"comma",SQUARED:"squared",NEGATIVESQUARED:"negative-squared"},sre.AlphabetGenerator.Base={LATINCAP:"latinCap",LATINSMALL:"latinSmall",GREEKCAP:"greekCap",GREEKSMALL:"greekSmall",DIGIT:"digit"},sre.AlphabetGenerator.Domains_={small:["default"],capital:["default"],digit:["default"]},sre.AlphabetGenerator.makeDomains_=function(){var e=sre.Messages.ALPHABET_PREFIXES,t=sre.Messages.ALPHABET_TRANSFORMERS,n=function(e,t){var n={};return Object.keys(e).forEach(function(e){n[e]=!0}),Object.keys(t).forEach(function(e){n[e]=!0}),Object.keys(n)};sre.AlphabetGenerator.Domains_.small=n(e.smallPrefix,t.letter),sre.AlphabetGenerator.Domains_.capital=n(e.capPrefix,t.letter),sre.AlphabetGenerator.Domains_.digit=n(e.digitPrefix,t.digit)},sre.AlphabetGenerator.generate=function(e,t){i=sre.Engine.getInstance().locale,sre.Engine.getInstance().locale=e,sre.L10n.setLocale(),t.addSymbolRules({locale:e}),sre.AlphabetGenerator.makeDomains_(),e=sre.AlphabetGenerator.INTERVALS;for(s=0;n=e[s];s++){var n,s,i,o=sre.AlphabetGenerator.makeInterval(n.interval,n.subst),a=o.map(function(e){return sre.SemanticUtil.numberToUnicode(parseInt(e,16))});"offset"in n?sre.AlphabetGenerator.numberRules(t,o,a,n.font,n.category,n.offset||0):sre.AlphabetGenerator.alphabetRules(t,o,a,sre.Messages.ALPHABETS[n.base],n.font,n.category,!!n.capital)}sre.Engine.getInstance().locale=i,sre.L10n.setLocale()},sre.AlphabetGenerator.makeInterval=function(e,t){var n,s,o=parseInt(e[0],16);e=parseInt(e[1],16);for(s=[];o<=e;o++)n=o.toString(16).toUpperCase(),n=3<n.length?n:("000"+n).slice(-4),!1!==t[n]&&(n=t[n]||n,s.push(n));return s},sre.AlphabetGenerator.getFont=function(e){return e="normal"===e||"fullwidth"===e?"":sre.Messages.FONT[e]||sre.Messages.EMBELLISH[e]||"","string"==typeof e?{font:e,combiner:sre.Messages.ALPHABET_COMBINER}:{font:e[0],combiner:e[1]}},sre.AlphabetGenerator.alphabetRules=function(e,t,n,s,o,i,a){o=sre.AlphabetGenerator.getFont(o);for(var c,l,d,r=0;c=t[r],l=n[r],d=s[r];r++)sre.AlphabetGenerator.makeLetter(e,o.combiner,c,l,d,o.font,a?sre.Messages.ALPHABET_PREFIXES.capPrefix:sre.Messages.ALPHABET_PREFIXES.smallPrefix,i,sre.Messages.ALPHABET_TRANSFORMERS.letter,a?sre.AlphabetGenerator.Domains_.capital:sre.AlphabetGenerator.Domains_.small)},sre.AlphabetGenerator.numberRules=function(e,t,n,s,o,i){s=sre.AlphabetGenerator.getFont(s);for(var r,c,a=0;r=t[a],c=n[a];a++)sre.AlphabetGenerator.makeLetter(e,s.combiner,r,c,a+i,s.font,sre.Messages.ALPHABET_PREFIXES.digitPrefix,o,sre.Messages.ALPHABET_TRANSFORMERS.digit,sre.AlphabetGenerator.Domains_.digit)},sre.AlphabetGenerator.makeLetter=function(e,t,n,s,o,i,a,r,c,l){for(var d,u,h=0;d=l[h];h++)u=d in a?a[d]:a.default,e.defineRule(n.toString(),d,"default",r,s,t((d in c?c[d]:c.default)(o),i,u))},sre.AlphabetGenerator.INTERVALS=[{interval:["1D400","1D419"],base:sre.AlphabetGenerator.Base.LATINCAP,subst:{},capital:!0,category:"Lu",font:sre.AlphabetGenerator.Font.BOLD},{interval:["1D41A","1D433"],base:sre.AlphabetGenerator.Base.LATINSMALL,subst:{},capital:!1,category:"Ll",font:sre.AlphabetGenerator.Font.BOLD},{interval:["1D56C","1D585"],base:sre.AlphabetGenerator.Base.LATINCAP,subst:{},capital:!0,category:"Lu",font:sre.AlphabetGenerator.Font.BOLDFRAKTUR},{interval:["1D586","1D59F"],base:sre.AlphabetGenerator.Base.LATINSMALL,subst:{},capital:!1,category:"Ll",font:sre.AlphabetGenerator.Font.BOLDFRAKTUR},{interval:["1D468","1D481"],base:sre.AlphabetGenerator.Base.LATINCAP,subst:{},capital:!0,category:"Lu",font:sre.AlphabetGenerator.Font.BOLDITALIC},{interval:["1D482","1D49B"],base:sre.AlphabetGenerator.Base.LATINSMALL,subst:{},capital:!1,category:"Ll",font:sre.AlphabetGenerator.Font.BOLDITALIC},{interval:["1D4D0","1D4E9"],base:sre.AlphabetGenerator.Base.LATINCAP,subst:{},capital:!0,category:"Lu",font:sre.AlphabetGenerator.Font.BOLDSCRIPT},{interval:["1D4EA","1D503"],base:sre.AlphabetGenerator.Base.LATINSMALL,subst:{},capital:!1,category:"Ll",font:sre.AlphabetGenerator.Font.BOLDSCRIPT},{interval:["1D538","1D551"],base:sre.AlphabetGenerator.Base.LATINCAP,subst:{"1D53A":"2102","1D53F":"210D","1D545":"2115","1D547":"2119","1D548":"211A","1D549":"211D","1D551":"2124"},capital:!0,category:"Lu",font:sre.AlphabetGenerator.Font.DOUBLESTRUCK},{interval:["1D552","1D56B"],base:sre.AlphabetGenerator.Base.LATINSMALL,subst:{},capital:!1,category:"Ll",font:sre.AlphabetGenerator.Font.DOUBLESTRUCK},{interval:["1D504","1D51D"],base:sre.AlphabetGenerator.Base.LATINCAP,subst:{"1D506":"212D","1D50B":"210C","1D50C":"2111","1D515":"211C","1D51D":"2128"},capital:!0,category:"Lu",font:sre.AlphabetGenerator.Font.FRAKTUR},{interval:["1D51E","1D537"],base:sre.AlphabetGenerator.Base.LATINSMALL,subst:{},capital:!1,category:"Ll",font:sre.AlphabetGenerator.Font.FRAKTUR},{interval:["FF21","FF3A"],base:sre.AlphabetGenerator.Base.LATINCAP,subst:{},capital:!0,category:"Lu",font:sre.AlphabetGenerator.Font.FULLWIDTH},{interval:["FF41","FF5A"],base:sre.AlphabetGenerator.Base.LATINSMALL,subst:{},capital:!1,category:"Ll",font:sre.AlphabetGenerator.Font.FULLWIDTH},{interval:["1D434","1D44D"],base:sre.AlphabetGenerator.Base.LATINCAP,subst:{},capital:!0,category:"Lu",font:sre.AlphabetGenerator.Font.ITALIC},{interval:["1D44E","1D467"],base:sre.AlphabetGenerator.Base.LATINSMALL,subst:{"1D455":"210E"},capital:!1,category:"Ll",font:sre.AlphabetGenerator.Font.ITALIC},{interval:["1D670","1D689"],base:sre.AlphabetGenerator.Base.LATINCAP,subst:{},capital:!0,category:"Lu",font:sre.AlphabetGenerator.Font.MONOSPACE},{interval:["1D68A","1D6A3"],base:sre.AlphabetGenerator.Base.LATINSMALL,subst:{},capital:!1,category:"Ll",font:sre.AlphabetGenerator.Font.MONOSPACE},{interval:["0041","005A"],base:sre.AlphabetGenerator.Base.LATINCAP,subst:{},capital:!0,category:"Lu",font:sre.AlphabetGenerator.Font.NORMAL},{interval:["0061","007A"],base:sre.AlphabetGenerator.Base.LATINSMALL,subst:{},capital:!1,category:"Ll",font:sre.AlphabetGenerator.Font.NORMAL},{interval:["1D49C","1D4B5"],base:sre.AlphabetGenerator.Base.LATINCAP,subst:{"1D49D":"212C","1D4A0":"2130","1D4A1":"2131","1D4A3":"210B","1D4A4":"2110","1D4A7":"2112","1D4A8":"2133","1D4AD":"211B"},capital:!0,category:"Lu",font:sre.AlphabetGenerator.Font.SCRIPT},{interval:["1D4B6","1D4CF"],base:sre.AlphabetGenerator.Base.LATINSMALL,subst:{"1D4BA":"212F","1D4BC":"210A","1D4C4":"2134"},capital:!1,category:"Ll",font:sre.AlphabetGenerator.Font.SCRIPT},{interval:["1D5A0","1D5B9"],base:sre.AlphabetGenerator.Base.LATINCAP,subst:{},capital:!0,category:"Lu",font:sre.AlphabetGenerator.Font.SANSSERIF},{interval:["1D5BA","1D5D3"],base:sre.AlphabetGenerator.Base.LATINSMALL,subst:{},capital:!1,category:"Ll",font:sre.AlphabetGenerator.Font.SANSSERIF},{interval:["1D608","1D621"],base:sre.AlphabetGenerator.Base.LATINCAP,subst:{},capital:!0,category:"Lu",font:sre.AlphabetGenerator.Font.SANSSERIFITALIC},{interval:["1D622","1D63B"],base:sre.AlphabetGenerator.Base.LATINSMALL,subst:{},capital:!1,category:"Ll",font:sre.AlphabetGenerator.Font.SANSSERIFITALIC},{interval:["1D5D4","1D5ED"],base:sre.AlphabetGenerator.Base.LATINCAP,subst:{},capital:!0,category:"Lu",font:sre.AlphabetGenerator.Font.SANSSERIFBOLD},{interval:["1D5EE","1D607"],base:sre.AlphabetGenerator.Base.LATINSMALL,subst:{},capital:!1,category:"Ll",font:sre.AlphabetGenerator.Font.SANSSERIFBOLD},{interval:["1D63C","1D655"],base:sre.AlphabetGenerator.Base.LATINCAP,subst:{},capital:!0,category:"Lu",font:sre.AlphabetGenerator.Font.SANSSERIFBOLDITALIC},{interval:["1D656","1D66F"],base:sre.AlphabetGenerator.Base.LATINSMALL,subst:{},capital:!1,category:"Ll",font:sre.AlphabetGenerator.Font.SANSSERIFBOLDITALIC},{interval:["0391","03A9"],base:sre.AlphabetGenerator.Base.GREEKCAP,subst:{"03A2":"03F4"},capital:!0,category:"Lu",font:sre.AlphabetGenerator.Font.NORMAL},{interval:["03B0","03D0"],base:sre.AlphabetGenerator.Base.GREEKSMALL,subst:{"03B0":"2207","03CA":"2202","03CB":"03F5","03CC":"03D1","03CD":"03F0","03CE":"03D5","03CF":"03F1","03D0":"03D6"},capital:!1,category:"Ll",font:sre.AlphabetGenerator.Font.NORMAL},{interval:["1D6A8","1D6C0"],base:sre.AlphabetGenerator.Base.GREEKCAP,subst:{},capital:!0,category:"Lu",font:sre.AlphabetGenerator.Font.BOLD},{interval:["1D6C1","1D6E1"],base:sre.AlphabetGenerator.Base.GREEKSMALL,subst:{},capital:!1,category:"Ll",font:sre.AlphabetGenerator.Font.BOLD},{interval:["1D6E2","1D6FA"],base:sre.AlphabetGenerator.Base.GREEKCAP,subst:{},capital:!0,category:"Lu",font:sre.AlphabetGenerator.Font.ITALIC},{interval:["1D6FB","1D71B"],base:sre.AlphabetGenerator.Base.GREEKSMALL,subst:{},capital:!1,category:"Ll",font:sre.AlphabetGenerator.Font.ITALIC},{interval:["1D71C","1D734"],base:sre.AlphabetGenerator.Base.GREEKCAP,subst:{},capital:!0,category:"Lu",font:sre.AlphabetGenerator.Font.BOLDITALIC},{interval:["1D735","1D755"],base:sre.AlphabetGenerator.Base.GREEKSMALL,subst:{},capital:!1,category:"Ll",font:sre.AlphabetGenerator.Font.BOLDITALIC},{interval:["1D756","1D76E"],base:sre.AlphabetGenerator.Base.GREEKCAP,subst:{},capital:!0,category:"Lu",font:sre.AlphabetGenerator.Font.SANSSERIFBOLD},{interval:["1D76F","1D78F"],base:sre.AlphabetGenerator.Base.GREEKSMALL,subst:{},capital:!1,category:"Ll",font:sre.AlphabetGenerator.Font.SANSSERIFBOLD},{interval:["1D790","1D7A8"],base:sre.AlphabetGenerator.Base.GREEKCAP,subst:{},capital:!0,category:"Lu",font:sre.AlphabetGenerator.Font.SANSSERIFBOLDITALIC},{interval:["1D7A9","1D7C9"],base:sre.AlphabetGenerator.Base.GREEKSMALL,subst:{},capital:!1,category:"Ll",font:sre.AlphabetGenerator.Font.SANSSERIFBOLDITALIC},{interval:["0030","0039"],base:sre.AlphabetGenerator.Base.DIGIT,subst:{},offset:0,category:"Nd",font:sre.AlphabetGenerator.Font.NORMAL},{interval:["2070","2079"],base:sre.AlphabetGenerator.Base.DIGIT,subst:{2071:"00B9",2072:"00B2",2073:"00B3"},offset:0,category:"No",font:sre.AlphabetGenerator.Embellish.SUPER},{interval:["2080","2089"],base:sre.AlphabetGenerator.Base.DIGIT,subst:{},offset:0,category:"No",font:sre.AlphabetGenerator.Embellish.SUB},{interval:["245F","2473"],base:sre.AlphabetGenerator.Base.DIGIT,subst:{"245F":"24EA"},offset:0,category:"No",font:sre.AlphabetGenerator.Embellish.CIRCLED},{interval:["3251","325F"],base:sre.AlphabetGenerator.Base.DIGIT,subst:{},offset:21,category:"No",font:sre.AlphabetGenerator.Embellish.CIRCLED},{interval:["32B1","32BF"],base:sre.AlphabetGenerator.Base.DIGIT,subst:{},offset:36,category:"No",font:sre.AlphabetGenerator.Embellish.CIRCLED},{interval:["2474","2487"],base:sre.AlphabetGenerator.Base.DIGIT,subst:{},offset:1,category:"No",font:sre.AlphabetGenerator.Embellish.PARENTHESIZED},{interval:["2487","249B"],base:sre.AlphabetGenerator.Base.DIGIT,subst:{2487:"1F100"},offset:0,category:"No",font:sre.AlphabetGenerator.Embellish.PERIOD},{interval:["2775","277F"],base:sre.AlphabetGenerator.Base.DIGIT,subst:{2775:"24FF"},offset:0,category:"No",font:sre.AlphabetGenerator.Embellish.NEGATIVECIRCLED},{interval:["24EB","24F4"],base:sre.AlphabetGenerator.Base.DIGIT,subst:{},offset:11,category:"No",font:sre.AlphabetGenerator.Embellish.NEGATIVECIRCLED},{interval:["24F5","24FE"],base:sre.AlphabetGenerator.Base.DIGIT,subst:{},offset:1,category:"No",font:sre.AlphabetGenerator.Embellish.DOUBLECIRCLED},{interval:["277F","2789"],base:sre.AlphabetGenerator.Base.DIGIT,subst:{"277F":"1F10B"},offset:0,category:"No",font:sre.AlphabetGenerator.Embellish.CIRCLEDSANSSERIF},{interval:["2789","2793"],base:sre.AlphabetGenerator.Base.DIGIT,subst:{2789:"1F10C"},offset:0,category:"No",font:sre.AlphabetGenerator.Embellish.NEGATIVECIRCLEDSANSSERIF},{interval:["FF10","FF19"],base:sre.AlphabetGenerator.Base.DIGIT,subst:{},offset:0,category:"Nd",font:sre.AlphabetGenerator.Font.FULLWIDTH},{interval:["1D7CE","1D7D7"],base:sre.AlphabetGenerator.Base.DIGIT,subst:{},offset:0,category:"Nd",font:sre.AlphabetGenerator.Font.BOLD},{interval:["1D7D8","1D7E1"],base:sre.AlphabetGenerator.Base.DIGIT,subst:{},offset:0,category:"Nd",font:sre.AlphabetGenerator.Font.DOUBLESTRUCK},{interval:["1D7E2","1D7EB"],base:sre.AlphabetGenerator.Base.DIGIT,subst:{},offset:0,category:"Nd",font:sre.AlphabetGenerator.Font.SANSSERIF},{interval:["1D7EC","1D7F5"],base:sre.AlphabetGenerator.Base.DIGIT,subst:{},offset:0,category:"Nd",font:sre.AlphabetGenerator.Font.SANSSERIFBOLD},{interval:["1D7F6","1D7FF"],base:sre.AlphabetGenerator.Base.DIGIT,subst:{},offset:0,category:"Nd",font:sre.AlphabetGenerator.Font.MONOSPACE},{interval:["1F101","1F10A"],base:sre.AlphabetGenerator.Base.DIGIT,subst:{},offset:0,category:"No",font:sre.AlphabetGenerator.Embellish.COMMA},{interval:["24B6","24CF"],base:sre.AlphabetGenerator.Base.LATINCAP,subst:{},capital:!0,category:"So",font:sre.AlphabetGenerator.Embellish.CIRCLED},{interval:["24D0","24E9"],base:sre.AlphabetGenerator.Base.LATINSMALL,subst:{},capital:!1,category:"So",font:sre.AlphabetGenerator.Embellish.CIRCLED},{interval:["1F110","1F129"],base:sre.AlphabetGenerator.Base.LATINCAP,subst:{},capital:!0,category:"So",font:sre.AlphabetGenerator.Embellish.PARENTHESIZED},{interval:["249C","24B5"],base:sre.AlphabetGenerator.Base.LATINSMALL,subst:{},capital:!1,category:"So",font:sre.AlphabetGenerator.Embellish.PARENTHESIZED},{interval:["1F130","1F149"],base:sre.AlphabetGenerator.Base.LATINCAP,subst:{},capital:!0,category:"So",font:sre.AlphabetGenerator.Embellish.SQUARED},{interval:["1F170","1F189"],base:sre.AlphabetGenerator.Base.LATINCAP,subst:{},capital:!0,category:"So",font:sre.AlphabetGenerator.Embellish.NEGATIVESQUARED},{interval:["1F150","1F169"],base:sre.AlphabetGenerator.Base.LATINCAP,subst:{},capital:!0,category:"So",font:sre.AlphabetGenerator.Embellish.NEGATIVECIRCLED}],sre.MathSimpleStore=function(){sre.MathStore.call(this),this.category=""},goog.inherits(sre.MathSimpleStore,sre.MathStore),sre.MathSimpleStore.prototype.defineRulesFromMappings=function(e,t,n){for(var s in n)for(var o in n[s])this.defineRuleFromStrings(e,s,o,t,n[s][o])},sre.MathSimpleStore.prototype.defineRuleFromStrings=function(e,t,n,s,o){this.defineRule(e,t+"."+n,'[t] "'+o+'"',"self::text()",'"'===s?"self::text() = '"+s+"'":'self::text() = "'+s+'"')},sre.MathSimpleStore.prototype.lookupRule=function(e,t){return e=this.getSpeechRules().filter(function(e){return sre.MathSimpleStore.testDynamicConstraints_(t,e)}),e.length?e.sort(function(e,t){return sre.Engine.getInstance().comparator.compare(e.dynamicCstr,t.dynamicCstr)})[0]:null},sre.MathSimpleStore.testDynamicConstraints_=function(e,t){return sre.Engine.getInstance().strict?t.dynamicCstr.equal(e):sre.Engine.getInstance().comparator.match(t.dynamicCstr)},sre.MathCompoundStore=function(){this.subStores_={},this.locale=sre.DynamicCstr.DEFAULT_VALUES[sre.DynamicCstr.Axis.LOCALE],this.modality=sre.DynamicCstr.DEFAULT_VALUES[sre.DynamicCstr.Axis.MODALITY]},goog.addSingletonGetter(sre.MathCompoundStore),sre.MathCompoundStore.prototype.getSubStore_=function(e){var t=this.subStores_[e];return t?(sre.Debugger.getInstance().output("Store exists! "+e),t):(t=new sre.MathSimpleStore,this.subStores_[e]=t)},sre.MathCompoundStore.prototype.setupStore_=function(e,t){e.locale=this.locale,e.modality=this.modality,t&&(e.category=t)},sre.MathCompoundStore.prototype.defineRules=function(e,t,n,s){var o=this.getSubStore_(t);this.setupStore_(o,n),o.defineRulesFromMappings(e,t,s)},sre.MathCompoundStore.prototype.defineRule=function(e,t,n,s,o,i){var a=this.getSubStore_(o);this.setupStore_(a,s),a.defineRuleFromStrings(e,t,n,o,i)},sre.MathCompoundStore.prototype.changeLocale_=function(e){return!(!e.locale&&!e.modality)&&(this.locale=e.locale||this.locale,this.modality=e.modality||this.modality,!0)},sre.MathCompoundStore.prototype.addSymbolRules=function(e){if(!this.changeLocale_(e)){var t=sre.MathSimpleStore.parseUnicode_(e.key);this.defineRules(e.key,t,e.category,e.mappings)}},sre.MathCompoundStore.prototype.addFunctionRules=function(e){if(!this.changeLocale_(e)){var t,n,s=e.names,o=e.mappings;e=e.category;for(t=0;n=s[t];t++)this.defineRules(n,n,e,o)}},sre.MathCompoundStore.prototype.addUnitRules=function(e){if(!this.changeLocale_(e)){var t=e.names;t&&(e.names=t.map(function(e){return e+":unit"})),this.addFunctionRules(e)}},sre.MathCompoundStore.prototype.lookupRule=function(e,t){return(e=this.subStores_[e])?e.lookupRule(null,t):null},sre.MathCompoundStore.prototype.lookupCategory=function(e){return(e=this.subStores_[e])?e.category:""},sre.MathCompoundStore.prototype.lookupString=function(e,t){return(e=this.lookupRule(e,t))?e.action.components.map(function(e){return e.content.slice(1,-1)}).join(" "):""},sre.MathCompoundStore.prototype.enumerate=function(e){e=e||{};for(var t in this.subStores_)e=this.subStores_[t].trie.enumerate(e);return e},sre.MathSimpleStore.parseUnicode_=function(e){return e=parseInt(e,16),65536>e?String.fromCharCode(e):(e-=65536,String.fromCharCode((e>>10)+55296,(e&1023)+56320))},sre.MathMap=function(){this.store=sre.MathCompoundStore.getInstance(),this.loaded_=[],this.addRules={functions:goog.bind(this.store.addFunctionRules,this.store),symbols:goog.bind(this.store.addSymbolRules,this.store),units:goog.bind(this.store.addUnitRules,this.store)}},goog.addSingletonGetter(sre.MathMap),sre.MathMap.oldInst_=sre.MathMap.getInstance,sre.MathMap.getInstance=function(){var e=sre.MathMap.oldInst_();return e.loadLocale(),e},sre.MathMap.prototype.loadLocale=function(){var e,t=sre.Engine.getInstance().locale;-1===this.loaded_.indexOf(t)&&(e=sre.Engine.getInstance().mode===sre.Engine.Mode.ASYNC,e&&(sre.Engine.getInstance().mode=sre.Engine.Mode.SYNC),this.loaded_.push(t),this.retrieveMaps(t),e&&(sre.Engine.getInstance().mode=sre.Engine.Mode.ASYNC))},sre.MathMap.toFetch_=0,sre.Engine.registerTest(function(){return sre.MathMap.getInstance()&&!sre.MathMap.toFetch_}),sre.MathMap.prototype.retrieveFiles=function(e){switch(e=sre.BaseUtil.makePath(sre.SystemExternal.jsonPath)+e+".js",sre.Engine.getInstance().mode){case sre.Engine.Mode.ASYNC:sre.MathMap.toFetch_++;var t=goog.bind(this.parseMaps,this);sre.MathMap.fromFile_(e,function(e,n){sre.MathMap.toFetch_--,e||t(n)});break;case sre.Engine.Mode.HTTP:sre.MathMap.toFetch_++,this.getJsonAjax_(e);break;default:e=sre.MathMap.loadFile(e),this.parseMaps(e)}},sre.MathMap.prototype.parseMaps=function(e){e=JSON.parse(e),this.addMaps(e)},sre.MathMap.prototype.addMaps=function(e,t){for(var n,s,o=0;n=Object.keys(e)[o];o++)s=n.split("/"),t&&t!==s[0]||e[n].forEach(this.addRules[s[1]])},sre.MathMap.prototype.retrieveMaps=function(e){sre.AlphabetGenerator.generate(e,this.store),sre.Engine.getInstance().isIE&&sre.Engine.getInstance().mode===sre.Engine.Mode.HTTP?this.getJsonIE_(e):this.retrieveFiles(e)},sre.MathMap.prototype.getJsonIE_=function(e,t){var n=t||1;sre.BrowserUtil.mapsForIE?this.addMaps(sre.BrowserUtil.mapsForIE,e):5>=n&&setTimeout(goog.bind(function(){this.getJsonIE_(e,n++)},this),300)},sre.MathMap.fromFile_=function(e,t){return sre.SystemExternal.fs.readFile(e,"utf8",t)},sre.MathMap.loadFile=function(e){try{return sre.MathMap.readJSON_(e)}catch(t){console.error("Unable to load file: "+e+`
`+t)}return"{}"},sre.MathMap.readJSON_=function(e){return sre.SystemExternal.fs.readFileSync(e)},sre.MathMap.prototype.getJsonAjax_=function(e){var t=new XMLHttpRequest,n=goog.bind(this.parseMaps,this);t.onreadystatechange=function(){4===t.readyState&&(sre.MathMap.toFetch_--,200===t.status&&n(t.responseText))},t.open("GET",e,!0),t.send()},sre.StoreUtil={},sre.StoreUtil.nodeCounter=function(e,t){var o=e.length,n=0,s=t;return t||(s=""),function(){return n<o&&(n+=1),s+" "+n}},sre.StoreUtil.pauseSeparator=function(e,t){e=parseFloat(t);var n=isNaN(e)?t:e;return function(){return[sre.AuditoryDescription.create({text:"",personality:{pause:n}})]}},sre.StoreUtil.contentIterator=function(e,t){var n=0<e.length?sre.XpathUtil.evalXPath("../../content/*",e[0]):[];return function(){var e=n.shift(),s=t?[sre.AuditoryDescription.create({text:t},{translate:!0})]:[];return e?(e=sre.SpeechRuleEngine.getInstance().evaluateNode(e),s.concat(e)):s}},sre.ClearspeakUtil={},sre.ClearspeakUtil.numbersToAlpha=function(e){return e.match(/\d+/)?sre.Messages.NUMBERS.numberToWords(parseInt(e,10)):e},sre.ClearspeakUtil.nodeCounter=function(e,t){t=t.split("-");var o=sre.StoreUtil.nodeCounter(e,t[0]||""),n=t[1]||"",i=t[2]||"",s=!0;return function(){var e=o();return s?(s=!1,i+e+n):e+n}},sre.ClearspeakUtil.isSimpleExpression=function(e){return sre.ClearspeakUtil.isSimpleNumber_(e)||sre.ClearspeakUtil.isSimpleLetters_(e)||sre.ClearspeakUtil.isSimpleDegree_(e)||sre.ClearspeakUtil.isSimpleNegative_(e)||sre.ClearspeakUtil.isSimpleFunction_(e)},sre.ClearspeakUtil.isSimpleFunction_=function(e){return e.type===sre.SemanticAttr.Type.APPL&&(e.childNodes[0].role===sre.SemanticAttr.Role.PREFIXFUNC||e.childNodes[0].role===sre.SemanticAttr.Role.SIMPLEFUNC)&&(sre.ClearspeakUtil.isSimple_(e.childNodes[1])||e.childNodes[1].type===sre.SemanticAttr.Type.FENCED&&sre.ClearspeakUtil.isSimple_(e.childNodes[1].childNodes[0]))},sre.ClearspeakUtil.isSimpleNegative_=function(e){return e.type===sre.SemanticAttr.Type.PREFIXOP&&e.role===sre.SemanticAttr.Role.NEGATIVE&&sre.ClearspeakUtil.isSimple_(e.childNodes[0])&&e.childNodes[0].type!==sre.SemanticAttr.Type.PREFIXOP&&e.childNodes[0].type!==sre.SemanticAttr.Type.APPL&&e.childNodes[0].type!==sre.SemanticAttr.Type.PUNCTUATED},sre.ClearspeakUtil.isSimpleDegree_=function(e){return e.type===sre.SemanticAttr.Type.PUNCTUATED&&e.role===sre.SemanticAttr.Role.ENDPUNCT&&2===e.childNodes.length&&e.childNodes[1].role===sre.SemanticAttr.Role.DEGREE&&(sre.ClearspeakUtil.isLetter_(e.childNodes[0])||sre.ClearspeakUtil.isNumber_(e.childNodes[0])||e.childNodes[0].type===sre.SemanticAttr.Type.PREFIXOP&&e.childNodes[0].role===sre.SemanticAttr.Role.NEGATIVE&&(sre.ClearspeakUtil.isLetter_(e.childNodes[0].childNodes[0])||sre.ClearspeakUtil.isNumber_(e.childNodes[0].childNodes[0])))},sre.ClearspeakUtil.isSimpleLetters_=function(e){return sre.ClearspeakUtil.isLetter_(e)||e.type===sre.SemanticAttr.Type.INFIXOP&&e.role===sre.SemanticAttr.Role.IMPLICIT&&(2===e.childNodes.length&&(sre.ClearspeakUtil.isLetter_(e.childNodes[0])||sre.ClearspeakUtil.isSimpleNumber_(e.childNodes[0]))&&sre.ClearspeakUtil.isLetter_(e.childNodes[1])||3===e.childNodes.length&&sre.ClearspeakUtil.isSimpleNumber_(e.childNodes[0])&&sre.ClearspeakUtil.isLetter_(e.childNodes[1])&&sre.ClearspeakUtil.isLetter_(e.childNodes[2]))},sre.ClearspeakUtil.isSimple_=function(e){return e.hasAnnotation("clearspeak","simple")},sre.ClearspeakUtil.isLetter_=function(e){return e.type===sre.SemanticAttr.Type.IDENTIFIER&&(e.role===sre.SemanticAttr.Role.LATINLETTER||e.role===sre.SemanticAttr.Role.GREEKLETTER||e.role===sre.SemanticAttr.Role.OTHERLETTER||e.role===sre.SemanticAttr.Role.SIMPLEFUNC)},sre.ClearspeakUtil.isNumber_=function(e){return e.type===sre.SemanticAttr.Type.NUMBER&&(e.role===sre.SemanticAttr.Role.INTEGER||e.role===sre.SemanticAttr.Role.FLOAT)},sre.ClearspeakUtil.isSimpleNumber_=function(e){return sre.ClearspeakUtil.isNumber_(e)||sre.ClearspeakUtil.isSimpleFraction_(e)},sre.ClearspeakUtil.isSimpleFraction_=function(e){if(sre.ClearspeakUtil.hasPreference("Fraction_Over")||sre.ClearspeakUtil.hasPreference("Fraction_FracOver")||e.type!==sre.SemanticAttr.Type.FRACTION||e.role!==sre.SemanticAttr.Role.VULGAR)return!1;if(sre.ClearspeakUtil.hasPreference("Fraction_Ordinal"))return!0;var t=parseInt(e.childNodes[0].textContent,10);return e=parseInt(e.childNodes[1].textContent,10),0<t&&20>t&&0<e&&11>e},sre.ClearspeakUtil.hasPreference=function(e){return sre.Engine.getInstance().style===e},sre.ClearspeakUtil.simpleExpression=function(){return new sre.SemanticAnnotator("clearspeak",function(e){return sre.ClearspeakUtil.isSimpleExpression(e)?"simple":""})},sre.ClearspeakUtil.simpleNode=function(e){return!!e.hasAttribute("annotation")&&(e=e.getAttribute("annotation"),!!/clearspeak:simple$|clearspeak:simple;/.exec(e))},sre.ClearspeakUtil.simpleCell_=function(e){if(sre.ClearspeakUtil.simpleNode(e))return!0;if(e.tagName!==sre.SemanticAttr.Type.SUBSCRIPT)return!1;e=e.childNodes[0].childNodes;var t=e[1];return e[0].tagName===sre.SemanticAttr.Type.IDENTIFIER&&(sre.ClearspeakUtil.isInteger_(t)||t.tagName===sre.SemanticAttr.Type.INFIXOP&&t.hasAttribute("role")&&t.getAttribute("role")===sre.SemanticAttr.Role.IMPLICIT&&sre.ClearspeakUtil.allIndices_(t))},sre.ClearspeakUtil.isInteger_=function(e){return e.tagName===sre.SemanticAttr.Type.NUMBER&&e.hasAttribute("role")&&e.getAttribute("role")===sre.SemanticAttr.Role.INTEGER},sre.ClearspeakUtil.allIndices_=function(e){return sre.XpathUtil.evalXPath("children/*",e).every(function(e){return sre.ClearspeakUtil.isInteger_(e)||e.tagName===sre.SemanticAttr.Type.IDENTIFIER})},sre.ClearspeakUtil.allCellsSimple=function(e){return sre.XpathUtil.evalXPath(e.tagName===sre.SemanticAttr.Type.MATRIX?"children/row/children/cell/children/*":"children/line/children/*",e).every(sre.ClearspeakUtil.simpleCell_)?[e]:[]},sre.ClearspeakUtil.isSmallVulgarFraction=function(e){return sre.NumbersUtil.vulgarFractionSmall(e,20,11)?[e]:[]},sre.ClearspeakUtil.isUnitExpression=function(e){return e.type===sre.SemanticAttr.Type.TEXT||e.type===sre.SemanticAttr.Type.PUNCTUATED&&e.role===sre.SemanticAttr.Role.TEXT&&sre.ClearspeakUtil.isNumber_(e.childNodes[0])&&sre.ClearspeakUtil.allTextLastContent_(e.childNodes.slice(1))||e.type===sre.SemanticAttr.Type.IDENTIFIER&&e.role===sre.SemanticAttr.Role.UNIT||e.type===sre.SemanticAttr.Type.INFIXOP&&(e.role===sre.SemanticAttr.Role.IMPLICIT||e.role===sre.SemanticAttr.Role.UNIT)},sre.ClearspeakUtil.allTextLastContent_=function(e){for(var t=0;t<e.length-1;t++)if(e[t].type!==sre.SemanticAttr.Type.TEXT||""!==e[t].textContent)return!1;return e[e.length-1].type===sre.SemanticAttr.Type.TEXT},sre.ClearspeakUtil.unitExpression=function(){return new sre.SemanticAnnotator("clearspeak",function(e){return sre.ClearspeakUtil.isUnitExpression(e)?"unit":""})},sre.ClearspeakUtil.ordinalExponent=function(e){var t=parseInt(e.textContent,10);return isNaN(t)?e.textContent:10<t?sre.Messages.NUMBERS.simpleOrdinal(t):sre.Messages.NUMBERS.wordOrdinal(t)},sre.ClearspeakUtil.isCapitalLetter=function(e){return"Lu"===sre.MathCompoundStore.getInstance().lookupCategory(e.textContent)?[e]:[]},sre.ClearspeakUtil.NESTING_DEPTH=null,sre.ClearspeakUtil.nestingDepth=function(e){var t=0,n=e.textContent,s="open"===e.getAttribute("role")?0:1;for(e=e.parentNode;e;)e.tagName===sre.SemanticAttr.Type.FENCED&&e.childNodes[0].childNodes[s].textContent===n&&t++,e=e.parentNode;return sre.ClearspeakUtil.NESTING_DEPTH=1<t?sre.Messages.NUMBERS.wordOrdinal(t):"",sre.ClearspeakUtil.NESTING_DEPTH},sre.ClearspeakUtil.matchingFences=function(e){var t,n=e.previousSibling;return n?t=e:(n=e,t=e.nextSibling),t?sre.SemanticAttr.isMatchingFence(n.textContent,t.textContent)?[e]:[]:[]},sre.ClearspeakUtil.insertNesting=function(e,t){if(!t||!e)return e;var n=e.match(/^(open|close) /);return n?n[0]+t+" "+e.substring(n[0].length):t+" "+e},sre.Grammar.getInstance().setCorrection("insertNesting",sre.ClearspeakUtil.insertNesting),sre.ClearspeakUtil.fencedArguments=function(e){var t=sre.DomUtil.toArray(e.parentNode.childNodes),n=sre.XpathUtil.evalXPath("../../children/*",e),t=t.indexOf(e);return sre.ClearspeakUtil.fencedFactor_(n[t])||sre.ClearspeakUtil.fencedFactor_(n[t+1])?[e]:[]},sre.ClearspeakUtil.simpleArguments=function(e){var t=sre.DomUtil.toArray(e.parentNode.childNodes),n=sre.XpathUtil.evalXPath("../../children/*",e),t=t.indexOf(e);return sre.ClearspeakUtil.simpleFactor_(n[t])&&n[t+1]&&(sre.ClearspeakUtil.simpleFactor_(n[t+1])||n[t+1].tagName===sre.SemanticAttr.Type.ROOT||n[t+1].tagName===sre.SemanticAttr.Type.SQRT||n[t+1].tagName===sre.SemanticAttr.Type.SUPERSCRIPT&&n[t+1].childNodes[0].childNodes[0]&&(n[t+1].childNodes[0].childNodes[0].tagName===sre.SemanticAttr.Type.NUMBER||n[t+1].childNodes[0].childNodes[0].tagName===sre.SemanticAttr.Type.IDENTIFIER)&&("2"===n[t+1].childNodes[0].childNodes[1].textContent||"3"===n[t+1].childNodes[0].childNodes[1].textContent))?[e]:[]},sre.ClearspeakUtil.simpleFactor_=function(e){return!!e&&(e.tagName===sre.SemanticAttr.Type.NUMBER||e.tagName===sre.SemanticAttr.Type.IDENTIFIER||e.tagName===sre.SemanticAttr.Type.FUNCTION||e.tagName===sre.SemanticAttr.Type.APPL||e.tagName===sre.SemanticAttr.Type.FRACTION)},sre.ClearspeakUtil.fencedFactor_=function(e){return e&&(e.tagName===sre.SemanticAttr.Type.FENCED||e.hasAttribute("role")&&e.getAttribute("role")===sre.SemanticAttr.Role.LEFTRIGHT||sre.ClearspeakUtil.layoutFactor_(e))},sre.ClearspeakUtil.layoutFactor_=function(e){return!!e&&(e.tagName===sre.SemanticAttr.Type.MATRIX||e.tagName===sre.SemanticAttr.Type.VECTOR)},sre.ClearspeakUtil.isHyperbolic=function(e){if(e.tagName===sre.SemanticAttr.Type.APPL){var t=sre.XpathUtil.evalXPath("children/*[1]",e)[0];if(t&&t.tagName===sre.SemanticAttr.Type.FUNCTION&&"Hyperbolic"===sre.MathCompoundStore.getInstance().lookupCategory(t.textContent))return[e]}return[]},sre.ClearspeakUtil.isLogarithmWithBase=function(e){if(e.tagName===sre.SemanticAttr.Type.SUBSCRIPT){var t=sre.XpathUtil.evalXPath("children/*[1]",e)[0];if(t&&t.tagName===sre.SemanticAttr.Type.FUNCTION&&"Logarithm"===sre.MathCompoundStore.getInstance().lookupCategory(t.textContent))return[e]}return[]},sre.ClearspeakUtil.wordOrdinal=function(e){return sre.Messages.NUMBERS.wordOrdinal(parseInt(e.textContent,10))},sre.ClearspeakUtil.firstCurrency=function(e){var t=sre.XpathUtil.evalXPath("children/*[1]",e)[0];return t&&"currency"===sre.MathCompoundStore.getInstance().lookupCategory(t.textContent+":unit")?[e]:[]},sre.ClearspeakUtil.lastCurrency=function(e){var t=sre.XpathUtil.evalXPath("children/*[last()]",e)[0];return t&&"currency"===sre.MathCompoundStore.getInstance().lookupCategory(t.textContent+":unit")?[e]:[]},sre.ClearspeakUtil.addAnnotators=function(){sre.SemanticAnnotations.getInstance().register(sre.ClearspeakUtil.simpleExpression()),sre.SemanticAnnotations.getInstance().register(sre.ClearspeakUtil.unitExpression())},sre.ClearspeakFrench={locale:"fr",domain:"clearspeak",functions:[["CTXF","CTXFpauseSeparator",sre.StoreUtil.pauseSeparator],["CTXF","CTXFnodeCounter",sre.ClearspeakUtil.nodeCounter],["CTXF","CTXFcontentIterator",sre.StoreUtil.contentIterator],["CSF","CSFvulgarFraction",sre.NumbersUtil.vulgarFraction],["CQF","CQFvulgarFractionSmall",sre.ClearspeakUtil.isSmallVulgarFraction],["CQF","CQFcellsSimple",sre.ClearspeakUtil.allCellsSimple],["CSF","CSFordinalExponent",sre.ClearspeakUtil.ordinalExponent],["CSF","CSFwordOrdinal",sre.Messages.NUMBERS.wordOrdinal],["CQF","CQFisCapital",sre.ClearspeakUtil.isCapitalLetter],["CQF","CQFmatchingFences",sre.ClearspeakUtil.matchingFences],["CSF","CSFnestingDepth",sre.ClearspeakUtil.nestingDepth],["CQF","CQFfencedArguments",sre.ClearspeakUtil.fencedArguments],["CQF","CQFsimpleArguments",sre.ClearspeakUtil.simpleArguments],["CQF","CQFisHyperbolic",sre.ClearspeakUtil.isHyperbolic],["CQF","CQFisLogarithm",sre.ClearspeakUtil.isLogarithmWithBase],["CQF","CQFspaceoutNumber",sre.MathspeakUtil.spaceoutNumber]],rules:['Rule{collapsed{default{[t] "compressée"; [n] . (engine:modality=summary,grammar:collapsed){self::*{@alternative{not(contains(@grammar, "collapsed")){self::*{self::*{self::*{self::*{self::*'.split("{"),["Rule","stree","default","[n] ./*[1]","self::stree"],["Rule","unknown","default","[n] text()","self::unknown"],'Rule;protected;default;[t] text();self::number;contains(@grammar, "protected")'.split(";"),["Rule","omit-empty","default",'[p] (pause:"short")',"self::empty"],'Rule{font{default{[n] . (grammar:ignoreFont=@font);  [t] @font (grammar:localFont,pause:"short"){self::*{@font{not(contains(@grammar, "ignoreFont")){@font!="normal"'.split("{"),'Rule{font-identifier{default{[n] . (grammar:ignoreFont=@font);  [t] @font (grammar:localFont,pause:"short"){self::identifier{string-length(text())=1{@font{@font="normal"{not(contains(@grammar, "ignoreFont")){@role!="unit"'.split("{"),'Rule;omit-font;default;[n] self::* (grammar:ignoreFont=@font);self::identifier;string-length(text())=1;@font;not(contains(@grammar, "ignoreFont"));@font="italic"'.split(";"),["Rule","text","default","[n] text()","self::text"],'Rule;capital;default;[n] text() (pitch:0.6,grammar:ignoreCaps="majuscule");self::identifier;@role="latinletter" or @role="greekletter" or @role="simple function";CQFisCapital'.split(";"),'Rule;capital;Caps_SayCaps;[n] text();self::identifier;@role="latinletter" or @role="greekletter";CQFisCapital'.split(";"),'Rule{capital{Caps_SayCaps{[p] (pause:"short"); [n] text(){self::identifier{@role="latinletter" or @role="greekletter"{CQFisCapital{preceding-sibling::*[1]{not(name(preceding-sibling::*[1])="function"){not(contains(@grammar, "angle"))'.split("{"),'Rule;capital;Caps_SayCaps;[n] text() (pause:"short");self::identifier;@role="latinletter" or @role="greekletter";CQFisCapital;following-sibling::*[1]'.split(";"),'Rule{capital{Caps_SayCaps{[p] (pause:"short"); [n] text() (pause:"short"){self::identifier{@role="latinletter" or @role="greekletter"{CQFisCapital{preceding-sibling::*[1]{following-sibling::*[1]{not(name(preceding-sibling::*[1])="function"){not(contains(@grammar, "angle"))'.split("{"),'Rule,punctuation-lr,default,[p] (pause:"short"); [n] text() (pause:"short"),self::punctuation,@role="comma"'.split(","),'Rule;punctuation;default;[n] text();self::punctuation;@role="comma";not(preceding-sibling::*[1]/children);not(following-sibling::*[1]/children)'.split(";"),'Rule,punctuation-l,default,[p] (pause:"short"); [n] text(),self::punctuation,@role="comma",not(following-sibling::*[1]/children)'.split(","),'Rule;punctuation-r;default;[n] text() (pause:"short");self::punctuation;@role="comma";not(preceding-sibling::*[1]/children)'.split(";"),'Rule;ellipsis;Ellipses_AndSoOn;[t] "et ainsi de suite";self::punctuation;@role="ellipsis";not(following-sibling::*[1]);not(preceding-sibling::*[last()][@role="ellipsis"])'.split(";"),`Rule;ellipsis;Ellipses_AndSoOn;[t] "et ainsi de suite jusqu'à";self::punctuation;@role="ellipsis";preceding-sibling::*[1];following-sibling::*[1]`.split(";"),'Rule,vbar-evaluated,default,[n] children/*[1]; [p] (pause:"short"); [t] "évalué à"; [n] content/*[1]/children/*[2]; [p] (pause:"short"),self::punctuated,@role="endpunct",content/*[1][@role="vbar"],content/*[1][@embellished],name(content/*[1])="subscript"'.split(","),'Rule,vbar-evaluated,default,[n] children/*[1]; [p] (pause:"short"); [t] "évalué à"; [n] content/*[1]/children/*[2]; [p] (pause:"short"); [t] "moins la même expression évaluée à"; [n] content/*[1]/children/*[1]/children/*[2]; [p] (pause:"short"),self::punctuated,@role="endpunct",content/*[1][@role="vbar"],content/*[1][@embellished],name(content/*[1])="superscript",name(content/*[1]/children/*[1])="subscript"'.split(","),'Rule;vbar-such-that;VerticalLine_SuchThat;[t] "tel que";self::punctuation;@role="vbar";not(parent::*/parent::*[@embellished="punctuation"])'.split(";"),'Rule;vbar-such-that;VerticalLine_Divides;[t] "diviseur de";self::punctuation;@role="vbar";not(parent::*/parent::*[@embellished="punctuation"])'.split(";"),'Rule;vbar-such-that;VerticalLine_Given;[t] "sachant";self::punctuation;@role="vbar";not(parent::*/parent::*[@embellished="punctuation"])'.split(";"),'Rule;set-member;default;[t] "est un";self::operator;@role="set extended";text()="∈" or text()="∊"'.split(";"),["SpecializedRule","set-member","default","SetMemberSymbol_Member",'[t] "appartient à"'],["SpecializedRule","set-member","default","SetMemberSymbol_Element",'[t] "est un élément de"'],["SpecializedRule","set-member","default","SetMemberSymbol_Belongs",'[t] "est dans"'],`Rule;set-not-member;default;[t] "n'est pas un";self::operator;@role="set extended";text()="∉"`.split(";"),["SpecializedRule","set-not-member","default","SetMemberSymbol_Member",`[t] "n'appartient pas à"`],["SpecializedRule","set-not-member","default","SetMemberSymbol_Element",`[t] "n'est pas un élément de"`],["SpecializedRule","set-not-member","default","SetMemberSymbol_Belongs",`[t] "n'est pas dans"`],'Rule,prime,default,[n] children/*[1]; [n] children/*[2],self::superscript,children/*[2],children/*[2][@role="prime"],self::*'.split(","),'Rule,feet,default,[n] children/*[1]; [t] "feet",self::superscript,children/*[2][@role="prime"],name(children/*[1])="number",children/*[2][text()="′"],not(preceding-sibling::*[@role="degree"])'.split(","),'Rule,foot,default,[n] children/*[1]; [t] "foot",self::superscript,children/*[2][@role="prime"],name(children/*[1])="number",children/*[2][text()="′"],children/*[1][text()="1"],not(preceding-sibling::*[@role="degree"])'.split(","),'Rule,inches,default,[n] children/*[1]; [t] "inches",self::superscript,children/*[2][@role="prime"],name(children/*[1])="number",children/*[2][text()="″"],not(preceding-sibling::*[@role="degree"])'.split(","),'Rule,inch,default,[n] children/*[1]; [t] "inch",self::superscript,children/*[2][@role="prime"],name(children/*[1])="number",children/*[2][text()="″"],children/*[1][text()="1"],not(preceding-sibling::*[@role="degree"])'.split(","),'Rule,minutes,default,[p] (pause:short); [n] children/*[1]; [t] "minutes",self::superscript,children/*[2][@role="prime"],preceding-sibling::*[@role="degree"],children/*[2][text()="′"]'.split(","),'Rule,minute,default,[p] (pause:short); [n] children/*[1]; [t] "minute",self::superscript,children/*[2][@role="prime"],preceding-sibling::*[@role="degree"],children/*[2][text()="′"],children/*[1][text()="1"]'.split(","),'Rule,seconds,default,[p] (pause:short); [n] children/*[1]; [t] "seconds",self::superscript,children/*[2][@role="prime"],preceding-sibling::*[@role="degree"],children/*[2][text()="″"]'.split(","),'Rule,second,default,[p] (pause:short); [n] children/*[1]; [t] "second",self::superscript,children/*[2][@role="prime"],preceding-sibling::*[@role="degree"],children/*[2][text()="″"],children/*[1][text()="1"]'.split(","),'Rule,degrees-angle,Prime_Angle,[n] children/*[1]; [t] "degrees"; [p] (pause:short),self::punctuation,@role="degree"'.split(","),'Rule,degree-angle,Prime_Angle,[n] children/*[1]; [t] "degree"; [p] (pause:short),self::punctuation,@role="degree",children/*[1][text()="1"]'.split(","),'Rule{minutes-angle{Prime_Angle{[n] children/*[1]; [t] "minutes"; [p] (pause:short){self::superscript{children/*[2][@role="prime"]{name(children/*[1])="number" or (children/*[1][@role="latinletter"] and ""=translate(children/*[1]/text(),"abcdefghijklmnopqrstuvwxyz", "")){children/*[2][text()="′"]'.split("{"),'Rule,minute-angle,Prime_Angle,[n] children/*[1]; [t] "minute"; [p] (pause:short),self::superscript,children/*[2][@role="prime"],children/*[2][text()="′"],children/*[1][text()="1"]'.split(","),'Rule{seconds-angle{Prime_Angle{[n] children/*[1]; [t] "seconds"; [p] (pause:short){self::superscript{children/*[2][@role="prime"]{name(children/*[1])="number" or (children/*[1][@role="latinletter"] and ""=translate(children/*[1]/text(),"abcdefghijklmnopqrstuvwxyz", "")){children/*[2][text()="″"]'.split("{"),'Rule,second-angle,Prime_Angle,[n] children/*[1]; [t] "second"; [p] (pause:short),self::superscript,children/*[2][@role="prime"],children/*[2][text()="″"],children/*[1][text()="1"]'.split(","),'Rule{feet-length{Prime_Length{[n] children/*[1]; [t] "feet"; [p] (pause:short){self::superscript{children/*[2][@role="prime"]{name(children/*[1])="number" or (children/*[1][@role="latinletter"] and ""=translate(children/*[1]/text(),"abcdefghijklmnopqrstuvwxyz", "")){children/*[2][text()="′"]'.split("{"),'Rule,foot-length,Prime_Length,[n] children/*[1]; [t] "foot"; [p] (pause:short),self::superscript,children/*[2][@role="prime"],children/*[2][text()="′"],children/*[1][text()="1"]'.split(","),'Rule{inches-length{Prime_Length{[n] children/*[1]; [t] "inches"; [p] (pause:short){self::superscript{children/*[2][@role="prime"]{name(children/*[1])="number" or (children/*[1][@role="latinletter"] and ""=translate(children/*[1]/text(),"abcdefghijklmnopqrstuvwxyz", "")){children/*[2][text()="″"]'.split("{"),'Rule,inch-length,Prime_Length,[n] children/*[1]; [t] "inch"; [p] (pause:short),self::superscript,children/*[2][@role="prime"],children/*[2][text()="″"],children/*[1][text()="1"]'.split(","),["Rule","punctuated","default","[m] children/*","self::punctuated"],["Rule","function","default","[n] text()","self::function"],["Rule","appl","default",'[n] children/*[1]; [t] "de"; [n] children/*[2]; [p] (pause:"short")',"self::appl"],'Rule,appl-simple,default,[n] children/*[1]; [t] "de"; [p] (pause:"short"); [n] children/*[2]; [p] (pause:"short"),self::appl,@role="simple function",name(children/*[2])="appl"'.split(","),'Rule,appl-simple,default,[n] children/*[1]; [t] "de"; [p] (pause:"short"); [n] children/*[2]; [p] (pause:"short"),self::appl,@role="simple function",name(children/*[2])="fenced",name(children/*[2]/children/*[1])="appl"'.split(","),["Rule","appl","Functions_None",'[p] (pause:"short"); [n] children/*[1]; [t] "fois"; [n] children/*[2]; [p] (pause:"short")',"self::appl"],'Rule,function-prefix,default,[n] children/*[1]; [n] children/*[2],self::appl,@role="prefix function"'.split(","),'Rule{binary-operation{ImpliedTimes_MoreImpliedTimes{[n] . (grammar:impliedTimes); [p] (pause:"short"){self::appl{@role="prefix function"{parent::*/parent::infixop[@role="implicit"]{following-sibling::*{not(contains(@grammar, "impliedTimes"))'.split("{"),'Rule{function-prefix-simple-arg{default{[n] children/*[1]; [n] children/*[2]{self::appl{@role="prefix function"{name(children/*[2])="fenced"{contains(children/*[2]/children/*[1]/@annotation, "clearspeak:simple"){name(children/*[2]/children/*[1])!="number"{name(children/*[2]/children/*[1])!="identifier"{name(children/*[2]/children/*[1])!="appl"'.split("{"),'Rule,function-prefix-embell,default,[p] (pause:"short"); [n] children/*[1]; [n] children/*[2]; [p] (pause:"short"); ,self::appl,@role="prefix function",name(children/*[1])!="function"'.split(","),'Rule{function-prefix-fenced-or-frac-arg{default{[p] (pause:"short"); [n] children/*[1]; [t] "de"; [n] children/*[2]; [p] (pause:"short"){self::appl{@role="prefix function"{(name(children/*[2])="fenced" and not(contains(children/*[2]/children/*[1]/@annotation, "clearspeak:simple"))) or name(children/*[2])="fraction" or (name(children/*[2])!="fenced" and not(contains(children/*[2]/@annotation, "clearspeak:simple"))){self::*'.split("{"),'Rule,function-prefix-subscript,default,[p] (pause:"short"); [n] children/*[1]; [t] "de"; [p] (pause:"short"); [n] children/*[2]; [p] (pause:"short"),self::appl,@role="prefix function",name(children/*[1])="subscript",self::*'.split(","),'Rule{function-ln{default{[n] children/*[1]; [n] children/*[2]{self::appl{@role="prefix function"{content/*[2][text()="ln"]{not(following-sibling::*){not(contains(@grammar, "NatLog"))'.split("{"),'Rule{function-ln{default{[n] children/*[1]; [n] children/*[2]; [p] (pause:"short"){self::appl{@role="prefix function"{content/*[2][text()="ln"]{not(contains(@grammar, "NatLog"))'.split("{"),'Rule{function-ln{default{[n] children/*[1]; [t] "de"; [n] children/*[2]; [p] (pause:"short"){self::appl{@role="prefix function"{content/*[2][text()="ln"]{name(children/*[2])="fenced"{not(contains(@grammar, "NatLog"))'.split("{"),'Rule;function-ln;Log_LnAsNaturalLog;[n] . (grammar:NatLog);self::appl;@role="prefix function";content/*[2][text()="ln"];not(following-sibling::*);not(contains(@grammar, "NatLog"))'.split(";"),'Rule{function-ln{Log_LnAsNaturalLog{[n] . (grammar:NatLog); [p] (pause:"short"){self::appl{@role="prefix function"{content/*[2][text()="ln"]{not(contains(@grammar, "NatLog"))'.split("{"),'Rule{function-prefix-as-exp{default{[n] children/*[1]; [t] "de"; [p] (pause:"short"); [n] children/*[2]; [p] (pause:"short"){self::appl{@role="prefix function"{name(parent::*/parent::*)="superscript"{not(following-sibling::*){(name(children/*[2])="fenced" and not(contains(children/*[2]/children/*[1]/@annotation, "clearspeak:simple"))) or name(children/*[2])="fraction" or (name(children/*[2])!="fenced" and not(contains(children/*[2]/@annotation, "clearspeak:simple")))'.split("{"),'Rule,function-prefix-subscript-as-exp,default,[n] children/*[1]; [t] "de"; [p] (pause:"short"); [n] children/*[2]; [p] (pause:"short"),self::appl,@role="prefix function",name(parent::*/parent::*)="superscript",not(following-sibling::*),name(children/*[1])="subscript"'.split(","),'Rule,function-prefix-hyper,default,[p] (pause:"short"); [n] children/*[1]; [t] "de"; [n] children/*[2]; [p] (pause:"short"),self::appl,@role="prefix function",CQFisHyperbolic'.split(","),'Rule{function-prefix-inverse{default{[p] (pause:"short");  [n] children/*[1]/children/*[1]; [t] "inverse de"; [n] children/*[2]; [p] (pause:"short"){self::appl{@role="prefix function"{name(children/*[1])="superscript"{name(children/*[1]/children/*[2])="prefixop"{children/*[1]/children/*[2][@role="negative"]{children/*[1]/children/*[2]/children/*[1][text()="1"]{not(contains(@grammar, "functions_none"))'.split("{"),'Rule{function-prefix-inverse{Trig_Reciprocal{[p] (pause:"short"); [t] "la reciproque de"; [n] children/*[1]/children/*[1]; [p] (pause:"short"); [n] children/*[2]; [p] (pause:"short"){self::appl{@role="prefix function"{name(children/*[1])="superscript"{name(children/*[1]/children/*[2])="prefixop"{children/*[1]/children/*[2][@role="negative"]{children/*[1]/children/*[2]/children/*[1][text()="1"]{not(contains(@grammar, "functions_none"))'.split("{"),'Rule{function-prefix-inverse{Trig_Reciprocal{[p] (pause:"short"); [t] "la reciproque de"; [n] children/*[1]/children/*[1];[n] children/*[2]; [p] (pause:"short"){self::appl{@role="prefix function"{name(children/*[1])="superscript"{name(children/*[1]/children/*[2])="prefixop"{contains(children/*[2]/@annotation, "clearspeak:simple"){children/*[1]/children/*[2][@role="negative"]{children/*[1]/children/*[2]/children/*[1][text()="1"]{not(contains(@grammar, "functions_none"))'.split("{"),'Rule,appl-triginverse,Trig_TrigInverse,[p] (pause:"short"); [n] children/*[1]; [t] "de"; [n] children/*[2]; [p] (pause:"short"),self::appl,@role="prefix function",name(children/*[1])="superscript",name(children/*[1]/children/*[2])="prefixop",children/*[1]/children/*[2][@role="negative"],children/*[1]/children/*[2]/children/*[1][text()="1"]'.split(","),'Rule{function-prefix-arc-simple{Trig_ArcTrig{[p] (pause:"short"); [t] "arc"; [n] children/*[1]/children/*[1]; [n] children/*[2]; [p] (pause:"short"){self::appl{@role="prefix function"{name(children/*[1])="superscript"{name(children/*[1]/children/*[2])="prefixop"{children/*[1]/children/*[2][@role="negative"]{children/*[1]/children/*[2]/children/*[1][text()="1"]{not(contains(@grammar, "functions_none"))'.split("{"),'Rule{function-prefix-arc-simple{Trig_ArcTrig{[p] (pause:"short"); [t] "arc"; [n] children/*[1]/children/*[1]; [p] (pause:"short"); [n] children/*[2]; [p] (pause:"short"){self::appl{@role="prefix function"{name(children/*[1])="superscript"{name(children/*[1]/children/*[2])="prefixop"{children/*[1]/children/*[2][@role="negative"]{children/*[1]/children/*[2]/children/*[1][text()="1"]{name(children/*[2])="fenced"{children/*[2]/children/*[1][@role="prefix function"]{contains(children/*[2]/children/*[1]/@annotation, "clearspeak:simple"){not(contains(@grammar, "functions_none"))'.split("{"),'Rule{function-prefix-arc{Trig_ArcTrig{[p] (pause:"short"); [t] "arc"; [n] children/*[1]/children/*[1]; [t] "de"; [n] children/*[2]; [p] (pause:"short"){self::appl{@role="prefix function"{name(children/*[1])="superscript"{name(children/*[1]/children/*[2])="prefixop"{children/*[1]/children/*[2][@role="negative"]{children/*[1]/children/*[2]/children/*[1][text()="1"]{not(contains(@grammar, "functions_none")){(name(children/*[2])="fenced" and not(contains(children/*[2]/children/*[1]/@annotation, "clearspeak:simple"))) or (name(children/*[2])="fraction" and children/*[2][@role!="vulgar"])'.split("{"),'Rule{function-inverse{default{[n] children/*[1]; [t] "inverse"{self::superscript{@role="prefix function" or @role="simple function"{name(children/*[2])="prefixop"{children/*[2][@role="negative"]{children/*[2]/children/*[1][text()="1"]{not(contains(@grammar, "functions_none"))'.split("{"),'Rule{function-inverse{Functions_Reciprocal{[t] "la reciproque de"; [n] children/*[1]{self::superscript{@role="prefix function" or @role="simple function"{name(children/*[2])="prefixop"{children/*[2][@role="negative"]{children/*[2]/children/*[1][text()="1"]{not(contains(@grammar, "functions_none"))'.split("{"),'Rule;function-inverse;Functions_None;[n] . (grammar:functions_none);self::superscript;@role="prefix function" or @role="simple function";name(children/*[2])="prefixop";children/*[2][@role="negative"];children/*[2]/children/*[1][text()="1"];not(contains(@grammar, "functions_none"))'.split(";"),["Rule","superscript","default",`[n] children/*[1]; [t] "à l'exposant" (pause:"short"); [n] children/*[2]; [p] (pause:"short"); [t] "fin exposant" (pause:"short")`,"self::superscript"],'Rule,superscript-simple-exponent,default,[n] children/*[1]; [t] "à la puissance"; [n] children/*[2]; [p] (pause:"medium"),self::superscript,not(descendant::superscript)'.split(","),'Rule,superscript-simple-exponent,default,[n] children/*[1]; [t] "à la puissance"; [n] children/*[2]; [p] (pause:"medium") ,self::superscript,not(descendant::superscript),not(following-sibling::*)'.split(","),'Aliases;superscript-simple-exponent;self::superscript;children/superscript/children/*[2][text()="2"] or children/superscript/children/*[2][text()="3"];name(children/superscript/children/*[1])="number";contains(children/superscript/children/*[1]/@annotation, "clearspeak:simple")'.split(";"),'Aliases;superscript-simple-exponent;self::superscript;children/superscript/children/*[2][text()="2"] or children/superscript/children/*[2][text()="3"];name(children/superscript/children/*[1])="fraction";contains(children/superscript/children/*[1]/@annotation, "clearspeak:simple")'.split(";"),["Aliases","superscript-simple-exponent","self::superscript",'children/superscript/children/*[2][text()="2"] or children/superscript/children/*[2][text()="3"]','name(children/superscript/children/*[1])="identifier"'],'Aliases;superscript-simple-exponent;self::superscript;children/*[2][@role="implicit"];count(children/*[2]/children/*)=2;contains(children/*[2]/children/*[1]/@annotation, "simple");name(children/*[2]/children/*[2])="superscript";(name(children/*[2]/children/*[2]/children/*[1])="number" and contains(children/*[2]/children/*[2]/children/*[1]/@annotation, "clearspeak:simple")) or name(children/*[2]/children/*[2]/children/*[1])="identifier";children/*[2]/children/*[2]/children/*[2][text()="2"] or children/*[2]/children/*[2]/children/*[2][text()="3"]'.split(";"),'Rule;superscript-simple-function;Functions_None;[n] . (grammar:functions_none);self::superscript;name(children/*[1])="identifier";children/*[1][@role="simple function"];not(contains(@grammar, "functions_none"))'.split(";"),'Rule,superscript-ordinal,Exponent_Ordinal,[n] children/*[1]; [t] "à la"; [n] children/*[2] (grammar:ordinal); [t] "puissance" (pause:"medium"),self::superscript,name(children/*[2])="identifier",children/*[2][@role="latinletter"]'.split(","),'Rule,superscript-ordinal,Exponent_Ordinal,[n] children/*[1]; [t] "à la puissance"; [n] children/*[2]; [p] (pause:"medium"),self::superscript,name(children/*[2])="identifier",children/*[2][@role="latinletter"],CQFisCaptial'.split(","),'Rule{exponent{default{[n] text() (join:"-"); [t] "ième"{self::identifier{contains(@grammar, "ordinal")'.split("{"),'Rule;exponent;default;[t] CSFordinalExponent;self::number;@role="integer";contains(@grammar, "ordinal");text()!="0"'.split(";"),'Rule;exponent;Exponent_Ordinal;[t] CSFwordOrdinal;self::number;@role="integer";contains(@grammar, "ordinal");text()!="0"'.split(";"),'Rule;exponent;Exponent_Ordinal;[t] "zero";self::number;@role="integer";contains(@grammar, "ordinal");text()="0"'.split(";"),'Rule;exponent;Exponent_OrdinalPower;[t] CSFwordOrdinal;self::number;@role="integer";contains(@grammar, "ordinal");text()!="0"'.split(";"),'Rule;exponent;Exponent_OrdinalPower;[t] "zero";self::number;@role="integer";contains(@grammar, "ordinal");text()="0"'.split(";"),'Rule,square,default,[n] children/*[1]; [t] "au carré",self::superscript,children/*[2][text()="2"],name(children/*[1])!="text" or not(name(children/*[1])="text" and (name(../../../punctuated[@role="text"]/..)="stree" or name(..)="stree")),self::*,self::*'.split(","),'Rule,cube,default,[n] children/*[1]; [t] "au cube",self::superscript,children/*[2][text()="3"],name(children/*[1])!="text" or not(name(children/*[1])="text" and (name(../../../punctuated[@role="text"]/..)="stree" or name(..)="stree")),self::*,self::*'.split(","),'Rule;paren-simple;default;[n] children/*[1];self::fenced;@role="leftright";contains(children/*[1]/@annotation, "clearspeak:simple");name(../..)!="superscript" and name(../..)!="subscript"'.split(";"),'Rule;paren-simple-exp;default;[n] children/*[1];self::fenced;@role="leftright";name(../..)="superscript";children/*[1][@role="integer"] or children/*[1][@role="float"] or (children/*[1][@role="vulgar"] and contains(children/*[1]/@annotation, "clearspeak:simple")) or children/*[1][@role="latinletter"] or children/*[1][@role="greekletter"] or children/*[1][@role="otherletter"]'.split(";"),'Rule;paren-simple-nested-func;default;[n] children/*[1];self::fenced;@role="leftright";name(../*[1])="identifier" or name(../*[1])="function";parent::*/parent::*[@role="simple function" or @role="prefix function"];children/*[1][@role="simple function" or @role="prefix function"];contains(children/*[1]/children/*[2]/children/*[1]/@annotation, "clearspeak:simple") or name(children/*[1]/children/*[2]/children/*[1])="subscript" or name(children/*[1]/children/*[2]/children/*[1])="superscript" or children/*[1]/children/*[2]/children/*[1][@role="vulgar"] '.split(";"),'Rule{paren-simple-nested-func-no-bracket{Functions_None{[n] children/*[1];{self::fenced{@role="leftright"{name(../*[1])="identifier" or name(../*[1])="function"{parent::*/parent::*[@role="simple function" or @role="prefix function"]{children/*[1][@role="simple function" or @role="prefix function"]{name(children/*[1]/children/*[1])="identifier" or name(children/*[1]/children/*[1])="function"{contains(children/*[1]/children/*[2]/children/*[1]/@annotation, "clearspeak:simple"){name(children/*[1]/children/*[2]/children/*[1])="identifier" or name(children/*[1]/children/*[2]/children/*[1])="number"'.split("{"),'Rule,fences-open-close,default,[p] (pause:"short"); [n] content/*[1] (grammar:spokenFence); [p] (pause:"short"); [n] children/*[1]; [p] (pause:"short"); [n] content/*[2] (grammar:spokenFence); [p] (pause:"short"),self::fenced,@role="leftright"'.split(","),'Rule{paren-simple-nested-func{default{[p] (pause:"short"); [n] content/*[1]; [p] (pause:"short"); [n] children/*[1]; [p] (pause:"short"); [n] content/*[2]; [p] (pause:"short"){self::fenced{@role="leftright"{name(../*[1])="identifier" or name(../*[1])="function"{parent::*/parent::*[@role="simple function" or @role="prefix function"]{not(contains(children/*[1]/@annotation, "clearspeak:simple"))'.split("{"),'Rule{paren-simple-nested-func{Functions_None{[p] (pause:"short"); [n] content/*[1] (grammar:spokenFence); [p] (pause:"short"); [n] children/*[1]; [p] (pause:"short"); [n] content/*[2] (grammar:spokenFence); [p] (pause:"short"){self::fenced{@role="leftright"{name(../*[1])="identifier" or name(../*[1])="function"{parent::*/parent::*[@role="simple function" or @role="prefix function"]{children/*[1][@role="simple function" or @role="prefix function"]{contains(children/*[1]/children/*[2]/children/*[1]/@annotation, "clearspeak:simple") or name(children/*[1]/children/*[2]/children/*[1])="subscript" or name(children/*[1]/children/*[2]/children/*[1])="superscript" or children/*[1]/children/*[2]/children/*[1][@role="vulgar"] '.split("{"),["SpecializedRule","fences-open-close","default","Paren_Speak"],["Aliases","fences-open-close","self::fenced",'@role="composed function"'],["Rule","fence-silent","Paren_Silent",'[p] (pause:"short"); [n] children/*[1]; [p] (pause:"short")',"self::fenced"],'Rule,fences-open-close,ImpliedTimes_None,[p] (pause:"short"); [n] content/*[1] (grammar:spokenFence); [p] (pause:"short"); [n] children/*[1]; [p] (pause:"short"); [n] content/*[2] (grammar:spokenFence); [p] (pause:"short"),self::fenced,@role="leftright",parent::*/parent::*[@role!="simple function"],parent::*/parent::*[@role!="prefix function"]'.split(","),'Rule;fence-nesting;Paren_SpeakNestingLevel;[n] text() (grammar:insertNesting=CSFnestingDepth);self::fence;contains(@grammar, "spokenFence");CQFmatchingFences'.split(";"),["Rule","fence-no-nesting","Paren_SpeakNestingLevel","[n] text()","self::fence"],'Rule,fences-points,Paren_CoordPoint,[t] "le point avec coordonées"; [n] children/*[1],self::fenced,name(children/*[1])="punctuated",children/*[1][@role="sequence"]'.split(","),'Rule{fences-interval{Paren_Interval{[t] "un intervalle de"; [n] children/*[1]/children/*[1]; [t] "à"; [n] children/*[1]/children/*[3]; [p] (pause:"short"); [n] . (grammar:interval){self::fenced{not(contains(@grammar, "interval")){name(children/*[1])="punctuated"{children/*[1][@role="sequence"]{count(./children/*[1]/content/*)=1{children/*[1]/content/*[1][@role="comma"]'.split("{"),'Rule{interval-open{Paren_Interval{[t] "sans inclure"; [n] children/*[1]/children/*[1]; [t] "ni"; [n] children/*[1]/children/*[3]{self::fenced{contains(@grammar, "interval"){content/*[1]/text()="("{content/*[2]/text()=")"'.split("{"),'Rule{interval-closed-open{Paren_Interval{[t] "avec"; [n] children/*[1]/children/*[1]; [t] "inclus"; [p] (pause:"short"); [t] "mais sans inclure"; [n] children/*[1]/children/*[3]{self::fenced{contains(@grammar, "interval"){content/*[1]/text()="["{content/*[2]/text()=")"'.split("{"),'Rule{interval-open-closed{Paren_Interval{[t] "sans inclure"; [n] children/*[1]/children/*[1]; [p] (pause:"short"); [t] "mais avec"; [n] children/*[1]/children/*[3]; [t] "inclus"{self::fenced{contains(@grammar, "interval"){content/*[1]/text()="("{content/*[2]/text()="]"'.split("{"),'Rule{interval-closed{Paren_Interval{[t] "avec"; [n] children/*[1]/children/*[1]; [t] "et"; [n] children/*[1]/children/*[3]; [t] "inclus"{self::fenced{contains(@grammar, "interval"){content/*[1]/text()="["{content/*[2]/text()="]"'.split("{"),'Rule{interval-open-inf-r{Paren_Interval{[t] "sans inclure"; [n] children/*[1]/children/*[1]{self::fenced{contains(@grammar, "interval"){content/*[1]/text()="("{content/*[2]/text()=")"{children/*[1]/children/*[3]/text()="∞" or (name(children/*[1]/children/*[3])="prefixop" and children/*[1]/children/*[3]/children/*[1]/text()="∞")'.split("{"),'Rule{interval-open-inf-l{Paren_Interval{[t] "sans inclure"; [n] children/*[1]/children/*[3]{self::fenced{contains(@grammar, "interval"){content/*[1]/text()="("{content/*[2]/text()=")"{children/*[1]/children/*[1]/text()="∞" or (name(children/*[1]/children/*[1])="prefixop" and children/*[1]/children/*[1]/children/*[1]/text()="∞")'.split("{"),'Rule;interval-open-inf-lr;Paren_Interval;;self::fenced;contains(@grammar, "interval");content/*[1]/text()="(";content/*[2]/text()=")";children/*[1]/children/*[3]/text()="∞" or (name(children/*[1]/children/*[3])="prefixop" and children/*[1]/children/*[3]/children/*[1]/text()="∞");children/*[1]/children/*[1]/text()="∞" or (name(children/*[1]/children/*[1])="prefixop" and children/*[1]/children/*[1]/children/*[1]/text()="∞")'.split(";"),'Rule{interval-closed-open-inf{Paren_Interval{[t] "avec"; [n] children/*[1]/children/*[1]; [t] "inclus"{self::fenced{contains(@grammar, "interval"){content/*[1]/text()="["{content/*[2]/text()=")"{children/*[1]/children/*[3]/text()="∞" or (name(children/*[1]/children/*[3])="prefixop" and children/*[1]/children/*[3]/children/*[1]/text()="∞")'.split("{"),'Rule{interval-open-closed-inf{Paren_Interval{[t] "avec"; [n] children/*[1]/children/*[3]; [t] "inclus"{self::fenced{contains(@grammar, "interval"){content/*[1]/text()="("{content/*[2]/text()="]"{children/*[1]/children/*[1]/text()="∞" or (name(children/*[1]/children/*[1])="prefixop" and children/*[1]/children/*[1]/children/*[1]/text()="∞")'.split("{"),'Rule,paren-nested-embellished-funcs,Functions_None,[p] (pause:"short"); [n] content/*[1]; [p] (pause:"short"); [n] children/*[1]; [p] (pause:"short"); [n] content/*[2]; [p] (pause:"short"),self::fenced,@role="leftright",name(../..)="appl",name(children/*[1]) = "appl",preceding-sibling::*/descendant-or-self::*[@role="subsup"] or children/*[1]/descendant-or-self::*[@role="subsup"]'.split(","),'Rule;set-empty;default;[t] "ensemble vide";self::fenced;@role="set empty"'.split(";"),'Rule,set-extended,default,[t] "ensemble des"; [n] children/*[1]/children/*[1]; [t] "tel que"; [n] children/*[1]/children/*[3],self::fenced,@role="set extended"'.split(","),'Rule,set-collection,default,[t] "ensemble"; [n] children/*[1],self::fenced,@role="set collection"'.split(","),["Aliases","set-collection","self::fenced",'@role="set singleton"'],'Rule,set-extended,Sets_woAll,[t] "ensemble de"; [n] children/*[1]/children/*[1]; [t] "tel que"; [n] children/*[1]/children/*[3],self::fenced,@role="set extended"'.split(","),'Rule;set-collection;Sets_SilentBracket;[n] children/*[1];self::fenced;@role="set collection"'.split(";"),["Rule","subscript","default",'[p] (pause:short); [n] children/*[1]; [t] "sub"; [n] children/*[2]; [p] (pause:short)',"self::subscript"],'Rule,subscript-base,default,[n] children/*[1]; [t] "base"; [n] children/*[2],self::subscript,CQFisLogarithm'.split(","),'Rule{subscript-index{default{[n] children/*[1]; [t] "sub"; [n] children/*[2]{self::subscript{contains(@grammar, "simpleDet")'.split("{"),["Rule","fraction","default",'[p] (pause:short); [t] "fraction avec numérateur"; [n] children/*[1]; [p] (pause:short); [t] "et dénominateur"; [n] children/*[2]; [p] (pause:short)',"self::fraction"],'Rule,fraction,Functions_None,[p] (pause:short); [t] "fraction avec numérateur"; [n] children/*[1]; [p] (pause:short); [t] "et dénominateur"; [n] children/*[2]; [p] (pause:short),self::fraction,name(children/*[1])="appl" or name(children/*[2])="appl"'.split(","),'Rule{simple-fraction{default{[p] (pause:short); [n] children/*[1]; [t] "sur"; [n] children/*[2]; [p] (pause:short){self::fraction{contains(children/*[1]/@annotation, "clearspeak:simple") or contains(children/*[1]/@annotation, "clearspeak:unit"){contains(children/*[2]/@annotation, "clearspeak:simple") or contains(children/*[2]/@annotation, "clearspeak:unit")'.split("{"),'Rule,simple-vulgar-fraction,default,[p] (pause:short); [n] children/*[1]; [t] "sur"; [n] children/*[2]; [p] (pause:short),self::fraction,@role="vulgar"'.split(","),'Rule,simple-text-fraction,default,[p] (pause:short); [n] children/*[1]; [t] "sur"; [n] children/*[2]; [p] (pause:short),self::fraction,name(children/*[1])="text",name(children/*[2])="text"'.split(","),'Rule,simple-text-fraction,default,[p] (pause:short); [n] children/*[1]; [t] "sur"; [n] children/*[2]; [p] (pause:short),self::fraction,name(children/*[1])="infixop",children/*[1][@role="unit"],name(children/*[2])="text"'.split(","),'Rule;vulgar-fraction;default;[t] CSFvulgarFraction;self::fraction;@role="vulgar";CQFvulgarFractionSmall'.split(";"),["Rule","fraction","Fraction_Over",'[p] (pause:short); [n] children/*[1]; [t] "sur"; [n] children/*[2]; [p] (pause:short)',"self::fraction"],["Rule","fraction","Fraction_OverEndFrac",'[p] (pause:short); [n] children/*[1]; [t] "sur"; [n] children/*[2]; [p] (pause:short); [t] "fin fraction"; [p] (pause:short)',"self::fraction"],["Rule","fraction","Fraction_FracOver",'[p] (pause:short); [t] "fraction"; [n] children/*[1]; [t] "sur"; [n] children/*[2]; [p] (pause:short)',"self::fraction"],["Rule","fraction","Fraction_Per",'[p] (pause:short); [n] children/*[1]; [t] "par"; [n] children/*[2]; [p] (pause:short)',"self::fraction"],["Rule","fraction","Fraction_GeneralEndFrac",'[p] (pause:short); [t] "fraction avec numérateur"; [n] children/*[1]; [p] (pause:short); [t] "et dénominateur"; [n] children/*[2]; [p] (pause:short); [t] "fin fraction"; [p] (pause:short)',"self::fraction"],["Rule","fraction","Fraction_General",'[p] (pause:short); [t] "fraction avec numérateur"; [n] children/*[1]; [p] (pause:short); [t] "et dénominateur"; [n] children/*[2]; [p] (pause:short)',"self::fraction"],'Rule;simple-vulgar-fraction;Fraction_Ordinal;[t] CSFvulgarFraction;self::fraction;@role="vulgar"'.split(";"),'Rule{fraction{Fraction_EndFrac{[p] (pause:short); [n] . (grammar:endfrac); [t] "fin fraction"; [p] (pause:short){self::fraction{not(contains(@grammar, "endfrac")){not(contains(children/*[1]/@annotation, "clearspeak:unit")){not(contains(children/*[2]/@annotation, "clearspeak:unit"))'.split("{"),'Rule{vulgar-fraction{Fraction_EndFrac{[p] (pause:short); [n] children/*[1]; [t] "sur"; [n] children/*[2]; [p] (pause:short){self::fraction{name(children/*[1])="fraction"{name(children/*[2])="fraction"{contains(children/*[1]/@annotation, "clearspeak:simple"){contains(children/*[2]/@annotation, "clearspeak:simple")'.split("{"),'Rule;simple-vulgar-fraction;Fraction_EndFrac;[t] CSFvulgarFraction;self::fraction;@role="vulgar";contains(@annotation, "clearspeak:simple");self::*'.split(";"),["Rule","sqrt","default",'[t] "la racine carrée de"; [n] children/*[1] (grammar:EndRoot=false); [p] (pause:short)',"self::sqrt"],'Rule,sqrt-nested,default,[p] (pause: "short"); [t] "la racine carrée de"; [n] children/*[1] (grammar:EndRoot=false); [p] (pause:short),self::sqrt,not(preceding-sibling::*),ancestor::sqrt|ancestor::root'.split(","),'Rule,negative-sqrt,default,[t] "la racine carrée négative de"; [n] children/*[1]/children/*[1] (grammar:EndRoot=false); [p] (pause:short),self::prefixop,@role="negative",name(children/*[1])="sqrt"'.split(","),'Rule,negative-sqrt,default,[p] (pause: "short"); [t] "la racine carrée négative de"; [n] children/*[1]/children/*[1] (grammar:EndRoot=false); [p] (pause:short),self::prefixop,@role="negative",name(children/*[1])="sqrt",not(preceding-sibling::*),ancestor::sqrt|ancestor::root'.split(","),'Rule,sqrt-plus-minus,Roots_PosNegSqRoot,[t] "la racine carrée positive de"; [n] children/*[1] (grammar:EndRoot=false); [p] (pause:short),self::sqrt,parent::stree or not(parent::*/parent::infixop[@role="addition"]) or (parent::*/parent::*[1]/text()!="±" and parent::*/parent::*/text()!="∓")'.split(","),'Rule,sqrt-nested-plus-minus,Roots_PosNegSqRoot,[p] (pause: "short"); [t] "la racine carrée positive de"; [n] children/*[1] (grammar:EndRoot=false); [p] (pause:short),self::sqrt,not(preceding-sibling::*),ancestor::sqrt|ancestor::root,parent::stree or not(parent::*/parent::infixop[@role="addition"]) or (parent::*/parent::*[1]/text()!="±" and parent::*/parent::*/text()!="∓")'.split(","),'Rule,sqrt-plus-minus,Roots_PosNegSqRootEnd,[t] "la racine carrée positive de"; [n] children/*[1] (grammar:EndRoot=false); [p] (pause:short),self::sqrt,parent::stree or not(parent::*/parent::infixop[@role="addition"]) or (parent::*/parent::*[1]/text()!="±" and parent::*/parent::*/text()!="∓")'.split(","),'Rule,sqrt-nested-plus-minus,Roots_PosNegSqRootEnd,[p] (pause: "short"); [t] "la racine carrée positive de"; [n] children/*[1] (grammar:EndRoot=false); [p] (pause:short),self::sqrt,not(preceding-sibling::*),ancestor::sqrt|ancestor::root,parent::stree or not(parent::*/parent::infixop[@role="addition"]) or (parent::*/parent::*[1]/text()!="±" and parent::*/parent::*/text()!="∓")'.split(","),'Rule{sqrt-endroot{Roots_RootEnd{[n] . (grammar:EndRoot); [t] "fin racine"; [p] (pause:short){self::sqrt{not(contains(@grammar, "EndRoot"))'.split("{"),'Rule{negative-sqrt-endroot{Roots_RootEnd{[n] . (grammar:EndRoot); [t] "fin racine"; [p] (pause:short){self::prefixop{@role="negative"{name(children/*[1])="sqrt"{not(contains(@grammar, "EndRoot"))'.split("{"),'Rule{sqrt-endroot{Roots_PosNegSqRootEnd{[n] . (grammar:EndRoot); [t] "fin racine"; [p] (pause:short){self::sqrt{not(contains(@grammar, "EndRoot"))'.split("{"),'Rule{negative-sqrt-endroot{Roots_PosNegSqRootEnd{[n] . (grammar:EndRoot); [t] "fin racine"; [p] (pause:short){self::prefixop{@role="negative"{name(children/*[1])="sqrt"{not(contains(@grammar, "EndRoot"))'.split("{"),'Rule,cube,default,[t] "la racine cubique de"; [n] children/*[2] (grammar:EndRoot=false); [p] (pause:short),self::root,children/*[1][text()="3"]'.split(","),'Rule,cube-nested,default,[p] (pause:short); [t] "la racine cubique de"; [n] children/*[2] (grammar:EndRoot=false); [p] (pause:short),self::root,children/*[1][text()="3"],not(preceding-sibling::*),ancestor::sqrt|ancestor::root'.split(","),["Rule","root","default",'[t] "la"; [n] children/*[1] (grammar:ordinal); [t] "racine de"; [n] children/*[2] (grammar:EndRoot=false); [p] (pause:short)',"self::root"],'Rule,root-nested,default,[p] (pause:short); [t] "la"; [n] children/*[1] (grammar:ordinal); [t] "racine de"; [n] children/*[2] (grammar:EndRoot=false); [p] (pause:short),self::root,not(preceding-sibling::*),ancestor::sqrt|ancestor::root'.split(","),'Rule{root-endroot{Roots_RootEnd{[n] . (grammar:EndRoot); [t] "fin racine"; [p] (pause:short){self::root{not(contains(@grammar, "EndRoot"))'.split("{"),'Rule{root-endroot{Roots_PosNegSqRootEnd{[n] . (grammar:EndRoot); [t] "fin racine"; [p] (pause:short){self::root{not(contains(@grammar, "EndRoot"))'.split("{"),'Rule,negative,default,[t] "négatif"; [n] children/*[1],self::prefixop,@role="negative"'.split(","),'Rule,positive,default,[t] "positif"; [n] children/*[1],self::prefixop,@role="positive"'.split(","),`Rule,angle-measure,default,[t] "la mesure de l'" (join:""); [n] content/*[1]; [n] children/*[2] (grammar:angle),self::infixop,content/*[1]/text()="∠",children/*[1][text()="m"]`.split(","),["Rule","prefix","default","[m] content/* (grammar:prefix); [n] children/*[1]","self::prefixop"],["Rule","postfix","default","[n] children/*[1]; [m] content/* (grammar:postfix)","self::postfixop"],'Rule{set-prefix-operators{default{[t] "le"; [n] self::* (grammar:!prefix); [t] "de"{self::*{contains(@grammar,"prefix"){descendant-or-self::*/text()="∩" or descendant-or-self::*/text()="∪"{self::*{self::*{self::*'.split("{"),["Rule","binary-operation","default","[m] children/* (sepFunc:CTXFcontentIterator);","self::infixop"],'Rule,binary-operation,ImpliedTimes_MoreImpliedTimes,[m] children/* (sepFunc:CTXFcontentIterator);,self::infixop,@role="implicit"'.split(","),'Rule,binary-operation-pause,default,[p] (pause:short); [m] children/* (sepFunc:CTXFcontentIterator);,self::infixop,@role="implicit",name(children/*[1])="appl"'.split(","),'Rule,binary-operation-pause,default,[m] children/* (sepFunc:CTXFcontentIterator); [p] (pause:short),self::infixop,@role="implicit",name(children/*[last()])="appl"'.split(","),'Rule,binary-operation-pause,default,[p] (pause:short); [m] children/* (sepFunc:CTXFcontentIterator); [p] (pause:short),self::infixop,@role="implicit",name(children/*[1])="appl",name(children/*[last()])="appl"'.split(","),'Rule;implicit-times;default;[p] (pause:short);self::operator;@role="multiplication";text()="⁢"'.split(";"),'Rule implicit-times default  self::operator @role="multiplication" text()="⁢" CQFsimpleArguments'.split(" "),'Rule;implicit-times;default;[n] text();self::operator;@role="multiplication";text()="⁢";CQFfencedArguments'.split(";"),'Rule;implicit-times;ImpliedTimes_MoreImpliedTimes;[n] text();self::operator;@role="multiplication";text()="⁢"'.split(";"),'Rule implicit-times ImpliedTimes_None  self::operator @role="multiplication" text()="⁢"'.split(" "),'Rule{binary-operation-simple{default{[m] children/* (rate:"0.5"); [p] (pause:short){self::infixop{@role="implicit"{contains(@annotation, "clearspeak:simple"){not(contains(@grammar, "inFrac"))'.split("{"),'Rule;simple-in-fraction;default;[n] . (rate:"0.5",grammar:inFrac);self::*;contains(@annotation, "clearspeak:simple");not(contains(@grammar, "inFrac"));name(.)!="identifier";name(.)!="function";name(.)!="number";name(parent::*/parent::*)="fraction";not(preceding-sibling::*)'.split(";"),'Rule;operators-after-power;Exponent_AfterPower;[m] children/* (rate:"0.5");self::infixop;@role="implicit";contains(@grammar, "afterPower")'.split(";"),["Rule","relseq","default","[m] children/* (sepFunc:CTXFcontentIterator)","self::relseq"],["Rule","multrel","default","[m] children/* (sepFunc:CTXFcontentIterator)","self::multirel"],'Rule;natural-numbers;default;[t] "les nombres entier naturel";self::identifier;text()="ℕ" or (text()="N" and @font="double-struck");self::*;self::*;self::*'.split(";"),'Rule;integers;default;[t] "les nombres entiers";self::identifier;text()="ℤ" or (text()="Z" and @font="double-struck");self::*;self::*;self::*'.split(";"),'Rule;rational-numbers;default;[t] "les Nombres rationnels";self::identifier;text()="ℚ" or (text()="Q" and @font="double-struck");self::*;self::*;self::*'.split(";"),'Rule;real-numbers;default;[t] "les nombres réels";self::identifier;text()="ℝ" or (text()="R" and @font="double-struck");self::*;self::*;self::*'.split(";"),'Rule;complex-numbers;default;[t] "les nombres complexes";self::identifier;text()="ℂ" or (text()="C" and @font="double-struck");self::*;self::*;self::*'.split(";"),'Rule,natural-numbers-super,default,[t] "n" (join: "-"); [n] children/*[2] (grammar:numbers2alpha),self::superscript,children/*[1]/text()="ℕ" or (children/*[1]/text()="N" and children/*[1]/@font="double-struck"),self::*,self::*,self::*'.split(","),'Rule,integers-super,default,[t] "z" (join: "-"); [n] children/*[2] (grammar:numbers2alpha),self::superscript,children/*[1]/text()="ℤ" or (children/*[1]/text()="Z" and children/*[1]/@font="double-struck"),self::*,self::*,self::*'.split(","),'Rule,rational-numbers-super,default,[t] "q" (join: "-"); [n] children/*[2] (grammar:numbers2alpha),self::superscript,children/*[1]/text()="ℚ" or (children/*[1]/text()="Q" and children/*[1]/@font="double-struck"),self::*,self::*,self::*'.split(","),'Rule,real-numbers-super,default,[t] "r" (join:"-"); [n] children/*[2] (grammar:numbers2alpha),self::superscript,children/*[1]/text()="ℝ" or (children/*[1]/text()="R" and children/*[1]/@font="double-struck"),self::*,self::*,self::*'.split(","),'Rule,complex-numbers-super,default,[t] "c" (join:"-"); [n] children/*[2] (grammar:numbers2alpha),self::superscript,children/*[1]/text()="ℂ" or (children/*[1]/text()="C" and children/*[1]/@font="double-struck"),self::*,self::*,self::*'.split(","),'Rule;natural-numbers-with-zero;default;[t] "les nombres entiers naturel avec zero";self::subscript;children/*[1]/text()="ℕ" or (children/*[1]/text()="N" and children/*[1]/@font="double-struck");children/*[2]/text()="0"'.split(";"),'Rule;positive-integers;default;[t] "les nombres entiers positif";self::superscript;children/*[1]/text()="ℤ" or (children/*[1]/text()="Z" and children/*[1]/@font="double-struck");children/*[2]/text()="+";self::*;self::*;self::*'.split(";"),'Rule;positive-integers;default;[t] "les nombres entiers négatif";self::superscript;children/*[1]/text()="ℤ" or (children/*[1]/text()="Z" and children/*[1]/@font="double-struck");children/*[2]/text()="-";self::*;self::*;self::*'.split(";"),'Rule;positive-rational-numbers;default;[t] "les nombres rationnels positif";self::superscript;children/*[1]/text()="ℚ" or (children/*[1]/text()="Q" and children/*[1]/@font="double-struck");children/*[2]/text()="+";self::*;self::*;self::*'.split(";"),'Rule;negative-rational-numbers;default;[t] "les nombres rationnels négatif";self::superscript;children/*[1]/text()="ℚ" or (children/*[1]/text()="Q" and children/*[1]/@font="double-struck");children/*[2]/text()="-";self::*;self::*;self::*'.split(";"),'Rule,fences-neutral,default,[p] (pause:short); [t] "la valeur absolue de"; [n] children/*[1]; [p] (pause: short),self::fenced,@role="neutral",content/*[1][text()]="|" or content/*[1][text()]="❘" or content/*[1][text()]="｜"'.split(","),'Rule,fences-neutral,AbsoluteValue_AbsEnd,[p] (pause:short); [t] "la valeur absolue de"; [n] children/*[1]; [p] (pause: short); [t] "fin de valeur absolue"; [p] (pause: short),self::fenced,@role="neutral",content/*[1][text()]="|" or content/*[1][text()]="❘" or content/*[1][text()]="｜"'.split(","),'Rule,fences-neutral,AbsoluteValue_Cardinality,[p] (pause:short); [t] "la cardinalité de"; [n] children/*[1]; [p] (pause: short),self::fenced,@role="neutral",content/*[1][text()]="|" or content/*[1][text()]="❘" or content/*[1][text()]="｜"'.split(","),'Rule,fences-neutral,AbsoluteValue_Determinant,[p] (pause:short); [t] "le déterminant de"; [n] children/*[1]; [p] (pause: short),self::fenced,@role="neutral",content/*[1][text()]="|" or content/*[1][text()]="❘" or content/*[1][text()]="｜"'.split(","),["Rule","matrix","default",'[t] "la matrice de dimension"; [t] count(children/*);  [t] "par";[t] count(children/*[1]/children/*); [p] (pause:long); [m] children/* (ctxtFunc:CTXFnodeCounter,context:"rangée-:"); [p] (pause:long)',"self::matrix"],'Rule{matrix-simple{default{[t] "la matrice de dimension"; [t] count(children/*);  [t] "par";[t] count(children/*[1]/children/*);  [p] (pause:long); [m] children/* (ctxtFunc:CTXFnodeCounter,context:"rangée-:",grammar:simpleDet); [p] (pause:long){self::matrix{count(children/*)<4{count(children/*[1]/children/*)<4{CQFcellsSimple'.split("{"),'Rule,matrix-trivial,default,[t] "la matrice de dimension 1 par 1 avec élément"; [n] children/*[1]; [p] (pause:long),self::vector,@role="squarematrix"'.split(","),'Rule{determinant{default{[t] "le déterminant de la matrice de dimension"; [t] count(children/*); [t] "par"; [t] count(children/*[1]/children/*); [p] (pause:long); [m] children/* (ctxtFunc:CTXFnodeCounter,context:"rangée-:",grammar:simpleDet); [p] (pause:long){self::matrix{@role="determinant"{count(children/*)<4{CQFcellsSimple'.split("{"),'Rule{determinant-simple{default{[t] "le déterminant de la matrice de dimension"; [t] count(children/*);  [t] "par"; [t] count(children/*[1]/children/*); [p] (pause:long); [m] children/* (ctxtFunc:CTXFnodeCounter,context:"rangée-:"); [p] (pause:long){self::matrix{@role="determinant"'.split("{"),["Rule","matrix-vector","default",'[t] "la matrice colonne de dimension"; [t] count(children/*); [t] "par"; [t] count(children/*[1]/children/*); [p] (pause:long); [m] children/* (ctxtFunc:CTXFnodeCounter,context:"rangée-:",grammar:simpleDet); [p] (pause:long)',"self::vector"],["SpecializedRule","matrix-vector","default","Matrix_SpeakColNum"],'Rule{matrix-vector-simple{default{[t] "la matrice colonne de dimension"; [t] count(children/*); [t] "par"; [t] count(children/*[1]/children/*); [p] (pause:long); [m] children/* (sepFunc:CTXFpauseSeparator,separator:"short",grammar:simpleDet); [p] (pause:long){self::vector{count(children/*)<4{CQFcellsSimple{@role!="squarematrix"'.split("{"),["Rule","matrix-vector-simple","Matrix_SilentColNum",'[t] "la matrice colonne de dimension"; [t] count(children/*); [t] "par"; [t] count(children/*[1]/children/*); [p] (pause:long); [m] children/* (sepFunc:CTXFpauseSeparator,separator:"short",grammar:simpleDet); [p] (pause:long)',"self::vector"],'Rule{matrix-row-vector{default{[t] "la matrice ligne de dimension"; [t] count(children/*); [t] "par"; [t] count(children/*[1]/children/*); [p] (pause:long); [m] children/*[1]/children/* (ctxtFunc:CTXFnodeCounter,context:"colonne-:",grammar:simpleDet); [p] (pause:long){self::matrix{@role="rowvector"'.split("{"),["SpecializedRule","matrix-row-vector","default","Matrix_SpeakColNum"],'Rule{matrix-row-vector-simple{default{[t] "la matrice ligne de dimension"; [t] count(children/*); [t] "par"; [t] count(children/*[1]/children/*); [p] (pause:long); [m] children/*[1]/children/* (sepFunc:CTXFpauseSeparator,separator:"short",grammar:simpleDet); [p] (pause:long){self::matrix{@role="rowvector"{count(children/*[1]/children/*)<4{CQFcellsSimple'.split("{"),'Rule{matrix-row-vector-simple{Matrix_SilentColNum{[t] "la matrice ligne de dimension"; [t] count(children/*); [t] "par"; [t] count(children/*[1]/children/*); [p] (pause:long); [m] children/*[1]/children/* (sepFunc:CTXFpauseSeparator,separator:"short",grammar:simpleDet); [p] (pause:long){self::matrix{@role="rowvector"'.split("{"),'Rule;matrix-row-simple;default;[m] children/* (sepFunc:CTXFpauseSeparator,separator:"short");self::row;contains(@grammar, "simpleDet")'.split(";"),["Rule","matrix-row-simple","Matrix_SilentColNum",'[m] children/* (sepFunc:CTXFpauseSeparator,separator:"short")',"self::row"],'Rule;line-simple;default;[n] children/*[1];self::line;contains(@grammar, "simpleDet")'.split(";"),["Rule","matrix-row","default",'[m] children/* (ctxtFunc:CTXFnodeCounter,context:"colonne-,- ",sepFunc:CTXFpauseSeparator,separator:"medium"); [p] (pause:long)',"self::row"],["SpecializedRule","matrix-row","default","Matrix_SpeakColNum"],["Rule","matrix-cell","default","[n] children/*[1]","self::cell"],'Rule{matrix-end-matrix{Matrix_EndMatrix{[n] . (grammar:EndMatrix); [t] "fin matrice"{self::matrix{not(contains(@grammar, "EndMatrix"))'.split("{"),'Rule{matrix-end-vector{Matrix_EndMatrix{[n] . (grammar:EndMatrix); [t] "fin matrice"{self::vector{not(contains(@grammar, "EndMatrix"))'.split("{"),'Rule{matrix-end-determinant{Matrix_EndMatrix{[n] . (grammar:EndMatrix); [t] "fin déterminant"{self::matrix{@role="determinant"{not(contains(@grammar, "EndMatrix"))'.split("{"),["Rule","vector","Matrix_Vector",'[t] "le vecteur colonne de dimension"; [t] count(children/*); [t] "par"; [t] count(children/*[1]/children/*); [p] (pause:long); [m] children/* (ctxtFunc:CTXFnodeCounter,context:"rangée-:",grammar:simpleDet); [p] (pause:long)',"self::vector"],["SpecializedRule","vector","Matrix_Vector","Matrix_EndVector"],'Rule{vector-simple{Matrix_Vector{[t] "le vecteur colonne de dimension"; [t] count(children/*); [t] "par";  [t] count(children/*[1]/children/*); [p] (pause:long); [m] children/* (sepFunc:CTXFpauseSeparator,separator:"short",grammar:simpleDet); [p] (pause:long){self::vector{count(children/*)<4{CQFcellsSimple'.split("{"),["SpecializedRule","vector-simple","Matrix_Vector","Matrix_EndVector"],'Rule{row-vector{Matrix_Vector{[t] "le vecteur ligne de dimension"; [t] count(children/*); [t] "par"; [t] count(children/*[1]/children/*); [p] (pause:long); [m] children/*[1]/children/* (ctxtFunc:CTXFnodeCounter,context:"colonne-:",grammar:simpleDet); [p] (pause:long){self::matrix{@role="rowvector"'.split("{"),["SpecializedRule","row-vector","Matrix_Vector","Matrix_EndVector"],'Rule{row-vector-simple{Matrix_Vector{[t] "le vecteur ligne de dimension"; [t] count(children/*); [t] "par"; [t] count(children/*[1]/children/*); [p] (pause:long); [m] children/*[1]/children/* (sepFunc:CTXFpauseSeparator,separator:"short",grammar:simpleDet); [p] (pause:long){self::matrix{@role="rowvector"{count(children/*[1]/children/*)<4{CQFcellsSimple'.split("{"),["SpecializedRule","row-vector-simple","Matrix_Vector","Matrix_EndVector"],'Rule{vector-end-matrix{Matrix_EndVector{[n] . (grammar:EndMatrix); [t] "fin matrice"{self::matrix{not(contains(@grammar, "EndMatrix")){self::*'.split("{"),'Rule{vector-end-vector{Matrix_EndVector{[n] . (grammar:EndMatrix); [t] "fin vecteur"{self::vector{not(contains(@grammar, "EndMatrix")){self::*'.split("{"),'Rule{vector-end-vector{Matrix_EndVector{[n] . (grammar:EndMatrix); [t] "fin vecteur"{self::matrix{@role="rowvector"{not(contains(@grammar, "EndMatrix")){self::*'.split("{"),'Rule{vector-end-determinant{Matrix_EndVector{[n] . (grammar:EndMatrix); [t] "fin déterminant"{self::matrix{@role="determinant"{not(contains(@grammar, "EndMatrix")){self::*'.split("{"),'Rule,binomial,Matrix_Combinatoric,[n] children/*[2]/children/*[1]; [t] "parmi"; [n] children/*[1]/children/*[1]; ,self::vector,@role="binomial"'.split(","),'Rule{lines-summary{default{[p] (pause:short); [t] count(children/*); [t] "lignes";  [n] . (grammar:layoutSummary){self::multiline{not(contains(@grammar, "layoutSummary")){self::*'.split("{"),'Rule;lines-summary;MultiLineOverview_None;[n] . (grammar:layoutSummary);self::multiline;not(contains(@grammar, "layoutSummary"));self::*'.split(";"),["Aliases","lines-summary","self::table",'not(contains(@grammar, "layoutSummary"))'],'Rule{cases-summary{default{[p] (pause:short); [t] count(children/*); [t] "cas";  [n] . (grammar:layoutSummary){self::cases{not(contains(@grammar, "layoutSummary"))'.split("{"),'Rule;cases-summary;MultiLineOverview_None;[n] . (grammar:layoutSummary);self::cases;not(contains(@grammar, "layoutSummary"));self::*'.split(";"),["Rule","lines","default",'[p] (pause:short); [m] children/* (ctxtFunc:CTXFnodeCounter,context:"Ligne-:",sepFunc:CTXFpauseSeparator,separator:"long"); [p] (pause:long)',"self::table"],["Aliases","lines","self::multiline"],["Rule","line","default","[n] children/*[1]","self::line"],'Rule;row-medium;default;[m] children/* (sepFunc:CTXFpauseSeparator,separator:"medium");self::row;@role="table"'.split(";"),["Aliases","row-medium","self::row",'@role="cases"'],'Rule;row-long;MultiLinePausesBetweenColumns_Long;[m] children/* (sepFunc:CTXFpauseSeparator,separator:"long");self::row;@role="table"'.split(";"),["Aliases","row-long","self::row",'@role="cases"'],'Rule;row-short;MultiLinePausesBetweenColumns_Short;[m] children/* (sepFunc:CTXFpauseSeparator,separator:"short");self::row;@role="table"'.split(";"),["Aliases","row-short","self::row",'@role="cases"'],'Rule;blank-cell;default;[t] "vide";self::cell;count(children/*)=0'.split(";"),'Rule;blank-empty;default;[t] "vide";self::empty;count(../*)=1;name(../..)="cell" or name(../..)="line"'.split(";"),["Rule","cases","default",'[p] (pause:short);  [m] children/* (ctxtFunc:CTXFnodeCounter,context:"Cas-:",sepFunc:CTXFpauseSeparator,separator:"long"); [p] (pause:long)',"self::cases"],'Rule{lines-cases-summary{MultiLineLabel_Case{[p] (pause:short); [t] count(children/*); [t] "cas";  [n] . (grammar:layoutSummary){self::multiline{not(contains(@grammar, "layoutSummary"))'.split("{"),["Aliases","lines-cases-summary","self::table",'not(contains(@grammar, "layoutSummary"))'],["Rule","lines-cases","MultiLineLabel_Case",'[p] (pause:short); [m] children/* (ctxtFunc:CTXFnodeCounter,context:"Cas-:",sepFunc:CTXFpauseSeparator,separator:"long"); [p] (pause:long)',"self::table"],["Aliases","lines-cases","self::multiline"],'Rule{lines-equations-summary{MultiLineLabel_Equation{[p] (pause:short); [t] count(children/*); [t] "équations";  [n] . (grammar:layoutSummary){self::multiline{not(contains(@grammar, "layoutSummary"))'.split("{"),["Aliases","lines-equations-summary","self::table",'not(contains(@grammar, "layoutSummary"))'],["Rule","lines-equations","MultiLineLabel_Equation",'[p] (pause:short); [m] children/* (ctxtFunc:CTXFnodeCounter,context:"Équation-:",sepFunc:CTXFpauseSeparator,separator:"long"); [p] (pause:long)',"self::table"],["Aliases","lines-equations","self::multiline"],'Rule{lines-steps-summary{MultiLineLabel_Step{[p] (pause:short); [t] count(children/*); [t] " étapes";  [n] . (grammar:layoutSummary){self::multiline{not(contains(@grammar, "layoutSummary"))'.split("{"),["Aliases","lines-steps-summary","self::table",'not(contains(@grammar, "layoutSummary"))'],["Rule","lines-steps","MultiLineLabel_Step",'[p] (pause:short); [m] children/* (ctxtFunc:CTXFnodeCounter,context:" Étape-:",sepFunc:CTXFpauseSeparator,separator:"long"); [p] (pause:long)',"self::table"],["Aliases","lines-steps","self::multiline"],'Rule{lines-rows-summary{MultiLineLabel_Row{[p] (pause:short); [t] count(children/*); [t] "colonnes";  [n] . (grammar:layoutSummary){self::multiline{not(contains(@grammar, "layoutSummary"))'.split("{"),["Aliases","lines-rows-summary","self::table",'not(contains(@grammar, "layoutSummary"))'],["Rule","lines-rows","MultiLineLabel_Row",'[p] (pause:short); [m] children/* (ctxtFunc:CTXFnodeCounter,context:"rangée-:",sepFunc:CTXFpauseSeparator,separator:"long"); [p] (pause:long)',"self::table"],["Aliases","lines-rows","self::multiline"],'Rule{lines-constraints-summary{MultiLineLabel_Constraint{[p] (pause:short); [t] count(children/*); [t] "contraintes";  [n] . (grammar:layoutSummary){self::multiline{not(contains(@grammar, "layoutSummary"))'.split("{"),["Aliases","lines-constraints-summary","self::table",'not(contains(@grammar, "layoutSummary"))'],["Rule","lines-constraints","MultiLineLabel_Constraint",'[p] (pause:short); [m] children/* (ctxtFunc:CTXFnodeCounter,context:"Contrainte-:",sepFunc:CTXFpauseSeparator,separator:"long"); [p] (pause:long)',"self::table"],["Aliases","lines-constraints","self::multiline"],'Rule{lines-none{MultiLineLabel_None{[p] (pause:short); [m] children/* (sepFunc:CTXFpauseSeparator,separator:"long"); [p] (pause:long){self::table{contains(@grammar, "layoutSummary")'.split("{"),["Aliases","lines-none","self::multiline",'contains(@grammar, "layoutSummary")'],["Aliases","lines-none","self::cases",'contains(@grammar, "layoutSummary")'],["Rule","bigop","default",'[t] "le"; [n] children/*[1]; [t] "de"; [n] children/*[2]; [p] (pause:short)',"self::bigop"],["Rule","limboth","default",'[n] children/*[1]; [t] "de"; [n] children/*[2];[t] "à"; [n] children/*[3];',"self::limboth"],["Rule","limlower","default",'[n] children/*[1]; [t] "sur"; [n] children/*[2]; [p] (pause:short)',"self::limlower"],["Rule","limupper","default",'[n] children/*[1]; [t] "sous"; [n] children/*[2]; [p] (pause:short)',"self::limupper"],["Rule","integral","default",'[t] "le"; [n] children/*[1]; [t] "de"; [n] children/*[2]; [p] (pause:short)',"self::integral"],["Rule","overscript","default",'[n] children/*[1]; [t] "sous"; [n] children/*[2]; [p] (pause:short)',"self::overscore"],'Rule,overscript,default,[n] children/*[1]; [n] children/*[2];,self::overscore,children/*[2][@role="overaccent"]'.split(","),'Rule,overscript-limits,default,[n] children/*[1]; [t] "à"; [n] children/*[2],self::overscore,children/*[2][@role!="overaccent"],name(children/*[1])="underscore",children/*[1]/children/*[2][@role!="underaccent"]'.split(","),["Rule","underscript","default",'[n] children/*[1]; [t] "sur"; [n] children/*[2]; [p] (pause:short)',"self::underscore"],'Rule,underscript-limits,default,[n] children/*[1]; [t] "de"; [n] children/*[2],self::underscore,@role="underover",children/*[2][@role!="underaccent"]'.split(","),["Rule","number","default","[n] text()","self::number"],'Rule,mixed-number,default,[n] children/*[1]; [t] "et"; [n] children/*[2]; ,self::number,@role="mixed"'.split(","),'Rule{number-with-chars{default{[t] "nombre"; [m] CQFspaceoutNumber (grammar:protected){self::number{@role="othernumber"{"" != translate(text(), "0123456789.,", ""){not(contains(@grammar, "protected"))'.split("{"),'Rule,decimal-period,default,[t] "la décimale"; [n] children/*[1] (grammar:spaceout); [t] "virgule suivi par les chiffres répétés";  [n] children/*[3]/children/*[1] (grammar:spaceout),self::punctuated,@role="sequence",count(./content/*)=1,./content/*[1][@role="fullstop"],name(children/*[1])="number",children/*[1][@role="integer"],name(children/*[3])="overscore",children/*[3][@role="integer"],children/*[3]/children/*[2][@role="overaccent"],children/*[3]/children/*[2][text()="¯" or text()="￣" or text()="＿" or text()="_" or text()="‾"]'.split(","),'Rule,decimal-period,default,[t] "la décimale"; [n] children/*[1] (grammar:spaceout); [t] "suivi par les chiffres répétés";  [n] children/*[2]/children/*[1] (grammar:spaceout);,self::infixop,@role="implicit",count(./children/*)=2,name(children/*[1])="number",children/*[1][@role="float"],name(children/*[2])="overscore",children/*[2][@role="integer"],children/*[2]/children/*[2][@role="overaccent"],children/*[2]/children/*[2][text()="¯" or text()="￣" or text()="＿" or text()="_" or text()="‾"]'.split(","),'Rule,decimal-period-singular,default,[t] "la décimale"; [n] children/*[1] (grammar:spaceout); [t] "virgule suivi par le chiffre répété";  [n] children/*[3]/children/*[1] (grammar:spaceout),self::punctuated,@role="sequence",count(./content/*)=1,./content/*[1][@role="fullstop"],name(children/*[1])="number",children/*[1][@role="integer"],name(children/*[3])="overscore",children/*[3][@role="integer"],children/*[3]/children/*[2][@role="overaccent"],children/*[3]/children/*[2][text()="¯" or text()="￣" or text()="＿" or text()="_" or text()="‾"],string-length(./children/*[3]/children/*[1]/text())=1'.split(","),'Rule,decimal-period-singular,default,[t] "la décimale"; [n] children/*[1] (grammar:spaceout); [t] "suivi par le chiffre répété";  [n] children/*[2]/children/*[1] (grammar:spaceout);,self::infixop,@role="implicit",count(./children/*)=2,name(children/*[1])="number",children/*[1][@role="float"],name(children/*[2])="overscore",children/*[2][@role="integer"],children/*[2]/children/*[2][@role="overaccent"],children/*[2]/children/*[2][text()="¯" or text()="￣" or text()="＿" or text()="_" or text()="‾"],string-length(./children/*[2]/children/*[1]/text())=1'.split(","),'Rule;number-with-spaces;default;[m] CQFspaceoutNumber (grammar:!spaceout:number);self::number;contains(@grammar, "spaceout")'.split(";"),'Rule;decimal-point;default;[t] "point";self::punctuation;@role="fullstop";contains(@grammar,"number")'.split(";"),'Rule,line-segment,default,[t] "le segment"; [n] children/*[1]/children/*[1]; [n] children/*[1]/children/*[2]; [p] (pause:short),self::overscore,@role="implicit",children/*[2][@role="overaccent"],children/*[2][text()="¯" or text()="￣" or text()="＿" or text()="_" or text()="‾"],name(children/*[1])="infixop",count(./children/*[1]/children/*)=2'.split(","),'Rule,conjugate,Bar_Conjugate,[t] "le complexe conjugué de"; [n] children/*[1],self::overscore,children/*[2][@role="overaccent"],children/*[2][text()="¯" or text()="￣" or text()="＿" or text()="_" or text()="‾"]'.split(","),'Rule;defined-by;default;[t] "est défini par" (pause:short);self::overscore;@role="equality";@embellished="relation";name(children/*[2])="text";children/*[2][text()]="def"'.split(";"),'Rule,adorned-sign,default,[t] "signe"; [n] children/*[1] ; [t] "avec"; [n] children/*[2]; [t] "dessus",self::overscore,@embellished,name(children/*[1])="operator" or name(children/*[1])="relation"'.split(","),'Rule;factorial;default;[t] "factorielle";self::punctuation;text()="!";name(preceding-sibling::*[1])!="text"'.split(";"),["Rule","tensor-base","default","[n] children/*[2]; [n] children/*[3]; [n] children/*[1]; [n] children/*[4]; [n] children/*[5]","self::tensor"],'Rule{left-super{default{[t] "exposant gauche"; [n] text(){self::*[@role="leftsuper"]{not(contains(@grammar,"combinatorics"))'.split("{"),'Rule{left-super{default{[t] "exposant gauche"; [m] children/*{self::punctuated{@role="leftsuper"{not(contains(@grammar,"combinatorics"))'.split("{"),'Rule{left-sub{default{[t] "indice gauche"; [n] text(){self::*[@role="leftsub"]{not(contains(@grammar,"combinatorics"))'.split("{"),'Rule{left-sub{default{[t] "indice gauche"; [m] children/*{self::punctuated{@role="leftsub"{not(contains(@grammar,"combinatorics"))'.split("{"),'Rule{right-super{default{[t] "exposant droite"; [n] text(){self::*[@role="rightsuper"]{not(contains(@grammar,"combinatorics"))'.split("{"),'Rule{right-super{default{[t] "exposant droite"; [m] children/*{self::punctuated{@role="rightsuper"{not(contains(@grammar,"combinatorics"))'.split("{"),'Rule{right-sub{default{[t] "indice droite"; [n] text(){self::*[@role="rightsub"]{not(contains(@grammar,"combinatorics"))'.split("{"),'Rule{right-sub{default{[t] "indice droite"; [m] children/*{self::punctuated{@role="rightsub"{not(contains(@grammar,"combinatorics"))'.split("{"),'Rule;empty-index;default;[p] (pause:medium);self::empty;@role="rightsub" or @role="rightsuper" or @role="leftsub" or @role="leftsuper"'.split(";"),'Rule,combinatorics,default,[n] children/*[2] (grammar:combinatorics); [n] children/*[1]; [n] children/*[4] (grammar:combinatorics),self::tensor,name(children/*[3])="empty",name(children/*[5])="empty",children/*[1][text()="P" or text()="C"]'.split(","),'Rule,choose,CombinationPermutation_ChoosePermute,[t] "combinaison de"; [n] children/*[3] (grammar:combinatorics); [t] "parmi"; [n] children/*[4] (grammar:combinatorics),self::tensor,name(children/*[3])="empty",name(children/*[5])="empty",children/*[1][text()="C"]'.split(","),'Rule,permute,CombinationPermutation_ChoosePermute,[t] "permutation de"; [n] children/*[2] (grammar:combinatorics); [t] "parmi"; [n] children/*[4] (grammar:combinatorics),self::tensor,name(children/*[3])="empty",name(children/*[5])="empty",children/*[1][text()="P"]'.split(",")]},sre.Grammar.getInstance().setPreprocessor("numbers2alpha",sre.ClearspeakUtil.numbersToAlpha),sre.ClearspeakGerman={locale:"de",domain:"clearspeak",functions:[["CTXF","CTXFpauseSeparator",sre.StoreUtil.pauseSeparator],["CTXF","CTXFnodeCounter",sre.ClearspeakUtil.nodeCounter],["CTXF","CTXFcontentIterator",sre.StoreUtil.contentIterator],["CSF","CSFvulgarFraction",sre.NumbersUtil.vulgarFraction],["CQF","CQFvulgarFractionSmall",sre.ClearspeakUtil.isSmallVulgarFraction],["CQF","CQFcellsSimple",sre.ClearspeakUtil.allCellsSimple],["CSF","CSFwordOrdinal",sre.ClearspeakUtil.wordOrdinal],["CQF","CQFisCapital",sre.ClearspeakUtil.isCapitalLetter],["CQF","CQFmatchingFences",sre.ClearspeakUtil.matchingFences],["CSF","CSFnestingDepth",sre.ClearspeakUtil.nestingDepth],["CQF","CQFfencedArguments",sre.ClearspeakUtil.fencedArguments],["CQF","CQFsimpleArguments",sre.ClearspeakUtil.simpleArguments],["CQF","CQFisHyperbolic",sre.ClearspeakUtil.isHyperbolic],["CQF","CQFisLogarithm",sre.ClearspeakUtil.isLogarithmWithBase],["CQF","CQFspaceoutNumber",sre.MathspeakUtil.spaceoutNumber]],rules:['Rule{collapsed{default{[t] "kollapiert"; [n] . (engine:modality=summary,grammar:collapsed){self::*{@alternative{not(contains(@grammar, "collapsed")){self::*{self::*{self::*{self::*{self::*'.split("{"),["Rule","stree","default","[n] ./*[1]","self::stree"],["Rule","unknown","default","[n] text()","self::unknown"],'Rule;protected;default;[t] text();self::number;contains(@grammar, "protected")'.split(";"),["Rule","omit-empty","default",'[p] (pause:"short")',"self::empty"],'Rule{font{default{[t] @font (grammar:localFont); [n] self::* (grammar:ignoreFont=@font,pause:"short"){self::*{name(self::*)!="number"{@font{not(contains(@grammar, "ignoreFont")){@font!="normal"'.split("{"),["SpecializedRule","font","default","Caps_SayCaps"],'Rule{font-number{default{[t] @font (grammar:localFontNumber); [n] . (grammar:ignoreFont=@font){self::number{@font{not(contains(@grammar, "ignoreFont")){@font!="normal"'.split("{"),'Rule{font-identifier{default{[t] @font (grammar:localFont); [n] self::* (grammar:ignoreFont=@font,pause:"short"){self::identifier{string-length(text())=1 or string-length(text())=2{@font{@font="normal"{not(contains(@grammar, "ignoreFont")){@role!="unit"'.split("{"),["SpecializedRule","font-identifier","default","Caps_SayCaps"],'Rule;omit-font;default;[n] self::* (grammar:ignoreFont=@font);self::identifier;string-length(text())=1 or string-length(text())=2;@font;not(contains(@grammar, "ignoreFont"));@font="italic";self::*'.split(";"),["SpecializedRule","omit-font","default","Caps_SayCaps"],'Rule{font-double-struck{default{[n] . (grammar:ignoreFont=@font); [t] @font (grammar:localFont){self::*{name(self::*)!="number"{string-length(text())=1 or string-length(text())=2{@font{not(contains(@grammar, "ignoreFont")){@font="double-struck"'.split("{"),["SpecializedRule","font-double-struck","default","Caps_SayCaps"],'Rule{font-number-double-struck{default{[n] . (grammar:ignoreFont=@font); [t] @font (grammar:localFontNumber){self::number{string-length(text())=1 or string-length(text())=2{@font{not(contains(@grammar, "ignoreFont")){@font="double-struck"'.split("{"),["Rule","text","default","[n] text()","self::text"],'Rule;capital;default;[n] text() (pitch:0.6,grammar:ignoreCaps="großes");self::identifier;@role="latinletter" or @role="greekletter" or @role="simple function";CQFisCapital'.split(";"),'Rule;capital;Caps_SayCaps;[n] text();self::identifier;@role="latinletter" or @role="greekletter";CQFisCapital'.split(";"),'Rule{capital{Caps_SayCaps{[p] (pause:"short"); [n] text(){self::identifier{@role="latinletter" or @role="greekletter"{CQFisCapital{preceding-sibling::*[1]{not(name(preceding-sibling::*[1])="function"){not(contains(@grammar, "angle"))'.split("{"),'Rule;capital;Caps_SayCaps;[n] text() (pause:"short");self::identifier;@role="latinletter" or @role="greekletter";CQFisCapital;following-sibling::*[1]'.split(";"),'Rule{capital{Caps_SayCaps{[p] (pause:"short"); [n] text() (pause:"short"){self::identifier{@role="latinletter" or @role="greekletter"{CQFisCapital{preceding-sibling::*[1]{following-sibling::*[1]{not(name(preceding-sibling::*[1])="function"){not(contains(@grammar, "angle"))'.split("{"),'Rule,punctuation-lr,default,[p] (pause:"short"); [n] text() (pause:"short"),self::punctuation,@role="comma"'.split(","),'Rule;punctuation;default;[n] text();self::punctuation;@role="comma";not(preceding-sibling::*[1]/children);not(following-sibling::*[1]/children)'.split(";"),'Rule,punctuation-l,default,[p] (pause:"short"); [n] text(),self::punctuation,@role="comma",not(following-sibling::*[1]/children)'.split(","),'Rule;punctuation-r;default;[n] text() (pause:"short");self::punctuation;@role="comma";not(preceding-sibling::*[1]/children)'.split(";"),'Rule;ellipsis;Ellipses_AndSoOn;[t] "und so weiter";self::punctuation;@role="ellipsis";not(following-sibling::*[1]);not(preceding-sibling::*[last()][@role="ellipsis"])'.split(";"),'Rule;ellipsis;Ellipses_AndSoOn;[t] "und so weiter bis";self::punctuation;@role="ellipsis";preceding-sibling::*[1];following-sibling::*[1]'.split(";"),'Rule,vbar-evaluated,default,[n] children/*[1]; [p] (pause:"short"); [t] "ausgewertet für"; [n] content/*[1]/children/*[2]; [p] (pause:"short"),self::punctuated,@role="endpunct",content/*[1][@role="vbar"],content/*[1][@embellished],name(content/*[1])="subscript"'.split(","),'Rule,vbar-evaluated,default,[n] children/*[1]; [p] (pause:"short"); [t] "ausgewertet für"; [n] content/*[1]/children/*[2]; [p] (pause:"short"); [t] "minus des gleichen Ausdrucks ausgewertet für"; [n] content/*[1]/children/*[1]/children/*[2]; [p] (pause:"short"),self::punctuated,@role="endpunct",content/*[1][@role="vbar"],content/*[1][@embellished],name(content/*[1])="superscript",name(content/*[1]/children/*[1])="subscript"'.split(","),'Rule;vbar-such-that;VerticalLine_SuchThat;[t] "so dass";self::punctuation;@role="vbar";not(parent::*/parent::*[@embellished="punctuation"])'.split(";"),'Rule;vbar-such-that;VerticalLine_Divides;[t] "teilt";self::punctuation;@role="vbar";not(parent::*/parent::*[@embellished="punctuation"])'.split(";"),'Rule;vbar-such-that;VerticalLine_Given;[t] "für die gilt";self::punctuation;@role="vbar";not(parent::*/parent::*[@embellished="punctuation"])'.split(";"),'Rule;set-member;default;[t] "in";self::operator;@role="set extended";text()="∈" or text()="∊"'.split(";"),["SpecializedRule","set-member","default","SetMemberSymbol_Element",'[t] "Element von"'],["SpecializedRule","set-member","default","SetMemberSymbol_Belongs",'[t] "gehört zu"'],'Rule;set-not-member;default;[t] "nicht in";self::operator;@role="set extended";text()="∉"'.split(";"),["SpecializedRule","set-not-member","default","SetMemberSymbol_Element",'[t] "kein Element von"'],["SpecializedRule","set-not-member","default","SetMemberSymbol_Belongs",'[t] "gehört nicht zu"'],'Rule,prime,default,[n] children/*[1]; [n] children/*[2],self::superscript,children/*[2],children/*[2][@role="prime"],self::*'.split(","),'Rule,feet,default,[n] children/*[1]; [t] "Fuß",self::superscript,children/*[2][@role="prime"],name(children/*[1])="number",children/*[2][text()="′"],not(preceding-sibling::*[@role="degree"])'.split(","),'Rule,inches,default,[n] children/*[1]; [t] "Zoll",self::superscript,children/*[2][@role="prime"],name(children/*[1])="number",children/*[2][text()="″"],not(preceding-sibling::*[@role="degree"])'.split(","),'Rule,minutes,default,[p] (pause:short); [n] children/*[1]; [t] "Minuten",self::superscript,children/*[2][@role="prime"],preceding-sibling::*[@role="degree"],children/*[2][text()="′"]'.split(","),'Rule,minute,default,[p] (pause:short); [n] children/*[1]; [t] "Minute",self::superscript,children/*[2][@role="prime"],preceding-sibling::*[@role="degree"],children/*[2][text()="′"],children/*[1][text()="1"]'.split(","),'Rule,seconds,default,[p] (pause:short); [n] children/*[1]; [t] "Sekunden",self::superscript,children/*[2][@role="prime"],preceding-sibling::*[@role="degree"],children/*[2][text()="″"]'.split(","),'Rule,second,default,[p] (pause:short); [n] children/*[1]; [t] "Sekunde",self::superscript,children/*[2][@role="prime"],preceding-sibling::*[@role="degree"],children/*[2][text()="″"],children/*[1][text()="1"]'.split(","),'Rule,degrees-angle,Prime_Angle,[n] children/*[1]; [t] "Grad"; [p] (pause:short),self::punctuation,@role="degree"'.split(","),'Rule{minutes-angle{Prime_Angle{[n] children/*[1]; [t] "Minuten"; [p] (pause:short){self::superscript{children/*[2][@role="prime"]{name(children/*[1])="number" or (children/*[1][@role="latinletter"] and ""=translate(children/*[1]/text(),"abcdefghijklmnopqrstuvwxyz", "")){children/*[2][text()="′"]'.split("{"),'Rule,minute-angle,Prime_Angle,[n] children/*[1]; [t] "Minute"; [p] (pause:short),self::superscript,children/*[2][@role="prime"],children/*[2][text()="′"],children/*[1][text()="1"]'.split(","),'Rule{seconds-angle{Prime_Angle{[n] children/*[1]; [t] "Sekunden"; [p] (pause:short){self::superscript{children/*[2][@role="prime"]{name(children/*[1])="number" or (children/*[1][@role="latinletter"] and ""=translate(children/*[1]/text(),"abcdefghijklmnopqrstuvwxyz", "")){children/*[2][text()="″"]'.split("{"),'Rule,second-angle,Prime_Angle,[n] children/*[1]; [t] "Sekunde"; [p] (pause:short),self::superscript,children/*[2][@role="prime"],children/*[2][text()="″"],children/*[1][text()="1"]'.split(","),'Rule{feet-length{Prime_Length{[n] children/*[1]; [t] "Fuß"; [p] (pause:short){self::superscript{children/*[2][@role="prime"]{name(children/*[1])="number" or (children/*[1][@role="latinletter"] and ""=translate(children/*[1]/text(),"abcdefghijklmnopqrstuvwxyz", "")){children/*[2][text()="′"]'.split("{"),'Rule{inches-length{Prime_Length{[n] children/*[1]; [t] "Zoll"; [p] (pause:short){self::superscript{children/*[2][@role="prime"]{name(children/*[1])="number" or (children/*[1][@role="latinletter"] and ""=translate(children/*[1]/text(),"abcdefghijklmnopqrstuvwxyz", "")){children/*[2][text()="″"]'.split("{"),["Rule","punctuated","default","[m] children/*","self::punctuated"],["Rule","function","default","[n] text()","self::function"],'Rule{function-article{default{[t] "der" (grammar:article); [n] text(){self::function{@role="prefix function"{contains(@grammar, "addArticle")'.split("{"),'Rule{function-article-fem{default{[t] "die" (grammar:article); [n] text(){self::function{@role="prefix function"{contains(@grammar, "addArticle"){text()="det" or text()="dim" or text()="tr"'.split("{"),["Rule","appl","default",'[n] children/*[1]; [t] "von"; [n] children/*[2] (grammar:case="dative"); [p] (pause:"short")',"self::appl"],'Rule,appl-simple,default,[n] children/*[1]; [t] "von"; [p] (pause:"short"); [n] children/*[2] (grammar:case="dative"); [p] (pause:"short"),self::appl,@role="simple function",name(children/*[2])="appl"'.split(","),'Rule,appl-simple,default,[n] children/*[1]; [t] "von"; [p] (pause:"short"); [n] children/*[2] (grammar:case="dative"); [p] (pause:"short"),self::appl,@role="simple function",name(children/*[2])="fenced",name(children/*[2]/children/*[1])="appl"'.split(","),["Rule","appl","Functions_None",'[p] (pause:"short"); [n] children/*[1]; [t] "mal"; [n] children/*[2]; [p] (pause:"short")',"self::appl"],'Rule,function-prefix,default,[n] children/*[1]; [n] children/*[2],self::appl,@role="prefix function"'.split(","),'Rule{binary-operation{ImpliedTimes_MoreImpliedTimes{[n] . (grammar:impliedTimes); [p] (pause:"short"){self::appl{@role="prefix function"{parent::*/parent::infixop[@role="implicit"]{following-sibling::*{not(contains(@grammar, "impliedTimes"))'.split("{"),'Rule{function-prefix-simple-arg{default{[n] children/*[1]; [n] children/*[2]{self::appl{@role="prefix function"{name(children/*[2])="fenced"{contains(children/*[2]/children/*[1]/@annotation, "clearspeak:simple"){name(children/*[2]/children/*[1])!="number"{name(children/*[2]/children/*[1])!="identifier"{name(children/*[2]/children/*[1])!="appl"'.split("{"),'Rule,function-prefix-embell,default,[p] (pause:"short"); [n] children/*[1]; [n] children/*[2]; [p] (pause:"short"); ,self::appl,@role="prefix function",name(children/*[1])!="function"'.split(","),'Rule{function-prefix-fenced-or-frac-arg{default{[p] (pause:"short"); [n] children/*[1] (grammar:addArticle); [t] "von"; [n] children/*[2] (grammar:case="dative"); [p] (pause:"short"){self::appl{@role="prefix function"{(name(children/*[2])="fenced" and not(contains(children/*[2]/children/*[1]/@annotation, "clearspeak:simple"))) or name(children/*[2])="fraction" or (name(children/*[2])!="fenced" and not(contains(children/*[2]/@annotation, "clearspeak:simple"))){self::*'.split("{"),'Rule,function-prefix-subscript,default,[p] (pause:"short"); [n] children/*[1] (grammar:addArticle); [t] "von"; [p] (pause:"short"); [n] children/*[2] (grammar:case="dative"); [p] (pause:"short"),self::appl,@role="prefix function",name(children/*[1])="subscript",self::*'.split(","),'Rule{function-ln{default{[n] children/*[1]; [n] children/*[2]{self::appl{@role="prefix function"{content/*[2][text()="ln"]{not(following-sibling::*){not(contains(@grammar, "NatLog"))'.split("{"),'Rule{function-ln{default{[n] children/*[1]; [n] children/*[2]; [p] (pause:"short"){self::appl{@role="prefix function"{content/*[2][text()="ln"]{not(contains(@grammar, "NatLog"))'.split("{"),'Rule{function-ln{default{[n] children/*[1]; [t] "von"; [n] children/*[2] (grammar:case="dative"); [p] (pause:"short"){self::appl{@role="prefix function"{content/*[2][text()="ln"]{name(children/*[2])="fenced"{not(contains(@grammar, "NatLog"))'.split("{"),'Rule;function-ln;Log_LnAsNaturalLog;[n] . (grammar:NatLog);self::appl;@role="prefix function";content/*[2][text()="ln"];not(following-sibling::*);not(contains(@grammar, "NatLog"))'.split(";"),'Rule{function-ln{Log_LnAsNaturalLog{[n] . (grammar:NatLog); [p] (pause:"short"){self::appl{@role="prefix function"{content/*[2][text()="ln"]{not(contains(@grammar, "NatLog"))'.split("{"),'Rule{function-prefix-as-exp{default{[n] children/*[1]; [t] "von"; [p] (pause:"short"); [n] children/*[2] (grammar:case="dative"); [p] (pause:"short"){self::appl{@role="prefix function"{name(parent::*/parent::*)="superscript"{not(following-sibling::*){(name(children/*[2])="fenced" and not(contains(children/*[2]/children/*[1]/@annotation, "clearspeak:simple"))) or name(children/*[2])="fraction" or (name(children/*[2])!="fenced" and not(contains(children/*[2]/@annotation, "clearspeak:simple")))'.split("{"),'Rule,function-prefix-subscript-as-exp,default,[n] children/*[1]; [t] "von"; [p] (pause:"short"); [n] children/*[2] (grammar:case="dative"); [p] (pause:"short"),self::appl,@role="prefix function",name(parent::*/parent::*)="superscript",not(following-sibling::*),name(children/*[1])="subscript"'.split(","),'Rule,function-prefix-hyper,default,[p] (pause:"short"); [n] children/*[1]; [t] "von"; [n] children/*[2] (grammar:case="dative"); [p] (pause:"short"),self::appl,@role="prefix function",CQFisHyperbolic'.split(","),'Rule{function-prefix-inverse{default{[p] (pause:"short"); [t] "der" (grammar:article); [t] "inverse" (grammar:masculine); [n] children/*[1]/children/*[1]; [t] "von"; [n] children/*[2] (grammar:case="dative"); [p] (pause:"short"){self::appl{@role="prefix function"{name(children/*[1])="superscript"{name(children/*[1]/children/*[2])="prefixop"{children/*[1]/children/*[2][@role="negative"]{children/*[1]/children/*[2]/children/*[1][text()="1"]{not(contains(@grammar, "functions_none"))'.split("{"),'Rule,appl-triginverse,Trig_TrigInverse,[p] (pause:"short"); [n] children/*[1]; [t] "von"; [n] children/*[2] (grammar:case="dative"); [p] (pause:"short"),self::appl,@role="prefix function",name(children/*[1])="superscript",name(children/*[1]/children/*[2])="prefixop",children/*[1]/children/*[2][@role="negative"],children/*[1]/children/*[2]/children/*[1][text()="1"]'.split(","),'Rule{function-prefix-arc-simple{Trig_ArcTrig{[p] (pause:"short"); [t] "Arkus" (join:""); [n] children/*[1]/children/*[1] (grammar:lowercase); [n] children/*[2]; [p] (pause:"short"){self::appl{@role="prefix function"{name(children/*[1])="superscript"{name(children/*[1]/children/*[2])="prefixop"{children/*[1]/children/*[2][@role="negative"]{children/*[1]/children/*[2]/children/*[1][text()="1"]{not(contains(@grammar, "functions_none"))'.split("{"),'Rule{function-prefix-arc-simple{Trig_ArcTrig{[p] (pause:"short"); [t] "Arkus" (join:""); [n] children/*[1]/children/*[1] (grammar:lowercase); [p] (pause:"short"); [n] children/*[2]; [p] (pause:"short"){self::appl{@role="prefix function"{name(children/*[1])="superscript"{name(children/*[1]/children/*[2])="prefixop"{children/*[1]/children/*[2][@role="negative"]{children/*[1]/children/*[2]/children/*[1][text()="1"]{name(children/*[2])="fenced"{children/*[2]/children/*[1][@role="prefix function"]{contains(children/*[2]/children/*[1]/@annotation, "clearspeak:simple"){not(contains(@grammar, "functions_none"))'.split("{"),'Rule{function-prefix-arc{Trig_ArcTrig{[p] (pause:"short"); [t] "Arkus" (join:""); [n] children/*[1]/children/*[1] (grammar:lowercase); [t] "von"; [n] children/*[2] (grammar:case="dative"); [p] (pause:"short"){self::appl{@role="prefix function"{name(children/*[1])="superscript"{name(children/*[1]/children/*[2])="prefixop"{children/*[1]/children/*[2][@role="negative"]{children/*[1]/children/*[2]/children/*[1][text()="1"]{not(contains(@grammar, "functions_none")){(name(children/*[2])="fenced" and not(contains(children/*[2]/children/*[1]/@annotation, "clearspeak:simple"))) or (name(children/*[2])="fraction" and children/*[2][@role!="vulgar"])'.split("{"),'Rule{function-inverse{default{[n] children/*[1]; [t] "invers"{self::superscript{@role="prefix function" or @role="simple function"{name(children/*[2])="prefixop"{children/*[2][@role="negative"]{children/*[2]/children/*[1][text()="1"]{not(contains(@grammar, "functions_none"))'.split("{"),'Rule,superscript-prefix-function,default,[t] "die" (grammar:article); [n] children/*[2] (grammar:ordinal); [t] "Potenz von"; [n] children/*[1],self::superscript,@role="prefix function",name(children/*[2])="number",children/*[2][@role="integer"]'.split(","),'Rule,superscript-prefix-function,default,[t] "die" (grammar:article); [n] children/*[2] (grammar:ordinal); [t] "Potenz von"; [n] children/*[1],self::superscript,@role="prefix function",name(children/*[2])="identifier"'.split(","),'Rule;function-inverse;Functions_None;[n] . (grammar:functions_none);self::superscript;@role="prefix function" or @role="simple function";name(children/*[2])="prefixop";children/*[2][@role="negative"];children/*[2]/children/*[1][text()="1"];not(contains(@grammar, "functions_none"))'.split(";"),["Rule","superscript","default",'[n] children/*[1]; [t] "mit Exponent" (pause:"short"); [n] children/*[2]; [p] (pause:"short"); [t] "Ende Exponent" (pause:"short")',"self::superscript"],'Rule,superscript-ordinal,default,[n] children/*[1]; [t] "hoch"; [n] children/*[2]; [p] (pause:"short"),self::superscript,name(children/*[2])="number",children/*[2][@role="integer"]'.split(","),'Rule,superscript-ordinal,default,[n] children/*[1]; [t] "hoch"; [n] children/*[2]; [p] (pause:"short"),self::superscript,name(children/*[2])="prefixop",children/*[2][@role="negative"],name(children/*[2]/children/*[1])="number",children/*[2]/children/*[1][@role="integer"]'.split(","),'Rule,superscript-ordinal,default,[n] children/*[1]; [t] "hoch"; [n] children/*[2]; [p] (pause:"short"),self::superscript,name(children/*[2])="identifier",children/*[2][@role="latinletter" or @role="greekletter" or @role="otherletter"]'.split(","),'Rule,superscript-ordinal-default,default,[n] children/*[1]; [t] "mit Exponent" (pause:"short"); [n] children/*[2]; [p] (pause:"short"); [t] "Ende Exponent" (pause:"short"),self::superscript,children//superscript'.split(","),'Rule,superscript-simple-exponent,default,[n] children/*[1]; [t] "hoch"; [n] children/*[2]; [p] (pause:"short"),self::superscript,not(descendant::superscript)'.split(","),'Rule,superscript-simple-exponent-end,default,[n] children/*[1]; [t] "hoch"; [n] children/*[2]; ,self::superscript,not(descendant::superscript),not(following-sibling::*)'.split(","),'Aliases;superscript-simple-exponent;self::superscript;children/superscript/children/*[2][text()="2"] or children/superscript/children/*[2][text()="3"];name(children/superscript/children/*[1])="number";contains(children/superscript/children/*[1]/@annotation, "clearspeak:simple")'.split(";"),'Aliases;superscript-simple-exponent;self::superscript;children/superscript/children/*[2][text()="2"] or children/superscript/children/*[2][text()="3"];name(children/superscript/children/*[1])="fraction";contains(children/superscript/children/*[1]/@annotation, "clearspeak:simple")'.split(";"),["Aliases","superscript-simple-exponent","self::superscript",'children/superscript/children/*[2][text()="2"] or children/superscript/children/*[2][text()="3"]','name(children/superscript/children/*[1])="identifier"'],'Aliases;superscript-simple-exponent;self::superscript;children/*[2][@role="implicit"];count(children/*[2]/children/*)=2;contains(children/*[2]/children/*[1]/@annotation, "simple");name(children/*[2]/children/*[2])="superscript";(name(children/*[2]/children/*[2]/children/*[1])="number" and contains(children/*[2]/children/*[2]/children/*[1]/@annotation, "clearspeak:simple")) or name(children/*[2]/children/*[2]/children/*[1])="identifier";children/*[2]/children/*[2]/children/*[2][text()="2"] or children/*[2]/children/*[2]/children/*[2][text()="3"]'.split(";"),'Rule,superscript-simple-power,Exponent_OrdinalPower,[n] children/*[1]; [t] "potenziert mit"; [n] children/*[2]; [p] (pause:"short"),self::superscript,not(descendant::superscript)'.split(","),'Rule,superscript-simple-power-end,Exponent_OrdinalPower,[n] children/*[1]; [t] "potenziert mit"; [n] children/*[2]; ,self::superscript,not(descendant::superscript),not(following-sibling::*)'.split(","),'Aliases;superscript-simple-power;self::superscript;children/superscript/children/*[2][text()="2"] or children/superscript/children/*[2][text()="3"];name(children/superscript/children/*[1])="number";contains(children/superscript/children/*[1]/@annotation, "clearspeak:simple")'.split(";"),'Aliases;superscript-simple-power;self::superscript;children/superscript/children/*[2][text()="2"] or children/superscript/children/*[2][text()="3"];name(children/superscript/children/*[1])="fraction";contains(children/superscript/children/*[1]/@annotation, "clearspeak:simple")'.split(";"),["Aliases","superscript-simple-power","self::superscript",'children/superscript/children/*[2][text()="2"] or children/superscript/children/*[2][text()="3"]','name(children/superscript/children/*[1])="identifier"'],'Aliases;superscript-simple-power;self::superscript;children/*[2][@role="implicit"];count(children/*[2]/children/*)=2;contains(children/*[2]/children/*[1]/@annotation, "simple");name(children/*[2]/children/*[2])="superscript";(name(children/*[2]/children/*[2]/children/*[1])="number" and contains(children/*[2]/children/*[2]/children/*[1]/@annotation, "clearspeak:simple")) or name(children/*[2]/children/*[2]/children/*[1])="identifier";children/*[2]/children/*[2]/children/*[2][text()="2"] or children/*[2]/children/*[2]/children/*[2][text()="3"]'.split(";"),'Rule{superscript-ordinal-power{Exponent_OrdinalPower{[n] children/*[1]; [t] "zur"; [n] children/*[2] (grammar:ordinal,join:""); [t] "n Potenz" (pause:"short"){self::superscript{name(children/*[2])="number"{children/*[2][@role="integer"]'.split("{"),["Aliases","superscript-ordinal-power","self::superscript",'name(children/*[2])="identifier"','children/*[2][@role="latinletter" or @role="greekletter" or @role="otherletter"]'],'Rule{superscript-non-ordinal{Exponent_OrdinalPower{[n] children/*[1]; [t] "zur negativ"; [n] children/*[2]/children/*[1] (grammar:ordinal, join:""); [t] "n Potenz" (pause:"short"){self::superscript{children/*[2][@role="negative"]{name(children/*[2]/children/*[1])="number"{children/*[2]/children/*[1][@role="integer"]'.split("{"),'Rule{superscript-simple-function{Exponent_OrdinalPower{[t] "die" (grammar:article); [n] children/*[2] (grammar:ordinal); [t] "Potenz von" (pause:"short"); [n] children/*[1]{self::superscript{name(children/*[1])="identifier"{children/*[1][@role="simple function"]{children/*[2][@role!="prime"]{not(contains(@grammar, "functions_none"))'.split("{"),'Rule{exponent{default{[n] text() (join:""); [t] "te"{self::identifier{contains(@grammar, "ordinal")'.split("{"),'Rule;exponent;default;[t] CSFwordOrdinal;self::number;@role="integer";contains(@grammar, "ordinal");text()!="0"'.split(";"),'Rule;exponent;default;[t] "nullte";self::number;@role="integer";contains(@grammar, "ordinal");text()="0"'.split(";"),'Rule,superscript-simple-exp,Exponent_Exponent,[n] children/*[1]; [t] "mit Exponent"; [n] children/*[2]; [p] (pause:"short"),self::superscript,not(descendant::superscript)'.split(","),'Rule,superscript-simple-exp-end,Exponent_Exponent,[n] children/*[1]; [t] "mit Exponent"; [n] children/*[2]; ,self::superscript,not(descendant::superscript),not(following-sibling::*)'.split(","),'Aliases;superscript-simple-exp;self::superscript;children/superscript/children/*[2][text()="2"] or children/superscript/children/*[2][text()="3"];name(children/superscript/children/*[1])="number";contains(children/superscript/children/*[1]/@annotation, "clearspeak:simple")'.split(";"),'Aliases;superscript-simple-exp;self::superscript;children/superscript/children/*[2][text()="2"] or children/superscript/children/*[2][text()="3"];name(children/superscript/children/*[1])="fraction";contains(children/superscript/children/*[1]/@annotation, "clearspeak:simple")'.split(";"),["Aliases","superscript-simple-exp","self::superscript",'children/superscript/children/*[2][text()="2"] or children/superscript/children/*[2][text()="3"]','name(children/superscript/children/*[1])="identifier"'],'Aliases;superscript-simple-exp;self::superscript;children/*[2][@role="implicit"];count(children/*[2]/children/*)=2;contains(children/*[2]/children/*[1]/@annotation, "simple");name(children/*[2]/children/*[2])="superscript";(name(children/*[2]/children/*[2]/children/*[1])="number" and contains(children/*[2]/children/*[2]/children/*[1]/@annotation, "clearspeak:simple")) or name(children/*[2]/children/*[2]/children/*[1])="identifier";children/*[2]/children/*[2]/children/*[2][text()="2"] or children/*[2]/children/*[2]/children/*[2][text()="3"]'.split(";"),'Rule;superscript-simple-function;Functions_None;[n] . (grammar:functions_none);self::superscript;name(children/*[1])="identifier";children/*[1][@role="simple function"];not(contains(@grammar, "functions_none"))'.split(";"),'Rule,square,default,[n] children/*[1]; [t] "Quadrat",self::superscript,children/*[2][text()="2"],name(children/*[1])!="text" or not(name(children/*[1])="text" and (name(../../../punctuated[@role="text"]/..)="stree" or name(..)="stree")),self::*,self::*'.split(","),'Rule,cube,default,[n] children/*[1]; [t] "Kubik",self::superscript,children/*[2][text()="3"],name(children/*[1])!="text" or not(name(children/*[1])="text" and (name(../../../punctuated[@role="text"]/..)="stree" or name(..)="stree")),self::*,self::*'.split(","),'Rule;paren-simple;default;[n] children/*[1];self::fenced;@role="leftright";contains(children/*[1]/@annotation, "clearspeak:simple");name(../..)!="superscript" and name(../..)!="subscript"'.split(";"),'Rule;paren-simple-exp;default;[n] children/*[1];self::fenced;@role="leftright";name(../..)="superscript";children/*[1][@role="integer"] or children/*[1][@role="float"] or (children/*[1][@role="vulgar"] and contains(children/*[1]/@annotation, "clearspeak:simple")) or children/*[1][@role="latinletter"] or children/*[1][@role="greekletter"] or children/*[1][@role="otherletter"]'.split(";"),'Rule;paren-simple-nested-func;default;[n] children/*[1];self::fenced;@role="leftright";name(../*[1])="identifier" or name(../*[1])="function";parent::*/parent::*[@role="simple function" or @role="prefix function"];children/*[1][@role="simple function" or @role="prefix function"];contains(children/*[1]/children/*[2]/children/*[1]/@annotation, "clearspeak:simple") or name(children/*[1]/children/*[2]/children/*[1])="subscript" or name(children/*[1]/children/*[2]/children/*[1])="superscript" or children/*[1]/children/*[2]/children/*[1][@role="vulgar"] '.split(";"),'Rule{paren-simple-nested-func-no-bracket{Functions_None{[n] children/*[1];{self::fenced{@role="leftright"{name(../*[1])="identifier" or name(../*[1])="function"{parent::*/parent::*[@role="simple function" or @role="prefix function"]{children/*[1][@role="simple function" or @role="prefix function"]{name(children/*[1]/children/*[1])="identifier" or name(children/*[1]/children/*[1])="function"{contains(children/*[1]/children/*[2]/children/*[1]/@annotation, "clearspeak:simple"){name(children/*[1]/children/*[2]/children/*[1])="identifier" or name(children/*[1]/children/*[2]/children/*[1])="number"'.split("{"),'Rule,fences-open-close,default,[p] (pause:"short"); [n] content/*[1] (grammar:spokenFence); [p] (pause:"short"); [n] children/*[1]; [p] (pause:"short"); [n] content/*[2] (grammar:spokenFence); [p] (pause:"short"),self::fenced,@role="leftright"'.split(","),'Rule{paren-simple-nested-func{default{[p] (pause:"short"); [n] content/*[1]; [p] (pause:"short"); [n] children/*[1]; [p] (pause:"short"); [n] content/*[2]; [p] (pause:"short"){self::fenced{@role="leftright"{name(../*[1])="identifier" or name(../*[1])="function"{parent::*/parent::*[@role="simple function" or @role="prefix function"]{not(contains(children/*[1]/@annotation, "clearspeak:simple"))'.split("{"),'Rule{paren-simple-nested-func{Functions_None{[p] (pause:"short"); [n] content/*[1] (grammar:spokenFence); [p] (pause:"short"); [n] children/*[1]; [p] (pause:"short"); [n] content/*[2] (grammar:spokenFence); [p] (pause:"short"){self::fenced{@role="leftright"{name(../*[1])="identifier" or name(../*[1])="function"{parent::*/parent::*[@role="simple function" or @role="prefix function"]{children/*[1][@role="simple function" or @role="prefix function"]{contains(children/*[1]/children/*[2]/children/*[1]/@annotation, "clearspeak:simple") or name(children/*[1]/children/*[2]/children/*[1])="subscript" or name(children/*[1]/children/*[2]/children/*[1])="superscript" or children/*[1]/children/*[2]/children/*[1][@role="vulgar"] '.split("{"),["SpecializedRule","fences-open-close","default","Paren_Speak"],["Aliases","fences-open-close","self::fenced",'@role="composed function"'],["Rule","fence-silent","Paren_Silent",'[p] (pause:"short"); [n] children/*[1]; [p] (pause:"short")',"self::fenced"],'Rule,fences-open-close,ImpliedTimes_None,[p] (pause:"short"); [n] content/*[1] (grammar:spokenFence); [p] (pause:"short"); [n] children/*[1]; [p] (pause:"short"); [n] content/*[2] (grammar:spokenFence); [p] (pause:"short"),self::fenced,@role="leftright",parent::*/parent::*[@role!="simple function"],parent::*/parent::*[@role!="prefix function"]'.split(","),'Rule;fence-nesting;Paren_SpeakNestingLevel;[n] text() (grammar:insertNesting=CSFnestingDepth);self::fence;contains(@grammar, "spokenFence");CQFmatchingFences'.split(";"),["Rule","fence-no-nesting","Paren_SpeakNestingLevel","[n] text()","self::fence"],'Rule,fences-points,Paren_CoordPoint,[t] "der Punkt mit Koordinaten"; [n] children/*[1],self::fenced,name(children/*[1])="punctuated",children/*[1][@role="sequence"]'.split(","),'Rule{fences-interval{Paren_Interval{[t] "das Interval von"; [n] children/*[1]/children/*[1]; [t] "bis"; [n] children/*[1]/children/*[3]; [p] (pause:"short"); [n] . (grammar:interval){self::fenced{not(contains(@grammar, "interval")){name(children/*[1])="punctuated"{children/*[1][@role="sequence"]{count(./children/*[1]/content/*)=1{children/*[1]/content/*[1][@role="comma"]'.split("{"),'Rule{interval-open{Paren_Interval{[t] "ohne"; [n] children/*[1]/children/*[1]; [t] "und"; [n] children/*[1]/children/*[3]{self::fenced{contains(@grammar, "interval"){content/*[1]/text()="("{content/*[2]/text()=")"'.split("{"),'Rule{interval-closed-open{Paren_Interval{[t] "einschließlich"; [n] children/*[1]/children/*[1]; [p] (pause:"short"); [t] "aber ohne"; [n] children/*[1]/children/*[3]{self::fenced{contains(@grammar, "interval"){content/*[1]/text()="["{content/*[2]/text()=")"'.split("{"),'Rule{interval-open-closed{Paren_Interval{[t] "ohne"; [n] children/*[1]/children/*[1]; [p] (pause:"short"); [t] "aber einschließlich"; [n] children/*[1]/children/*[3]{self::fenced{contains(@grammar, "interval"){content/*[1]/text()="("{content/*[2]/text()="]"'.split("{"),'Rule{interval-closed{Paren_Interval{[t] "einschließlich"; [n] children/*[1]/children/*[1]; [t] "und"; [n] children/*[1]/children/*[3]{self::fenced{contains(@grammar, "interval"){content/*[1]/text()="["{content/*[2]/text()="]"'.split("{"),'Rule{interval-open-inf-r{Paren_Interval{[t] "ohne"; [n] children/*[1]/children/*[1]{self::fenced{contains(@grammar, "interval"){content/*[1]/text()="("{content/*[2]/text()=")"{children/*[1]/children/*[3]/text()="∞" or (name(children/*[1]/children/*[3])="prefixop" and children/*[1]/children/*[3]/children/*[1]/text()="∞")'.split("{"),'Rule{interval-open-inf-l{Paren_Interval{[t] "ohne"; [n] children/*[1]/children/*[3]{self::fenced{contains(@grammar, "interval"){content/*[1]/text()="("{content/*[2]/text()=")"{children/*[1]/children/*[1]/text()="∞" or (name(children/*[1]/children/*[1])="prefixop" and children/*[1]/children/*[1]/children/*[1]/text()="∞")'.split("{"),'Rule;interval-open-inf-lr;Paren_Interval;;self::fenced;contains(@grammar, "interval");content/*[1]/text()="(";content/*[2]/text()=")";children/*[1]/children/*[3]/text()="∞" or (name(children/*[1]/children/*[3])="prefixop" and children/*[1]/children/*[3]/children/*[1]/text()="∞");children/*[1]/children/*[1]/text()="∞" or (name(children/*[1]/children/*[1])="prefixop" and children/*[1]/children/*[1]/children/*[1]/text()="∞")'.split(";"),'Rule{interval-closed-open-inf{Paren_Interval{[t] "einschließlich"; [n] children/*[1]/children/*[1]{self::fenced{contains(@grammar, "interval"){content/*[1]/text()="["{content/*[2]/text()=")"{children/*[1]/children/*[3]/text()="∞" or (name(children/*[1]/children/*[3])="prefixop" and children/*[1]/children/*[3]/children/*[1]/text()="∞")'.split("{"),'Rule{interval-open-closed-inf{Paren_Interval{[t] "einschließlich"; [n] children/*[1]/children/*[3]{self::fenced{contains(@grammar, "interval"){content/*[1]/text()="("{content/*[2]/text()="]"{children/*[1]/children/*[1]/text()="∞" or (name(children/*[1]/children/*[1])="prefixop" and children/*[1]/children/*[1]/children/*[1]/text()="∞")'.split("{"),'Rule,paren-nested-embellished-funcs,Functions_None,[p] (pause:"short"); [n] content/*[1]; [p] (pause:"short"); [n] children/*[1]; [p] (pause:"short"); [n] content/*[2]; [p] (pause:"short"),self::fenced,@role="leftright",name(../..)="appl",name(children/*[1]) = "appl",preceding-sibling::*/descendant-or-self::*[@role="subsup"] or children/*[1]/descendant-or-self::*[@role="subsup"]'.split(","),'Rule;set-empty;default;[t]  "die leere Menge";self::fenced;@role="set empty"'.split(";"),'Rule,set-extended,default,[t] "die Menge aller"; [n] children/*[1]/children/*[1]; [t] "mit"; [n] children/*[1]/children/*[3],self::fenced,@role="set extended"'.split(","),'Rule,set-collection,default,[t] "die Menge"; [n] children/*[1],self::fenced,@role="set collection"'.split(","),["Aliases","set-collection","self::fenced",'@role="set singleton"'],'Rule,set-extended,Sets_woAll,[t] "die Menge von"; [n] children/*[1]/children/*[1]; [t] "mit"; [n] children/*[1]/children/*[3],self::fenced,@role="set extended"'.split(","),'Rule;set-collection;Sets_SilentBracket;[n] children/*[1];self::fenced;@role="set collection"'.split(";"),["Rule","subscript","default",'[p] (pause:short); [n] children/*[1]; [t] "Index"; [n] children/*[2]; [p] (pause:short)',"self::subscript"],'Rule,subscript-base,default,[n] children/*[1]; [t] "Basis"; [n] children/*[2],self::subscript,CQFisLogarithm'.split(","),'Rule{subscript-index{default{[n] children/*[1]; [t] "Index"; [n] children/*[2]{self::subscript{contains(@grammar, "simpleDet")'.split("{"),["Rule","fraction","default",'[p] (pause:short); [t] "Bruch mit Zähler"; [n] children/*[1]; [p] (pause:short); [t] "und Nenner"; [n] children/*[2]; [p] (pause:short)',"self::fraction"],'Rule,fraction,Functions_None,[p] (pause:short); [t] "Bruch mit Zähler"; [n] children/*[1]; [p] (pause:short); [t] "und Nenner"; [n] children/*[2]; [p] (pause:short),self::fraction,name(children/*[1])="appl" or name(children/*[2])="appl"'.split(","),'Rule{simple-fraction{default{[p] (pause:short); [n] children/*[1]; [t] "geteilt durch"; [n] children/*[2]; [p] (pause:short){self::fraction{contains(children/*[1]/@annotation, "clearspeak:simple") or contains(children/*[1]/@annotation, "clearspeak:unit"){contains(children/*[2]/@annotation, "clearspeak:simple") or contains(children/*[2]/@annotation, "clearspeak:unit")'.split("{"),'Rule,simple-vulgar-fraction,default,[p] (pause:short); [n] children/*[1]; [t] "geteilt durch"; [n] children/*[2]; [p] (pause:short),self::fraction,@role="vulgar"'.split(","),'Rule,simple-text-fraction,default,[p] (pause:short); [n] children/*[1]; [t] "geteilt durch"; [n] children/*[2]; [p] (pause:short),self::fraction,name(children/*[1])="text",name(children/*[2])="text"'.split(","),'Rule,simple-text-fraction,default,[p] (pause:short); [n] children/*[1]; [t] "geteilt durch"; [n] children/*[2]; [p] (pause:short),self::fraction,name(children/*[1])="infixop",children/*[1][@role="unit"],name(children/*[2])="text"'.split(","),'Rule;vulgar-fraction;default;[t] CSFvulgarFraction (grammar:correctOne);self::fraction;@role="vulgar";CQFvulgarFractionSmall'.split(";"),["Rule","fraction","Fraction_Over",'[p] (pause:short); [n] children/*[1]; [t] "geteilt durch"; [n] children/*[2]; [p] (pause:short)',"self::fraction"],["Rule","fraction","Fraction_OverEndFrac",'[p] (pause:short); [n] children/*[1]; [t] "geteilt durch"; [n] children/*[2]; [p] (pause:short); [t] "Ende Bruch"; [p] (pause:short)',"self::fraction"],["Rule","fraction","Fraction_FracOver",'[p] (pause:short); [t] "Bruch"; [n] children/*[1]; [t] "geteilt durch"; [n] children/*[2]; [p] (pause:short)',"self::fraction"],["Rule","fraction","Fraction_Per",'[p] (pause:short); [n] children/*[1]; [t] "per"; [n] children/*[2]; [p] (pause:short)',"self::fraction"],["Rule","fraction","Fraction_GeneralEndFrac",'[p] (pause:short); [t] "Bruch mit Zähler"; [n] children/*[1]; [p] (pause:short); [t] "und Nenner"; [n] children/*[2]; [p] (pause:short); [t] "Ende Bruch"; [p] (pause:short)',"self::fraction"],["Rule","fraction","Fraction_General",'[p] (pause:short); [t] "Bruch mit Zähler"; [n] children/*[1]; [p] (pause:short); [t] "und Nenner"; [n] children/*[2]; [p] (pause:short)',"self::fraction"],'Rule;simple-vulgar-fraction;Fraction_Ordinal;[t] CSFvulgarFraction (grammar:correctOne);self::fraction;@role="vulgar"'.split(";"),'Rule{fraction{Fraction_EndFrac{[p] (pause:short); [n] . (grammar:endfrac); [t] "Ende Bruch"; [p] (pause:short){self::fraction{not(contains(@grammar, "endfrac")){not(contains(children/*[1]/@annotation, "clearspeak:unit")){not(contains(children/*[2]/@annotation, "clearspeak:unit"))'.split("{"),'Rule{vulgar-fraction{Fraction_EndFrac{[p] (pause:short); [n] children/*[1]; [t] "geteilt durch"; [n] children/*[2]; [p] (pause:short){self::fraction{name(children/*[1])="fraction"{name(children/*[2])="fraction"{contains(children/*[1]/@annotation, "clearspeak:simple"){contains(children/*[2]/@annotation, "clearspeak:simple")'.split("{"),'Rule;simple-vulgar-fraction;Fraction_EndFrac;[t] CSFvulgarFraction (grammar:correctOne);self::fraction;@role="vulgar";contains(@annotation, "clearspeak:simple");self::*'.split(";"),["Rule","sqrt","default",'[t] "Quadratwurzel aus"; [n] children/*[1] (grammar:EndRoot=false); [p] (pause:short)',"self::sqrt"],'Rule,sqrt-nested,default,[p] (pause: "short"); [t] "Quadratwurzel aus"; [n] children/*[1] (grammar:EndRoot=false); [p] (pause:short),self::sqrt,not(preceding-sibling::*),ancestor::sqrt|ancestor::root'.split(","),'Rule,negative-sqrt,default,[t] "negative Quadratwurzel aus"; [n] children/*[1]/children/*[1] (grammar:EndRoot=false); [p] (pause:short),self::prefixop,@role="negative",name(children/*[1])="sqrt"'.split(","),'Rule,negative-sqrt,default,[p] (pause: "short"); [t] "negative Quadratwurzel aus"; [n] children/*[1]/children/*[1] (grammar:EndRoot=false); [p] (pause:short),self::prefixop,@role="negative",name(children/*[1])="sqrt",not(preceding-sibling::*),ancestor::sqrt|ancestor::root'.split(","),'Rule,sqrt-plus-minus,Roots_PosNegSqRoot,[t] "positive Quadratwurzel aus"; [n] children/*[1] (grammar:EndRoot=false); [p] (pause:short),self::sqrt,parent::stree or not(parent::*/parent::infixop[@role="addition"]) or (parent::*/parent::*[1]/text()!="±" and parent::*/parent::*/text()!="∓")'.split(","),'Rule,sqrt-nested-plus-minus,Roots_PosNegSqRoot,[p] (pause: "short"); [t] "positive Quadratwurzel aus"; [n] children/*[1] (grammar:EndRoot=false); [p] (pause:short),self::sqrt,not(preceding-sibling::*),ancestor::sqrt|ancestor::root,parent::stree or not(parent::*/parent::infixop[@role="addition"]) or (parent::*/parent::*[1]/text()!="±" and parent::*/parent::*/text()!="∓")'.split(","),'Rule,sqrt-plus-minus,Roots_PosNegSqRootEnd,[t] "positive Quadratwurzel aus"; [n] children/*[1] (grammar:EndRoot=false); [p] (pause:short),self::sqrt,parent::stree or not(parent::*/parent::infixop[@role="addition"]) or (parent::*/parent::*[1]/text()!="±" and parent::*/parent::*/text()!="∓")'.split(","),'Rule,sqrt-nested-plus-minus,Roots_PosNegSqRootEnd,[p] (pause: "short"); [t] "positive Quadratwurzel aus"; [n] children/*[1] (grammar:EndRoot=false); [p] (pause:short),self::sqrt,not(preceding-sibling::*),ancestor::sqrt|ancestor::root,parent::stree or not(parent::*/parent::infixop[@role="addition"]) or (parent::*/parent::*[1]/text()!="±" and parent::*/parent::*/text()!="∓")'.split(","),'Rule{sqrt-endroot{Roots_RootEnd{[n] . (grammar:EndRoot); [t] "Wurzel Ende"; [p] (pause:short){self::sqrt{not(contains(@grammar, "EndRoot"))'.split("{"),'Rule{negative-sqrt-endroot{Roots_RootEnd{[n] . (grammar:EndRoot); [t] "Wurzel Ende"; [p] (pause:short){self::prefixop{@role="negative"{name(children/*[1])="sqrt"{not(contains(@grammar, "EndRoot"))'.split("{"),'Rule{sqrt-endroot{Roots_PosNegSqRootEnd{[n] . (grammar:EndRoot); [t] "Wurzel Ende"; [p] (pause:short){self::sqrt{not(contains(@grammar, "EndRoot"))'.split("{"),'Rule{negative-sqrt-endroot{Roots_PosNegSqRootEnd{[n] . (grammar:EndRoot); [t] "Wurzel Ende"; [p] (pause:short){self::prefixop{@role="negative"{name(children/*[1])="sqrt"{not(contains(@grammar, "EndRoot"))'.split("{"),'Rule,cube,default,[t] "Kubikwurzel aus"; [n] children/*[2] (grammar:EndRoot=false); [p] (pause:short),self::root,children/*[1][text()="3"]'.split(","),'Rule,cube-nested,default,[p] (pause:short); [t] "Kubikwurzel aus"; [n] children/*[2] (grammar:EndRoot=false); [p] (pause:short),self::root,children/*[1][text()="3"],not(preceding-sibling::*),ancestor::sqrt|ancestor::root'.split(","),["Rule","root","default",'[t] "die" (grammar:article); [n] children/*[1] (grammar:ordinal); [t] "Wurzel aus"; [n] children/*[2] (grammar:EndRoot=false); [p] (pause:short)',"self::root"],'Rule,root-nested,default,[p] (pause:short); [t] "die" (grammar:article); [n] children/*[1] (grammar:ordinal); [t] "Wurzel aus"; [n] children/*[2] (grammar:EndRoot=false); [p] (pause:short),self::root,not(preceding-sibling::*),ancestor::sqrt|ancestor::root'.split(","),'Rule{root-endroot{Roots_RootEnd{[n] . (grammar:EndRoot); [t] "Wurzel Ende"; [p] (pause:short){self::root{not(contains(@grammar, "EndRoot"))'.split("{"),'Rule{root-endroot{Roots_PosNegSqRootEnd{[n] . (grammar:EndRoot); [t] "Wurzel Ende"; [p] (pause:short){self::root{not(contains(@grammar, "EndRoot"))'.split("{"),'Rule,negative,default,[t] "minus"; [n] children/*[1],self::prefixop,@role="negative"'.split(","),'Rule,positive,default,[t] "plus"; [n] children/*[1],self::prefixop,@role="positive"'.split(","),'Rule,angle-measure,default,[t] "das Maß des Winkels"; [n] children/*[2] (grammar:angle),self::infixop,content/*[1]/text()="∠",children/*[1][text()="m"]'.split(","),["Rule","prefix","default","[m] content/* (grammar:prefix); [n] children/*[1]","self::prefixop"],["Rule","postfix","default","[n] children/*[1]; [m] content/* (grammar:postfix)","self::postfixop"],'Rule{set-prefix-operators{default{[t] "der" (grammar:article); [n] self::* (grammar:!prefix); [t] "von"{self::*{contains(@grammar,"prefix"){descendant-or-self::*/text()="∩"{self::*{self::*{self::*'.split("{"),'Rule{set-prefix-operators{default{[t] "die" (grammar:article); [n] self::* (grammar:!prefix); [t] "von"{self::*{contains(@grammar,"prefix"){descendant-or-self::*/text()="∪"{self::*{self::*{self::*'.split("{"),["Rule","binary-operation","default","[m] children/* (sepFunc:CTXFcontentIterator);","self::infixop"],'Rule,binary-operation,ImpliedTimes_MoreImpliedTimes,[m] children/* (sepFunc:CTXFcontentIterator);,self::infixop,@role="implicit"'.split(","),'Rule,binary-operation-pause,default,[p] (pause:short); [m] children/* (sepFunc:CTXFcontentIterator);,self::infixop,@role="implicit",name(children/*[1])="appl"'.split(","),'Rule,binary-operation-pause,default,[m] children/* (sepFunc:CTXFcontentIterator); [p] (pause:short),self::infixop,@role="implicit",name(children/*[last()])="appl"'.split(","),'Rule,binary-operation-pause,default,[p] (pause:short); [m] children/* (sepFunc:CTXFcontentIterator); [p] (pause:short),self::infixop,@role="implicit",name(children/*[1])="appl",name(children/*[last()])="appl"'.split(","),'Rule;implicit-times;default;[p] (pause:short);self::operator;@role="multiplication";text()="⁢"'.split(";"),'Rule implicit-times default  self::operator @role="multiplication" text()="⁢" CQFsimpleArguments'.split(" "),'Rule;implicit-times;default;[n] text();self::operator;@role="multiplication";text()="⁢";CQFfencedArguments'.split(";"),'Rule;implicit-times;ImpliedTimes_MoreImpliedTimes;[n] text();self::operator;@role="multiplication";text()="⁢"'.split(";"),'Rule implicit-times ImpliedTimes_None  self::operator @role="multiplication" text()="⁢"'.split(" "),'Rule{binary-operation-simple{default{[m] children/* (rate:"0.5"); [p] (pause:short){self::infixop{@role="implicit"{contains(@annotation, "clearspeak:simple"){not(contains(@grammar, "inFrac"))'.split("{"),'Rule;simple-in-fraction;default;[n] . (rate:"0.5",grammar:inFrac);self::*;contains(@annotation, "clearspeak:simple");not(contains(@grammar, "inFrac"));name(.)!="identifier";name(.)!="function";name(.)!="number";name(parent::*/parent::*)="fraction";not(preceding-sibling::*)'.split(";"),'Rule;operators-after-power;Exponent_AfterPower;[m] children/* (rate:"0.5");self::infixop;@role="implicit";contains(@grammar, "afterPower")'.split(";"),["Rule","relseq","default","[m] children/* (sepFunc:CTXFcontentIterator)","self::relseq"],["Rule","multrel","default","[m] children/* (sepFunc:CTXFcontentIterator)","self::multirel"],'Rule;natural-numbers;default;[t] "die natürlichen Zahlen";self::identifier;text()="ℕ" or (text()="N" and @font="double-struck");self::*;self::*;self::*;self::*;self::*'.split(";"),'Rule;integers;default;[t] "die ganzen Zahlen";self::identifier;text()="ℤ" or (text()="Z" and @font="double-struck");self::*;self::*;self::*;self::*;self::*'.split(";"),'Rule;rational-numbers;default;[t] "die rationalen Zahlen";self::identifier;text()="ℚ" or (text()="Q" and @font="double-struck");self::*;self::*;self::*;self::*;self::*'.split(";"),'Rule;real-numbers;default;[t] "die reellen Zahlen";self::identifier;text()="ℝ" or (text()="R" and @font="double-struck");self::*;self::*;self::*;self::*;self::*'.split(";"),'Rule;complex-numbers;default;[t] "die komplexen Zahlen";self::identifier;text()="ℂ" or (text()="C" and @font="double-struck");self::*;self::*;self::*;self::*;self::*'.split(";"),'Rule,natural-numbers-super,default,[t] "n" (join: "-"); [n] children/*[2] (grammar:numbers2alpha),self::superscript,children/*[1]/text()="ℕ" or (children/*[1]/text()="N" and children/*[1]/@font="double-struck"),self::*,self::*,self::*,self::*,self::*'.split(","),'Rule,integers-super,default,[t] "z" (join: "-"); [n] children/*[2] (grammar:numbers2alpha),self::superscript,children/*[1]/text()="ℤ" or (children/*[1]/text()="Z" and children/*[1]/@font="double-struck"),self::*,self::*,self::*,self::*,self::*'.split(","),'Rule,rational-numbers-super,default,[t] "q" (join: "-"); [n] children/*[2] (grammar:numbers2alpha),self::superscript,children/*[1]/text()="ℚ" or (children/*[1]/text()="Q" and children/*[1]/@font="double-struck"),self::*,self::*,self::*,self::*,self::*'.split(","),'Rule,real-numbers-super,default,[t] "r" (join:"-"); [n] children/*[2] (grammar:numbers2alpha),self::superscript,children/*[1]/text()="ℝ" or (children/*[1]/text()="R" and children/*[1]/@font="double-struck"),self::*,self::*,self::*,self::*,self::*'.split(","),'Rule,complex-numbers-super,default,[t] "c" (join:"-"); [n] children/*[2] (grammar:numbers2alpha),self::superscript,children/*[1]/text()="ℂ" or (children/*[1]/text()="C" and children/*[1]/@font="double-struck"),self::*,self::*,self::*,self::*,self::*'.split(","),'Rule;natural-numbers-with-zero;default;[t] "die natürlichen Zahlen mit Null";self::subscript;children/*[1]/text()="ℕ" or (children/*[1]/text()="N" and children/*[1]/@font="double-struck");children/*[2]/text()="0";self::*;self::*;self::*;self::*;self::*'.split(";"),'Rule;positive-integers;default;[t] "die positiven ganzen Zahlen";self::superscript;children/*[1]/text()="ℤ" or (children/*[1]/text()="Z" and children/*[1]/@font="double-struck");children/*[2]/text()="+";self::*;self::*;self::*;self::*;self::*'.split(";"),'Rule;positive-integers;default;[t] "die negativen ganzen Zahlen";self::superscript;children/*[1]/text()="ℤ" or (children/*[1]/text()="Z" and children/*[1]/@font="double-struck");children/*[2]/text()="-";self::*;self::*;self::*;self::*;self::*'.split(";"),'Rule;positive-rational-numbers;default;[t] "die positiven rationalen Zahlen";self::superscript;children/*[1]/text()="ℚ" or (children/*[1]/text()="Q" and children/*[1]/@font="double-struck");children/*[2]/text()="+";self::*;self::*;self::*;self::*;self::*'.split(";"),'Rule;negative-rational-numbers;default;[t] "die negativen rationalen Zahlen";self::superscript;children/*[1]/text()="ℚ" or (children/*[1]/text()="Q" and children/*[1]/@font="double-struck");children/*[2]/text()="-";self::*;self::*;self::*;self::*;self::*'.split(";"),'Rule,fences-neutral,default,[p] (pause:short); [t] "der Betrag von"; [n] children/*[1]; [p] (pause: short),self::fenced,@role="neutral",content/*[1][text()]="|" or content/*[1][text()]="❘" or content/*[1][text()]="｜"'.split(","),'Rule,fences-neutral,AbsoluteValue_AbsEnd,[p] (pause:short); [t] "der Betrag von"; [n] children/*[1]; [p] (pause: short); [t] "Ende Betrag"; [p] (pause: short),self::fenced,@role="neutral",content/*[1][text()]="|" or content/*[1][text()]="❘" or content/*[1][text()]="｜"'.split(","),'Rule,fences-neutral,AbsoluteValue_Cardinality,[p] (pause:short); [t] "die Mächtigkeit der Menge"; [n] children/*[1]; [p] (pause: short),self::fenced,@role="neutral",content/*[1][text()]="|" or content/*[1][text()]="❘" or content/*[1][text()]="｜"'.split(","),'Rule,fences-neutral,AbsoluteValue_Determinant,[p] (pause:short); [t] "die Determinante von"; [n] children/*[1]; [p] (pause: short),self::fenced,@role="neutral",content/*[1][text()]="|" or content/*[1][text()]="❘" or content/*[1][text()]="｜"'.split(","),["Rule","matrix","default",'[t] "die" (grammar:article); [t] count(children/*);  [t] "mal";[t] count(children/*[1]/children/*); [t] "Matrize"; [p] (pause:long); [m] children/* (ctxtFunc:CTXFnodeCounter,context:"Zeile-:"); [p] (pause:long)',"self::matrix"],'Rule{matrix-simple{default{[t] "die" (grammar:article); [t] count(children/*);  [t] "mal";[t] count(children/*[1]/children/*); [t] "Matrize"; [p] (pause:long); [m] children/* (ctxtFunc:CTXFnodeCounter,context:"Zeile-:",grammar:simpleDet); [p] (pause:long){self::matrix{count(children/*)<4{count(children/*[1]/children/*)<4{CQFcellsSimple'.split("{"),'Rule,matrix-trivial,default,[t] "die 1 mal 1 Matrize mit Element"; [n] children/*[1]; [p] (pause:long),self::vector,@role="squarematrix"'.split(","),'Rule{determinant{default{[t] "die" (grammar:article); [t] "Determinante der"; [t] count(children/*); [t] "mal"; [t] count(children/*[1]/children/*); [t] "Matrize"; [p] (pause:long); [m] children/* (ctxtFunc:CTXFnodeCounter,context:"Zeile-:",grammar:simpleDet); [p] (pause:long){self::matrix{@role="determinant"{count(children/*)<4{CQFcellsSimple'.split("{"),'Rule{determinant-simple{default{[t] "die" (grammar:article); [t] "Determinante der"; [t] count(children/*); [t] "mal"; [t] count(children/*[1]/children/*); [t] "Matrize"; [p] (pause:long); [m] children/* (ctxtFunc:CTXFnodeCounter,context:"Zeile-:"); [p] (pause:long){self::matrix{@role="determinant"'.split("{"),["Rule","matrix-vector","default",'[t] "die" (grammar:article); [t] count(children/*);  [t] "mal";[t] count(children/*[1]/children/*); [t] "Spaltenmatrize"; [p] (pause:long); [m] children/* (ctxtFunc:CTXFnodeCounter,context:"Zeile-:",grammar:simpleDet); [p] (pause:long)',"self::vector"],["SpecializedRule","matrix-vector","default","Matrix_SpeakColNum"],'Rule{matrix-vector-simple{default{[t] "die" (grammar:article); [t] count(children/*);  [t] "mal";[t] count(children/*[1]/children/*); [t] "Spaltenmatrize"; [p] (pause:long); [m] children/* (sepFunc:CTXFpauseSeparator,separator:"short",grammar:simpleDet); [p] (pause:long){self::vector{count(children/*)<4{CQFcellsSimple{@role!="squarematrix"'.split("{"),["Rule","matrix-vector-simple","Matrix_SilentColNum",'[t] "die" (grammar:article); [t] count(children/*);  [t] "mal";[t] count(children/*[1]/children/*); [t] "Spaltenmatrize"; [p] (pause:long); [m] children/* (sepFunc:CTXFpauseSeparator,separator:"short",grammar:simpleDet); [p] (pause:long)',"self::vector"],'Rule{matrix-row-vector{default{[t] "die" (grammar:article); [t] count(children/*);  [t] "mal";[t] count(children/*[1]/children/*); [t] "Zeilenmatrize"; [p] (pause:long); [m] children/*[1]/children/* (ctxtFunc:CTXFnodeCounter,context:"Spalte-:",grammar:simpleDet); [p] (pause:long){self::matrix{@role="rowvector"'.split("{"),["SpecializedRule","matrix-row-vector","default","Matrix_SpeakColNum"],'Rule{matrix-row-vector-simple{default{[t] "die" (grammar:article); [t] count(children/*);  [t] "mal";[t] count(children/*[1]/children/*); [t] "Zeilenmatrize"; [p] (pause:long); [m] children/*[1]/children/* (sepFunc:CTXFpauseSeparator,separator:"short",grammar:simpleDet); [p] (pause:long){self::matrix{@role="rowvector"{count(children/*[1]/children/*)<4{CQFcellsSimple'.split("{"),'Rule{matrix-row-vector-simple{Matrix_SilentColNum{[t] "die" (grammar:article); [t] count(children/*);  [t] "mal";[t] count(children/*[1]/children/*); [t] "Zeilenmatrize"; [p] (pause:long); [m] children/*[1]/children/* (sepFunc:CTXFpauseSeparator,separator:"short",grammar:simpleDet); [p] (pause:long){self::matrix{@role="rowvector"'.split("{"),'Rule;matrix-row-simple;default;[m] children/* (sepFunc:CTXFpauseSeparator,separator:"short");self::row;contains(@grammar, "simpleDet")'.split(";"),["Rule","matrix-row-simple","Matrix_SilentColNum",'[m] children/* (sepFunc:CTXFpauseSeparator,separator:"short")',"self::row"],'Rule;line-simple;default;[n] children/*[1];self::line;contains(@grammar, "simpleDet")'.split(";"),["Rule","matrix-row","default",'[m] children/* (ctxtFunc:CTXFnodeCounter,context:"Spalte-,- ",sepFunc:CTXFpauseSeparator,separator:"medium"); [p] (pause:long)',"self::row"],["SpecializedRule","matrix-row","default","Matrix_SpeakColNum"],["Rule","matrix-cell","default","[n] children/*[1]","self::cell"],'Rule{matrix-end-matrix{Matrix_EndMatrix{[n] . (grammar:EndMatrix); [t] "Ende Matrize"{self::matrix{not(contains(@grammar, "EndMatrix"))'.split("{"),'Rule{matrix-end-vector{Matrix_EndMatrix{[n] . (grammar:EndMatrix); [t] "Ende Matrize"{self::vector{not(contains(@grammar, "EndMatrix"))'.split("{"),'Rule{matrix-end-determinant{Matrix_EndMatrix{[n] . (grammar:EndMatrix); [t] "Ende Determinante"{self::matrix{@role="determinant"{not(contains(@grammar, "EndMatrix"))'.split("{"),["Rule","vector","Matrix_Vector",'[t] "der" (grammar:article); [t] count(children/*);  [t] "mal";[t] count(children/*[1]/children/*); [t] "Spaltenvektor"; [p] (pause:long); [m] children/* (ctxtFunc:CTXFnodeCounter,context:"Zeile-:",grammar:simpleDet); [p] (pause:long)',"self::vector"],["SpecializedRule","vector","Matrix_Vector","Matrix_EndVector"],'Rule{vector-simple{Matrix_Vector{[t] "der" (grammar:article); [t] count(children/*);  [t] "mal"; [t] count(children/*[1]/children/*); [t] "Spaltenvektor"; [p] (pause:long); [m] children/* (sepFunc:CTXFpauseSeparator,separator:"short",grammar:simpleDet); [p] (pause:long){self::vector{count(children/*)<4{CQFcellsSimple'.split("{"),["SpecializedRule","vector-simple","Matrix_Vector","Matrix_EndVector"],'Rule{row-vector{Matrix_Vector{[t] "der" (grammar:article); [t] count(children/*);  [t] "mal";[t] count(children/*[1]/children/*); [t] "Zeilenvektor"; [p] (pause:long); [m] children/*[1]/children/* (ctxtFunc:CTXFnodeCounter,context:"Spalte-:",grammar:simpleDet); [p] (pause:long){self::matrix{@role="rowvector"'.split("{"),["SpecializedRule","row-vector","Matrix_Vector","Matrix_EndVector"],'Rule{row-vector-simple{Matrix_Vector{[t] "der" (grammar:article); [t] count(children/*);  [t] "mal";[t] count(children/*[1]/children/*); [t] "Zeilenvektor"; [p] (pause:long); [m] children/*[1]/children/* (sepFunc:CTXFpauseSeparator,separator:"short",grammar:simpleDet); [p] (pause:long){self::matrix{@role="rowvector"{count(children/*[1]/children/*)<4{CQFcellsSimple'.split("{"),["SpecializedRule","row-vector-simple","Matrix_Vector","Matrix_EndVector"],'Rule{vector-end-matrix{Matrix_EndVector{[n] . (grammar:EndMatrix); [t] "Ende Matrize"{self::matrix{not(contains(@grammar, "EndMatrix")){self::*'.split("{"),'Rule{vector-end-vector{Matrix_EndVector{[n] . (grammar:EndMatrix); [t] "Ende Vektor"{self::vector{not(contains(@grammar, "EndMatrix")){self::*'.split("{"),'Rule{vector-end-vector{Matrix_EndVector{[n] . (grammar:EndMatrix); [t] "Ende Vektor"{self::matrix{@role="rowvector"{not(contains(@grammar, "EndMatrix")){self::*'.split("{"),'Rule{vector-end-determinant{Matrix_EndVector{[n] . (grammar:EndMatrix); [t] "Ende Determinante"{self::matrix{@role="determinant"{not(contains(@grammar, "EndMatrix")){self::*'.split("{"),'Rule,binomial,Matrix_Combinatoric,[n] children/*[1]/children/*[1]; [t] "über"; [n] children/*[2]/children/*[1]; ,self::vector,@role="binomial"'.split(","),'Rule{lines-summary{default{[p] (pause:short); [t] count(children/*); [t] "Zeilen";  [n] . (grammar:layoutSummary){self::multiline{not(contains(@grammar, "layoutSummary")){self::*'.split("{"),'Rule;lines-summary;MultiLineOverview_None;[n] . (grammar:layoutSummary);self::multiline;not(contains(@grammar, "layoutSummary"));self::*'.split(";"),["Aliases","lines-summary","self::table",'not(contains(@grammar, "layoutSummary"))'],'Rule{cases-summary{default{[p] (pause:short); [t] count(children/*); [t] "Fälle";  [n] . (grammar:layoutSummary){self::cases{not(contains(@grammar, "layoutSummary"))'.split("{"),'Rule;cases-summary;MultiLineOverview_None;[n] . (grammar:layoutSummary);self::cases;not(contains(@grammar, "layoutSummary"));self::*'.split(";"),["Rule","lines","default",'[p] (pause:short); [m] children/* (ctxtFunc:CTXFnodeCounter,context:"Zeile-:",sepFunc:CTXFpauseSeparator,separator:"long"); [p] (pause:long)',"self::table"],["Aliases","lines","self::multiline"],["Rule","line","default","[n] children/*[1]","self::line"],'Rule;row-medium;default;[m] children/* (sepFunc:CTXFpauseSeparator,separator:"medium");self::row;@role="table"'.split(";"),["Aliases","row-medium","self::row",'@role="cases"'],'Rule;row-long;MultiLinePausesBetweenColumns_Long;[m] children/* (sepFunc:CTXFpauseSeparator,separator:"long");self::row;@role="table"'.split(";"),["Aliases","row-long","self::row",'@role="cases"'],'Rule;row-short;MultiLinePausesBetweenColumns_Short;[m] children/* (sepFunc:CTXFpauseSeparator,separator:"short");self::row;@role="table"'.split(";"),["Aliases","row-short","self::row",'@role="cases"'],'Rule;blank-cell;default;[t] "leer";self::cell;count(children/*)=0'.split(";"),'Rule;blank-empty;default;[t] "leer";self::empty;count(../*)=1;name(../..)="cell" or name(../..)="line"'.split(";"),["Rule","cases","default",'[p] (pause:short);  [m] children/* (ctxtFunc:CTXFnodeCounter,context:"Fall-:",sepFunc:CTXFpauseSeparator,separator:"long"); [p] (pause:long)',"self::cases"],'Rule{lines-cases-summary{MultiLineLabel_Case{[p] (pause:short); [t] count(children/*); [t] "Fälle";  [n] . (grammar:layoutSummary){self::multiline{not(contains(@grammar, "layoutSummary"))'.split("{"),["Aliases","lines-cases-summary","self::table",'not(contains(@grammar, "layoutSummary"))'],["Rule","lines-cases","MultiLineLabel_Case",'[p] (pause:short); [m] children/* (ctxtFunc:CTXFnodeCounter,context:"Fall-:",sepFunc:CTXFpauseSeparator,separator:"long"); [p] (pause:long)',"self::table"],["Aliases","lines-cases","self::multiline"],'Rule{lines-equations-summary{MultiLineLabel_Equation{[p] (pause:short); [t] count(children/*); [t] "Gleichungen";  [n] . (grammar:layoutSummary){self::multiline{not(contains(@grammar, "layoutSummary"))'.split("{"),["Aliases","lines-equations-summary","self::table",'not(contains(@grammar, "layoutSummary"))'],["Rule","lines-equations","MultiLineLabel_Equation",'[p] (pause:short); [m] children/* (ctxtFunc:CTXFnodeCounter,context:"Gleichung-:",sepFunc:CTXFpauseSeparator,separator:"long"); [p] (pause:long)',"self::table"],["Aliases","lines-equations","self::multiline"],'Rule{lines-steps-summary{MultiLineLabel_Step{[p] (pause:short); [t] count(children/*); [t] "Rechenschritte";  [n] . (grammar:layoutSummary){self::multiline{not(contains(@grammar, "layoutSummary"))'.split("{"),["Aliases","lines-steps-summary","self::table",'not(contains(@grammar, "layoutSummary"))'],["Rule","lines-steps","MultiLineLabel_Step",'[p] (pause:short); [m] children/* (ctxtFunc:CTXFnodeCounter,context:"Schritt-:",sepFunc:CTXFpauseSeparator,separator:"long"); [p] (pause:long)',"self::table"],["Aliases","lines-steps","self::multiline"],'Rule{lines-rows-summary{MultiLineLabel_Row{[p] (pause:short); [t] count(children/*); [t] "Zeilen";  [n] . (grammar:layoutSummary){self::multiline{not(contains(@grammar, "layoutSummary"))'.split("{"),["Aliases","lines-rows-summary","self::table",'not(contains(@grammar, "layoutSummary"))'],["Rule","lines-rows","MultiLineLabel_Row",'[p] (pause:short); [m] children/* (ctxtFunc:CTXFnodeCounter,context:"Zeile-:",sepFunc:CTXFpauseSeparator,separator:"long"); [p] (pause:long)',"self::table"],["Aliases","lines-rows","self::multiline"],'Rule{lines-constraints-summary{MultiLineLabel_Constraint{[p] (pause:short); [t] count(children/*); [t] "Bedingungen";  [n] . (grammar:layoutSummary){self::multiline{not(contains(@grammar, "layoutSummary"))'.split("{"),["Aliases","lines-constraints-summary","self::table",'not(contains(@grammar, "layoutSummary"))'],["Rule","lines-constraints","MultiLineLabel_Constraint",'[p] (pause:short); [m] children/* (ctxtFunc:CTXFnodeCounter,context:"Bedingung-:",sepFunc:CTXFpauseSeparator,separator:"long"); [p] (pause:long)',"self::table"],["Aliases","lines-constraints","self::multiline"],'Rule{lines-none{MultiLineLabel_None{[p] (pause:short); [m] children/* (sepFunc:CTXFpauseSeparator,separator:"long"); [p] (pause:long){self::table{contains(@grammar, "layoutSummary")'.split("{"),["Aliases","lines-none","self::multiline",'contains(@grammar, "layoutSummary")'],["Aliases","lines-none","self::cases",'contains(@grammar, "layoutSummary")'],["Rule","bigop","default",'[n] children/*[1]; [t] "über"; [n] children/*[2]; [p] (pause:short)',"self::bigop"],["Rule","limboth","default",'[n] children/*[1]; [t] "von"; [n] children/*[2];[t] "bis"; [n] children/*[3];',"self::limboth"],["Rule","limlower","default",'[n] children/*[1]; [t] "über"; [n] children/*[2]; [p] (pause:short)',"self::limlower"],["Rule","limupper","default",'[n] children/*[1]; [t] "unter"; [n] children/*[2]; [p] (pause:short)',"self::limupper"],["Rule","integral","default",'[t] "das"; [n] children/*[1]; [t] "über"; [n] children/*[2]; [p] (pause:short)',"self::integral"],["Rule","overscript","default",'[n] children/*[1]; [t] "unter"; [n] children/*[2]; [p] (pause:short)',"self::overscore"],'Rule,overscript,default,[n] children/*[1]; [n] children/*[2];,self::overscore,children/*[2][@role="overaccent"]'.split(","),'Rule,overscript-limits,default,[n] children/*[1]; [t] "bis"; [n] children/*[2],self::overscore,children/*[2][@role!="overaccent"],name(children/*[1])="underscore",children/*[1]/children/*[2][@role!="underaccent"]'.split(","),["Rule","underscript","default",'[n] children/*[1]; [t] "über"; [n] children/*[2]; [p] (pause:short)',"self::underscore"],'Rule,underscript-limits,default,[n] children/*[1]; [t] "von"; [n] children/*[2],self::underscore,@role="underover",children/*[2][@role!="underaccent"]'.split(","),["Rule","number","default","[n] text()","self::number"],'Rule,mixed-number,default,[n] children/*[1]; [n] children/*[2]; ,self::number,@role="mixed"'.split(","),'Rule{number-with-chars{default{[t] "Zahl"; [m] CQFspaceoutNumber (grammar:protected){self::number{@role="othernumber"{"" != translate(text(), "0123456789.,", ""){not(contains(@grammar, "protected"))'.split("{"),'Rule,decimal-period,default,[t] "Dezimalbruch"; [n] children/*[1] (grammar:spaceout); [t] "Komma mit Periode";  [n] children/*[3]/children/*[1] (grammar:spaceout),self::punctuated,@role="sequence",count(./content/*)=1,./content/*[1][@role="fullstop"],name(children/*[1])="number",children/*[1][@role="integer"],name(children/*[3])="overscore",children/*[3][@role="integer"],children/*[3]/children/*[2][@role="overaccent"],children/*[3]/children/*[2][text()="¯" or text()="￣" or text()="＿" or text()="_" or text()="‾"]'.split(","),'Rule,decimal-period,default,[t] "Dezimalbruch"; [n] children/*[1] (grammar:spaceout); [t] "mit Periode";  [n] children/*[2]/children/*[1] (grammar:spaceout);,self::infixop,@role="implicit",count(./children/*)=2,name(children/*[1])="number",children/*[1][@role="float"],name(children/*[2])="overscore",children/*[2][@role="integer"],children/*[2]/children/*[2][@role="overaccent"],children/*[2]/children/*[2][text()="¯" or text()="￣" or text()="＿" or text()="_" or text()="‾"]'.split(","),'Rule,decimal-period-singular,default,[t] "Dezimalbruch"; [n] children/*[1] (grammar:spaceout); [t] "Komma mit Periode";  [n] children/*[3]/children/*[1] (grammar:spaceout),self::punctuated,@role="sequence",count(./content/*)=1,./content/*[1][@role="fullstop"],name(children/*[1])="number",children/*[1][@role="integer"],name(children/*[3])="overscore",children/*[3][@role="integer"],children/*[3]/children/*[2][@role="overaccent"],children/*[3]/children/*[2][text()="¯" or text()="￣" or text()="＿" or text()="_" or text()="‾"],string-length(./children/*[3]/children/*[1]/text())=1'.split(","),'Rule,decimal-period-singular,default,[t] "Dezimalbruch"; [n] children/*[1] (grammar:spaceout); [t] "mit Periode";  [n] children/*[2]/children/*[1] (grammar:spaceout);,self::infixop,@role="implicit",count(./children/*)=2,name(children/*[1])="number",children/*[1][@role="float"],name(children/*[2])="overscore",children/*[2][@role="integer"],children/*[2]/children/*[2][@role="overaccent"],children/*[2]/children/*[2][text()="¯" or text()="￣" or text()="＿" or text()="_" or text()="‾"],string-length(./children/*[2]/children/*[1]/text())=1'.split(","),'Rule;number-with-spaces;default;[m] CQFspaceoutNumber (grammar:!spaceout:number);self::number;contains(@grammar, "spaceout")'.split(";"),'Rule;decimal-point;default;[t] "Komma";self::punctuation;@role="fullstop";contains(@grammar,"number")'.split(";"),'Rule,line-segment,default,[t] "die Strecke"; [n] children/*[1]/children/*[1]; [n] children/*[1]/children/*[2]; [p] (pause:short),self::overscore,@role="implicit",children/*[2][@role="overaccent"],children/*[2][text()="¯" or text()="￣" or text()="＿" or text()="_" or text()="‾"],name(children/*[1])="infixop",count(./children/*[1]/children/*)=2'.split(","),'Rule,conjugate,Bar_Conjugate,[t] "die komplexe Konjugation von"; [n] children/*[1],self::overscore,children/*[2][@role="overaccent"],children/*[2][text()="¯" or text()="￣" or text()="＿" or text()="_" or text()="‾"]'.split(","),'Rule;defined-by;default;[t] "ist definiert als" (pause:short);self::overscore;@role="equality";@embellished="relation";name(children/*[2])="text";children/*[2][text()]="def"'.split(";"),'Rule,adorned-sign,default,[n] children/*[1] ; [t] "Zeichen mit darüberstehendem"; [n] children/*[2],self::overscore,@embellished,name(children/*[1])="operator" or name(children/*[1])="relation"'.split(","),'Rule;factorial;default;[t] "Fakultät";self::punctuation;text()="!";name(preceding-sibling::*[1])!="text"'.split(";"),["Rule","tensor-base","default","[n] children/*[2]; [n] children/*[3]; [n] children/*[1]; [n] children/*[4]; [n] children/*[5]","self::tensor"],'Rule{left-super{default{[t] "linker oberer Index"; [n] text(){self::*[@role="leftsuper"]{not(contains(@grammar,"combinatorics"))'.split("{"),'Rule{left-super{default{[t] "linker oberer Index"; [m] children/*{self::punctuated{@role="leftsuper"{not(contains(@grammar,"combinatorics"))'.split("{"),'Rule{left-sub{default{[t] "linker unterer Index"; [n] text(){self::*[@role="leftsub"]{not(contains(@grammar,"combinatorics"))'.split("{"),'Rule{left-sub{default{[t] "linker unterer Index"; [m] children/*{self::punctuated{@role="leftsub"{not(contains(@grammar,"combinatorics"))'.split("{"),'Rule{right-super{default{[t] "rechter oberer Index"; [n] text(){self::*[@role="rightsuper"]{not(contains(@grammar,"combinatorics"))'.split("{"),'Rule{right-super{default{[t] "rechter oberer Index"; [m] children/*{self::punctuated{@role="rightsuper"{not(contains(@grammar,"combinatorics"))'.split("{"),'Rule{right-sub{default{[t] "rechter unterer Index"; [n] text(){self::*[@role="rightsub"]{not(contains(@grammar,"combinatorics"))'.split("{"),'Rule{right-sub{default{[t] "rechter unterer Index"; [m] children/*{self::punctuated{@role="rightsub"{not(contains(@grammar,"combinatorics"))'.split("{"),'Rule;empty-index;default;[p] (pause:medium);self::empty;@role="rightsub" or @role="rightsuper" or @role="leftsub" or @role="leftsuper"'.split(";"),'Rule,combinatorics,default,[n] children/*[2] (grammar:combinatorics); [n] children/*[1]; [n] children/*[4] (grammar:combinatorics),self::tensor,name(children/*[3])="empty",name(children/*[5])="empty",children/*[1][text()="P" or text()="C"]'.split(","),'Rule,choose,CombinationPermutation_ChoosePermute,[n] children/*[4] (grammar:combinatorics); [t] "aus"; [n] children/*[2] (grammar:combinatorics),self::tensor,name(children/*[3])="empty",name(children/*[5])="empty",children/*[1][text()="C"]'.split(","),'Rule,permute,CombinationPermutation_ChoosePermute,[n] children/*[4] (grammar:combinatorics); [t] "Permutionen von"; [n] children/*[2] (grammar:combinatorics),self::tensor,name(children/*[3])="empty",name(children/*[5])="empty",children/*[1][text()="P"]'.split(",")]},sre.Grammar.getInstance().setPreprocessor("numbers2alpha",sre.ClearspeakUtil.numbersToAlpha),sre.ClearspeakRules={domain:"clearspeak",functions:[["CTXF","CTXFpauseSeparator",sre.StoreUtil.pauseSeparator],["CTXF","CTXFnodeCounter",sre.ClearspeakUtil.nodeCounter],["CTXF","CTXFcontentIterator",sre.StoreUtil.contentIterator],["CSF","CSFvulgarFraction",sre.NumbersUtil.vulgarFraction],["CQF","CQFvulgarFractionSmall",sre.ClearspeakUtil.isSmallVulgarFraction],["CQF","CQFcellsSimple",sre.ClearspeakUtil.allCellsSimple],["CSF","CSFordinalExponent",sre.ClearspeakUtil.ordinalExponent],["CSF","CSFwordOrdinal",sre.ClearspeakUtil.wordOrdinal],["CQF","CQFisCapital",sre.ClearspeakUtil.isCapitalLetter],["CQF","CQFmatchingFences",sre.ClearspeakUtil.matchingFences],["CSF","CSFnestingDepth",sre.ClearspeakUtil.nestingDepth],["CQF","CQFfencedArguments",sre.ClearspeakUtil.fencedArguments],["CQF","CQFsimpleArguments",sre.ClearspeakUtil.simpleArguments],["CQF","CQFisHyperbolic",sre.ClearspeakUtil.isHyperbolic],["CQF","CQFisLogarithm",sre.ClearspeakUtil.isLogarithmWithBase],["CQF","CQFspaceoutNumber",sre.MathspeakUtil.spaceoutNumber],["CQF","CQFfirstCurrency",sre.ClearspeakUtil.firstCurrency],["CQF","CQFlastCurrency",sre.ClearspeakUtil.lastCurrency]],rules:['Rule{collapsed{default{[t] "collapsed"; [n] . (engine:modality=summary,grammar:collapsed){self::*[@alternative]{not(contains(@grammar, "collapsed"))'.split("{"),["Rule","direct-speech","default","[t] @ext-speech","self::*[@ext-speech]"],["Rule","stree","default","[n] ./*[1]","self::stree"],["Rule","unknown","default","[n] text()","self::unknown"],'Rule;protected;default;[t] text();self::number;contains(@grammar, "protected")'.split(";"),["Rule","omit-empty","default",'[p] (pause:"short")',"self::empty"],'Rule{font{default{[t] @font (grammar:localFont); [n] self::* (grammar:ignoreFont=@font,pause:"short"){self::*{@font{not(contains(@grammar, "ignoreFont")){@font!="normal"'.split("{"),'Rule{font-identifier{default{[t] @font (grammar:localFont); [n] self::* (grammar:ignoreFont=@font,pause:"short"){self::identifier{string-length(text())=1{@font{@font="normal"{not(contains(@grammar, "ignoreFont")){@role!="unit"'.split("{"),'Rule;omit-font;default;[n] self::* (grammar:ignoreFont=@font);self::identifier;string-length(text())=1;@font;not(contains(@grammar, "ignoreFont"));@font="italic"'.split(";"),'Rule{german-font{default{[t] "German"; [n] self::* (grammar:ignoreFont=@font){self::*{@font{not(contains(@grammar, "ignoreFont")){@font="fraktur"'.split("{"),'Rule{german-font{default{[t] "bold German"; [n] self::* (grammar:ignoreFont=@font){self::*{@font{not(contains(@grammar, "ignoreFont")){@font="bold-fraktur"'.split("{"),["Rule","text","default","[n] text()","self::text"],'Rule;capital;default;[n] text() (pitch:0.6,grammar:ignoreCaps="cap");self::identifier;@role="latinletter" or @role="greekletter" or @role="simple function";CQFisCapital'.split(";"),'Rule;capital;Caps_SayCaps;[n] text();self::identifier;@role="latinletter" or @role="greekletter";CQFisCapital'.split(";"),'Rule{capital{Caps_SayCaps{[p] (pause:"short"); [n] text(){self::identifier{@role="latinletter" or @role="greekletter"{CQFisCapital{preceding-sibling::*[1]{not(name(preceding-sibling::*[1])="function"){not(contains(@grammar, "angle"))'.split("{"),'Rule;capital;Caps_SayCaps;[n] text() (pause:"short");self::identifier;@role="latinletter" or @role="greekletter";CQFisCapital;following-sibling::*[1]'.split(";"),'Rule{capital{Caps_SayCaps{[p] (pause:"short"); [n] text() (pause:"short"){self::identifier{@role="latinletter" or @role="greekletter"{CQFisCapital{preceding-sibling::*[1]{following-sibling::*[1]{not(name(preceding-sibling::*[1])="function"){not(contains(@grammar, "angle"))'.split("{"),'Rule,punctuation-lr,default,[p] (pause:"short"); [n] text() (pause:"short"),self::punctuation,@role="comma"'.split(","),'Rule;punctuation;default;[n] text();self::punctuation;@role="comma";not(preceding-sibling::*[1]/children);not(following-sibling::*[1]/children)'.split(";"),'Rule,punctuation-l,default,[p] (pause:"short"); [n] text(),self::punctuation,@role="comma",not(following-sibling::*[1]/children)'.split(","),'Rule;punctuation-r;default;[n] text() (pause:"short");self::punctuation;@role="comma";not(preceding-sibling::*[1]/children)'.split(";"),'Rule;ellipsis;Ellipses_AndSoOn;[t] "and so on";self::punctuation;@role="ellipsis";not(following-sibling::*[1]);not(preceding-sibling::*[last()][@role="ellipsis"])'.split(";"),'Rule;ellipsis;Ellipses_AndSoOn;[t] "and so on up to";self::punctuation;@role="ellipsis";preceding-sibling::*[1];following-sibling::*[1]'.split(";"),'Rule,vbar-evaluated,default,[n] children/*[1]; [p] (pause:"short"); [t] "evaluated at"; [n] content/*[1]/children/*[2]; [p] (pause:"short"),self::punctuated,@role="endpunct",content/*[1][@role="vbar"],content/*[1][@embellished],name(content/*[1])="subscript"'.split(","),'Rule,vbar-evaluated,default,[n] children/*[1]; [p] (pause:"short"); [t] "evaluated at"; [n] content/*[1]/children/*[2]; [p] (pause:"short"); [t] "minus the same expression evaluated at"; [n] content/*[1]/children/*[1]/children/*[2]; [p] (pause:"short"),self::punctuated,@role="endpunct",content/*[1][@role="vbar"],content/*[1][@embellished],name(content/*[1])="superscript",name(content/*[1]/children/*[1])="subscript"'.split(","),'Rule;vbar-such-that;VerticalLine_SuchThat;[t] "such that";self::punctuation;@role="vbar";not(parent::*/parent::*[@embellished="punctuation"])'.split(";"),'Rule;vbar-divides;default;[t] "divides";self::punctuation;@role="vbar";not(parent::*/parent::*[@embellished="punctuation"]);parent::*/parent::*[@role="sequence"]'.split(";"),'Rule;vbar-divides;VerticalLine_Divides;[t] "divides";self::punctuation;@role="vbar";not(parent::*/parent::*[@embellished="punctuation"])'.split(";"),'Rule;vbar-given;VerticalLine_Given;[t] "given";self::punctuation;@role="vbar";not(parent::*/parent::*[@embellished="punctuation"])'.split(";"),'Rule;set-member;default;[t] "in";self::operator;@role="set extended";text()="∈" or text()="∊"'.split(";"),["SpecializedRule","set-member","default","SetMemberSymbol_Member",'[t] "member of"'],["SpecializedRule","set-member","default","SetMemberSymbol_Element",'[t] "element of"'],["SpecializedRule","set-member","default","SetMemberSymbol_Belongs",'[t] "belonging to"'],'Rule;set-not-member;default;[t] "not in";self::operator;@role="set extended";text()="∉"'.split(";"),["SpecializedRule","set-not-member","default","SetMemberSymbol_Member",'[t] "not member of"'],["SpecializedRule","set-not-member","default","SetMemberSymbol_Element",'[t] "not element of"'],["SpecializedRule","set-not-member","default","SetMemberSymbol_Belongs",'[t] "not belonging to"'],'Rule,prime,default,[n] children/*[1]; [n] children/*[2],self::superscript,children/*[2],children/*[2][@role="prime"],self::*'.split(","),'Rule,feet,default,[n] children/*[1]; [t] "feet",self::superscript,children/*[2][@role="prime"],name(children/*[1])="number",children/*[2][text()="′"],not(preceding-sibling::*[@role="degree"])'.split(","),'Rule,foot,default,[n] children/*[1]; [t] "foot",self::superscript,children/*[2][@role="prime"],name(children/*[1])="number",children/*[2][text()="′"],children/*[1][text()="1"],not(preceding-sibling::*[@role="degree"])'.split(","),'Rule,inches,default,[n] children/*[1]; [t] "inches",self::superscript,children/*[2][@role="prime"],name(children/*[1])="number",children/*[2][text()="″"],not(preceding-sibling::*[@role="degree"])'.split(","),'Rule,inch,default,[n] children/*[1]; [t] "inch",self::superscript,children/*[2][@role="prime"],name(children/*[1])="number",children/*[2][text()="″"],children/*[1][text()="1"],not(preceding-sibling::*[@role="degree"])'.split(","),'Rule,minutes,default,[p] (pause:short); [n] children/*[1]; [t] "minutes",self::superscript,children/*[2][@role="prime"],preceding-sibling::*[@role="degree"],children/*[2][text()="′"]'.split(","),'Rule,minute,default,[p] (pause:short); [n] children/*[1]; [t] "minute",self::superscript,children/*[2][@role="prime"],preceding-sibling::*[@role="degree"],children/*[2][text()="′"],children/*[1][text()="1"]'.split(","),'Rule,seconds,default,[p] (pause:short); [n] children/*[1]; [t] "seconds",self::superscript,children/*[2][@role="prime"],preceding-sibling::*[@role="degree"],children/*[2][text()="″"]'.split(","),'Rule,second,default,[p] (pause:short); [n] children/*[1]; [t] "second",self::superscript,children/*[2][@role="prime"],preceding-sibling::*[@role="degree"],children/*[2][text()="″"],children/*[1][text()="1"]'.split(","),'Rule,degrees-angle,Prime_Angle,[n] children/*[1]; [t] "degrees"; [p] (pause:short),self::punctuation,@role="degree"'.split(","),'Rule,degree-angle,Prime_Angle,[n] children/*[1]; [t] "degree"; [p] (pause:short),self::punctuation,@role="degree",children/*[1][text()="1"]'.split(","),'Rule{minutes-angle{Prime_Angle{[n] children/*[1]; [t] "minutes"; [p] (pause:short){self::superscript{children/*[2][@role="prime"]{name(children/*[1])="number" or (children/*[1][@role="latinletter"] and ""=translate(children/*[1]/text(),"abcdefghijklmnopqrstuvwxyz", "")){children/*[2][text()="′"]'.split("{"),'Rule,minute-angle,Prime_Angle,[n] children/*[1]; [t] "minute"; [p] (pause:short),self::superscript,children/*[2][@role="prime"],children/*[2][text()="′"],children/*[1][text()="1"]'.split(","),'Rule{seconds-angle{Prime_Angle{[n] children/*[1]; [t] "seconds"; [p] (pause:short){self::superscript{children/*[2][@role="prime"]{name(children/*[1])="number" or (children/*[1][@role="latinletter"] and ""=translate(children/*[1]/text(),"abcdefghijklmnopqrstuvwxyz", "")){children/*[2][text()="″"]'.split("{"),'Rule,second-angle,Prime_Angle,[n] children/*[1]; [t] "second"; [p] (pause:short),self::superscript,children/*[2][@role="prime"],children/*[2][text()="″"],children/*[1][text()="1"]'.split(","),'Rule{feet-length{Prime_Length{[n] children/*[1]; [t] "feet"; [p] (pause:short){self::superscript{children/*[2][@role="prime"]{name(children/*[1])="number" or (children/*[1][@role="latinletter"] and ""=translate(children/*[1]/text(),"abcdefghijklmnopqrstuvwxyz", "")){children/*[2][text()="′"]'.split("{"),'Rule,foot-length,Prime_Length,[n] children/*[1]; [t] "foot"; [p] (pause:short),self::superscript,children/*[2][@role="prime"],children/*[2][text()="′"],children/*[1][text()="1"]'.split(","),'Rule{inches-length{Prime_Length{[n] children/*[1]; [t] "inches"; [p] (pause:short){self::superscript{children/*[2][@role="prime"]{name(children/*[1])="number" or (children/*[1][@role="latinletter"] and ""=translate(children/*[1]/text(),"abcdefghijklmnopqrstuvwxyz", "")){children/*[2][text()="″"]'.split("{"),'Rule,inch-length,Prime_Length,[n] children/*[1]; [t] "inch"; [p] (pause:short),self::superscript,children/*[2][@role="prime"],children/*[2][text()="″"],children/*[1][text()="1"]'.split(","),["Rule","punctuated","default","[m] children/*","self::punctuated"],["Rule","function","default","[n] text()","self::function"],'Rule{function-article{default{[t] "the"; [n] text(){self::function{@role="prefix function"{contains(@grammar, "addArticle")'.split("{"),["Rule","appl","default",'[n] children/*[1]; [t] "of"; [n] children/*[2]; [p] (pause:"short")',"self::appl"],'Rule,appl-simple,default,[n] children/*[1]; [t] "of"; [p] (pause:"short"); [n] children/*[2]; [p] (pause:"short"),self::appl,@role="simple function",name(children/*[2])="appl"'.split(","),'Rule,appl-simple,default,[n] children/*[1]; [t] "of"; [p] (pause:"short"); [n] children/*[2]; [p] (pause:"short"),self::appl,@role="simple function",name(children/*[2])="fenced",name(children/*[2]/children/*[1])="appl"'.split(","),["Rule","appl","Functions_None",'[p] (pause:"short"); [n] children/*[1]; [t] "times"; [n] children/*[2]; [p] (pause:"short")',"self::appl"],'Rule,function-prefix,default,[n] children/*[1]; [n] children/*[2],self::appl,@role="prefix function"'.split(","),'Rule{binary-operation{ImpliedTimes_MoreImpliedTimes{[n] . (grammar:impliedTimes); [p] (pause:"short"){self::appl{@role="prefix function"{parent::*/parent::infixop[@role="implicit"]{following-sibling::*{not(contains(@grammar, "impliedTimes"))'.split("{"),'Rule{function-prefix-simple-arg{default{[n] children/*[1]; [n] children/*[2]{self::appl{@role="prefix function"{name(children/*[2])="fenced"{contains(children/*[2]/children/*[1]/@annotation, "clearspeak:simple"){name(children/*[2]/children/*[1])!="number"{name(children/*[2]/children/*[1])!="identifier"{name(children/*[2]/children/*[1])!="appl"'.split("{"),'Rule,function-prefix-embell,default,[p] (pause:"short"); [n] children/*[1]; [n] children/*[2]; [p] (pause:"short"); ,self::appl,@role="prefix function",name(children/*[1])!="function"'.split(","),'Rule{function-prefix-fenced-or-frac-arg{default{[p] (pause:"short"); [n] children/*[1] (grammar:addArticle); [t] "of"; [n] children/*[2]; [p] (pause:"short"){self::appl{@role="prefix function"{(name(children/*[2])="fenced" and not(contains(children/*[2]/children/*[1]/@annotation, "clearspeak:simple"))) or name(children/*[2])="fraction" or (name(children/*[2])!="fenced" and not(contains(children/*[2]/@annotation, "clearspeak:simple"))){self::*'.split("{"),'Rule,function-prefix-subscript,default,[p] (pause:"short"); [n] children/*[1] (grammar:addArticle); [t] "of"; [p] (pause:"short"); [n] children/*[2]; [p] (pause:"short"),self::appl,@role="prefix function",name(children/*[1])="subscript",self::*'.split(","),'Rule{function-ln{default{[n] children/*[1]; [n] children/*[2]{self::appl{@role="prefix function"{content/*[2][text()="ln"]{not(following-sibling::*){not(contains(@grammar, "NatLog"))'.split("{"),'Rule{function-ln{default{[n] children/*[1]; [n] children/*[2]; [p] (pause:"short"){self::appl{@role="prefix function"{content/*[2][text()="ln"]{not(contains(@grammar, "NatLog"))'.split("{"),'Rule{function-ln{default{[n] children/*[1]; [t] "of"; [n] children/*[2]; [p] (pause:"short"){self::appl{@role="prefix function"{content/*[2][text()="ln"]{name(children/*[2])="fenced"{not(contains(@grammar, "NatLog"))'.split("{"),'Rule;function-ln;Log_LnAsNaturalLog;[n] . (grammar:NatLog);self::appl;@role="prefix function";content/*[2][text()="ln"];not(following-sibling::*);not(contains(@grammar, "NatLog"))'.split(";"),'Rule{function-ln{Log_LnAsNaturalLog{[n] . (grammar:NatLog); [p] (pause:"short"){self::appl{@role="prefix function"{content/*[2][text()="ln"]{not(contains(@grammar, "NatLog"))'.split("{"),'Rule{function-prefix-as-exp{default{[n] children/*[1]; [t] "of"; [p] (pause:"short"); [n] children/*[2]; [p] (pause:"short"){self::appl{@role="prefix function"{name(parent::*/parent::*)="superscript"{not(following-sibling::*){(name(children/*[2])="fenced" and not(contains(children/*[2]/children/*[1]/@annotation, "clearspeak:simple"))) or name(children/*[2])="fraction" or (name(children/*[2])!="fenced" and not(contains(children/*[2]/@annotation, "clearspeak:simple")))'.split("{"),'Rule,function-prefix-subscript-as-exp,default,[n] children/*[1]; [t] "of"; [p] (pause:"short"); [n] children/*[2]; [p] (pause:"short"),self::appl,@role="prefix function",name(parent::*/parent::*)="superscript",not(following-sibling::*),name(children/*[1])="subscript"'.split(","),'Rule,function-prefix-hyper,default,[p] (pause:"short"); [n] children/*[1]; [t] "of"; [n] children/*[2]; [p] (pause:"short"),self::appl,@role="prefix function",CQFisHyperbolic'.split(","),'Rule{function-prefix-inverse{default{[p] (pause:"short"); [t] "the inverse"; [n] children/*[1]/children/*[1]; [t] "of"; [n] children/*[2]; [p] (pause:"short"){self::appl{@role="prefix function"{name(children/*[1])="superscript"{name(children/*[1]/children/*[2])="prefixop"{children/*[1]/children/*[2][@role="negative"]{children/*[1]/children/*[2]/children/*[1][text()="1"]{not(contains(@grammar, "functions_none"))'.split("{"),'Rule,appl-triginverse,Trig_TrigInverse,[p] (pause:"short"); [n] children/*[1]; [t] "of"; [n] children/*[2]; [p] (pause:"short"),self::appl,@role="prefix function",name(children/*[1])="superscript",name(children/*[1]/children/*[2])="prefixop",children/*[1]/children/*[2][@role="negative"],children/*[1]/children/*[2]/children/*[1][text()="1"]'.split(","),'Rule{function-prefix-arc-simple{Trig_ArcTrig{[p] (pause:"short"); [t] "arc"; [n] children/*[1]/children/*[1]; [n] children/*[2]; [p] (pause:"short"){self::appl{@role="prefix function"{name(children/*[1])="superscript"{name(children/*[1]/children/*[2])="prefixop"{children/*[1]/children/*[2][@role="negative"]{children/*[1]/children/*[2]/children/*[1][text()="1"]{not(contains(@grammar, "functions_none"))'.split("{"),'Rule{function-prefix-arc-simple{Trig_ArcTrig{[p] (pause:"short"); [t] "arc"; [n] children/*[1]/children/*[1]; [p] (pause:"short"); [n] children/*[2]; [p] (pause:"short"){self::appl{@role="prefix function"{name(children/*[1])="superscript"{name(children/*[1]/children/*[2])="prefixop"{children/*[1]/children/*[2][@role="negative"]{children/*[1]/children/*[2]/children/*[1][text()="1"]{name(children/*[2])="fenced"{children/*[2]/children/*[1][@role="prefix function"]{contains(children/*[2]/children/*[1]/@annotation, "clearspeak:simple"){not(contains(@grammar, "functions_none"))'.split("{"),'Rule{function-prefix-arc{Trig_ArcTrig{[p] (pause:"short"); [t] "arc"; [n] children/*[1]/children/*[1]; [t] "of"; [n] children/*[2]; [p] (pause:"short"){self::appl{@role="prefix function"{name(children/*[1])="superscript"{name(children/*[1]/children/*[2])="prefixop"{children/*[1]/children/*[2][@role="negative"]{children/*[1]/children/*[2]/children/*[1][text()="1"]{not(contains(@grammar, "functions_none")){(name(children/*[2])="fenced" and not(contains(children/*[2]/children/*[1]/@annotation, "clearspeak:simple"))) or (name(children/*[2])="fraction" and children/*[2][@role!="vulgar"])'.split("{"),'Rule{function-inverse{default{[n] children/*[1]; [t] "inverse"{self::superscript{@role="prefix function" or @role="simple function"{name(children/*[2])="prefixop"{children/*[2][@role="negative"]{children/*[2]/children/*[1][text()="1"]{not(contains(@grammar, "functions_none"))'.split("{"),'Rule,superscript-prefix-function,default,[t] "the"; [n] children/*[2] (grammar:ordinal); [t] "power of"; [n] children/*[1],self::superscript,@role="prefix function",name(children/*[2])="number",children/*[2][@role="integer"]'.split(","),'Rule,superscript-prefix-function,default,[t] "the"; [n] children/*[2] (grammar:ordinal); [t] "power of"; [n] children/*[1],self::superscript,@role="prefix function",name(children/*[2])="identifier"'.split(","),'Rule;function-inverse;Functions_None;[n] . (grammar:functions_none);self::superscript;@role="prefix function" or @role="simple function";name(children/*[2])="prefixop";children/*[2][@role="negative"];children/*[2]/children/*[1][text()="1"];not(contains(@grammar, "functions_none"))'.split(";"),["Rule","superscript","default",'[n] children/*[1]; [t] "raised to the exponent" (pause:"short"); [n] children/*[2]; [p] (pause:"short"); [t] "end exponent" (pause:"short")',"self::superscript"],'Rule,superscript-simple-exponent,default,[n] children/*[1]; [t] "raised to the"; [n] children/*[2]; [t] "power" (pause:"short"),self::superscript,not(descendant::superscript)'.split(","),'Rule,superscript-simple-exponent-end,default,[n] children/*[1]; [t] "raised to the"; [n] children/*[2]; [t] "power",self::superscript,not(descendant::superscript),not(following-sibling::*)'.split(","),'Aliases;superscript-simple-exponent;self::superscript;children/superscript/children/*[2][text()="2"] or children/superscript/children/*[2][text()="3"];name(children/superscript/children/*[1])="number";contains(children/superscript/children/*[1]/@annotation, "clearspeak:simple")'.split(";"),'Aliases;superscript-simple-exponent;self::superscript;children/superscript/children/*[2][text()="2"] or children/superscript/children/*[2][text()="3"];name(children/superscript/children/*[1])="fraction";contains(children/superscript/children/*[1]/@annotation, "clearspeak:simple")'.split(";"),["Aliases","superscript-simple-exponent","self::superscript",'children/superscript/children/*[2][text()="2"] or children/superscript/children/*[2][text()="3"]','name(children/superscript/children/*[1])="identifier"'],'Aliases;superscript-simple-exponent;self::superscript;children/*[2][@role="implicit"];count(children/*[2]/children/*)=2;contains(children/*[2]/children/*[1]/@annotation, "simple");name(children/*[2]/children/*[2])="superscript";(name(children/*[2]/children/*[2]/children/*[1])="number" and contains(children/*[2]/children/*[2]/children/*[1]/@annotation, "clearspeak:simple")) or name(children/*[2]/children/*[2]/children/*[1])="identifier";children/*[2]/children/*[2]/children/*[2][text()="2"] or children/*[2]/children/*[2]/children/*[2][text()="3"]'.split(";"),'Rule,superscript-ordinal,default,[n] children/*[1]; [t] "to the"; [n] children/*[2] (grammar:ordinal); [t] "power" (pause:"short"),self::superscript,name(children/*[2])="number",children/*[2][@role="integer"]'.split(","),["Aliases","superscript-ordinal","self::superscript",'name(children/*[2])="identifier"','children/*[2][@role="latinletter" or @role="greekletter" or @role="otherletter"]'],'Rule,superscript-non-ordinal,default,[n] children/*[1]; [t] "to the"; [n] children/*[2]; [t] "power" (pause:"short"),self::superscript,children/*[2][@role="negative"],name(children/*[2]/children/*[1])="number",children/*[2]/children/*[1][@role="integer"]'.split(","),'Rule{superscript-simple-function{default{[t] "the"; [n] children/*[2] (grammar:ordinal); [t] "power of" (pause:"short"); [n] children/*[1]{self::superscript{name(children/*[1])="identifier"{children/*[1][@role="simple function"]{children/*[2][@role!="prime"]{not(contains(@grammar, "functions_none"))'.split("{"),'Rule;superscript-simple-function;Functions_None;[n] . (grammar:functions_none);self::superscript;name(children/*[1])="identifier";children/*[1][@role="simple function"];not(contains(@grammar, "functions_none"))'.split(";"),'Rule,superscript-ordinal,Exponent_Ordinal,[n] children/*[1]; [t] "to the"; [n] children/*[2] (grammar:ordinal); [p] (pause:"short"),self::superscript,name(children/*[2])="number",children/*[2][@role="integer"]'.split(","),'Rule,superscript-ordinal,Exponent_Ordinal,[n] children/*[1]; [t] "to the"; [n] children/*[2]; [p] (pause:"short"),self::superscript,name(children/*[2])="prefixop",children/*[2][@role="negative"],name(children/*[2]/children/*[1])="number",children/*[2]/children/*[1][@role="integer"]'.split(","),'Rule,superscript-ordinal,Exponent_Ordinal,[n] children/*[1]; [t] "to the"; [n] children/*[2] (grammar:ordinal); [p] (pause:"short"),self::superscript,name(children/*[2])="identifier",children/*[2][@role="latinletter" or @role="greekletter" or @role="otherletter"]'.split(","),'Rule,superscript-ordinal-default,Exponent_Ordinal,[n] children/*[1]; [t] "raised to the exponent" (pause:"short"); [n] children/*[2]; [p] (pause:"short"); [t] "end exponent" (pause:"short"),self::superscript,children//superscript'.split(","),'Rule,superscript-ordinal,Exponent_OrdinalPower,[n] children/*[1]; [t] "to the"; [n] children/*[2] (grammar:ordinal); [t] "power"; [p] (pause:"short"),self::superscript,name(children/*[2])="number",children/*[2][@role="integer"]'.split(","),'Rule,superscript-ordinal,Exponent_OrdinalPower,[n] children/*[1]; [t] "to the"; [n] children/*[2]; [t] "power"; [p] (pause:"short"),self::superscript,name(children/*[2])="prefixop",children/*[2][@role="negative"],name(children/*[2]/children/*[1])="number",children/*[2]/children/*[1][@role="integer"]'.split(","),'Rule,superscript-ordinal,Exponent_OrdinalPower,[n] children/*[1]; [t] "to the"; [n] children/*[2] (grammar:ordinal); [t] "power"; [p] (pause:"short"),self::superscript,name(children/*[2])="identifier",children/*[2][@role="latinletter" or @role="greekletter" or @role="otherletter"]'.split(","),'Rule,superscript-ordinal-default,Exponent_OrdinalPower,[n] children/*[1]; [t] "raised to the exponent" (pause:"short"); [n] children/*[2]; [p] (pause:"short"); [t] "end exponent" (pause:"short"),self::superscript,children//superscript'.split(","),["Rule","superscript-power","Exponent_AfterPower",'[n] children/*[1]; [t] "raised to the power"; [n] children/*[2] (grammar:afterPower); [p] (pause:"short")',"self::superscript"],'Rule,superscript-power-default,Exponent_AfterPower,[n] children/*[1]; [t] "raised to the exponent" (pause:"short"); [n] children/*[2]; [p] (pause:"short"); [t] "end exponent" (pause:"short"),self::superscript,children//superscript'.split(","),'Rule{exponent{default{[n] text() (join:"-"); [t] "th"{self::identifier{contains(@grammar, "ordinal")'.split("{"),'Rule;exponent;default;[t] CSFordinalExponent;self::number;@role="integer";contains(@grammar, "ordinal");text()!="0"'.split(";"),'Rule;exponent;Exponent_Ordinal;[t] CSFwordOrdinal;self::number;@role="integer";contains(@grammar, "ordinal");text()!="0"'.split(";"),'Rule;exponent;Exponent_Ordinal;[t] "zero";self::number;@role="integer";contains(@grammar, "ordinal");text()="0"'.split(";"),'Rule;exponent;Exponent_OrdinalPower;[t] CSFwordOrdinal;self::number;@role="integer";contains(@grammar, "ordinal");text()!="0"'.split(";"),'Rule;exponent;Exponent_OrdinalPower;[t] "zero";self::number;@role="integer";contains(@grammar, "ordinal");text()="0"'.split(";"),'Rule,square,default,[n] children/*[1]; [t] "squared",self::superscript,@role!="unit",children/*[2][text()="2"],name(children/*[1])!="text" or not(name(children/*[1])="text" and (name(../../../punctuated[@role="text"]/..)="stree" or name(..)="stree")),self::*'.split(","),'Rule,cube,default,[n] children/*[1]; [t] "cubed",self::superscript,@role!="unit",children/*[2][text()="3"],name(children/*[1])!="text" or not(name(children/*[1])="text" and (name(../../../punctuated[@role="text"]/..)="stree" or name(..)="stree")),self::*'.split(","),'Rule;paren-simple;default;[n] children/*[1];self::fenced;@role="leftright";contains(children/*[1]/@annotation, "clearspeak:simple");name(../..)!="superscript" and name(../..)!="subscript"'.split(";"),'Rule;paren-simple-exp;default;[n] children/*[1];self::fenced;@role="leftright";name(../..)="superscript";children/*[1][@role="integer"] or children/*[1][@role="float"] or (children/*[1][@role="vulgar"] and contains(children/*[1]/@annotation, "clearspeak:simple")) or children/*[1][@role="latinletter"] or children/*[1][@role="greekletter"] or children/*[1][@role="otherletter"]'.split(";"),'Rule;paren-simple-nested-func;default;[n] children/*[1];self::fenced;@role="leftright";name(../*[1])="identifier" or name(../*[1])="function";parent::*/parent::*[@role="simple function" or @role="prefix function"];children/*[1][@role="simple function" or @role="prefix function"];contains(children/*[1]/children/*[2]/children/*[1]/@annotation, "clearspeak:simple") or name(children/*[1]/children/*[2]/children/*[1])="subscript" or name(children/*[1]/children/*[2]/children/*[1])="superscript" or children/*[1]/children/*[2]/children/*[1][@role="vulgar"] '.split(";"),'Rule{paren-simple-nested-func-no-bracket{Functions_None{[n] children/*[1];{self::fenced{@role="leftright"{name(../*[1])="identifier" or name(../*[1])="function"{parent::*/parent::*[@role="simple function" or @role="prefix function"]{children/*[1][@role="simple function" or @role="prefix function"]{name(children/*[1]/children/*[1])="identifier" or name(children/*[1]/children/*[1])="function"{contains(children/*[1]/children/*[2]/children/*[1]/@annotation, "clearspeak:simple"){name(children/*[1]/children/*[2]/children/*[1])="identifier" or name(children/*[1]/children/*[2]/children/*[1])="number"'.split("{"),'Rule,fences-open-close,default,[p] (pause:"short"); [n] content/*[1] (grammar:spokenFence); [p] (pause:"short"); [n] children/*[1]; [p] (pause:"short"); [n] content/*[2] (grammar:spokenFence); [p] (pause:"short"),self::fenced,@role="leftright"'.split(","),'Rule{paren-simple-nested-func{default{[p] (pause:"short"); [n] content/*[1]; [p] (pause:"short"); [n] children/*[1]; [p] (pause:"short"); [n] content/*[2]; [p] (pause:"short"){self::fenced{@role="leftright"{name(../*[1])="identifier" or name(../*[1])="function"{parent::*/parent::*[@role="simple function" or @role="prefix function"]{not(contains(children/*[1]/@annotation, "clearspeak:simple"))'.split("{"),'Rule{paren-simple-nested-func{Functions_None{[p] (pause:"short"); [n] content/*[1] (grammar:spokenFence); [p] (pause:"short"); [n] children/*[1]; [p] (pause:"short"); [n] content/*[2] (grammar:spokenFence); [p] (pause:"short"){self::fenced{@role="leftright"{name(../*[1])="identifier" or name(../*[1])="function"{parent::*/parent::*[@role="simple function" or @role="prefix function"]{children/*[1][@role="simple function" or @role="prefix function"]{contains(children/*[1]/children/*[2]/children/*[1]/@annotation, "clearspeak:simple") or name(children/*[1]/children/*[2]/children/*[1])="subscript" or name(children/*[1]/children/*[2]/children/*[1])="superscript" or children/*[1]/children/*[2]/children/*[1][@role="vulgar"] '.split("{"),["SpecializedRule","fences-open-close","default","Paren_Speak"],["Aliases","fences-open-close","self::fenced",'@role="composed function"'],["Rule","fence-silent","Paren_Silent",'[p] (pause:"short"); [n] children/*[1]; [p] (pause:"short")',"self::fenced"],'Rule,fences-open-close,ImpliedTimes_None,[p] (pause:"short"); [n] content/*[1] (grammar:spokenFence); [p] (pause:"short"); [n] children/*[1]; [p] (pause:"short"); [n] content/*[2] (grammar:spokenFence); [p] (pause:"short"),self::fenced,@role="leftright",parent::*/parent::*[@role!="simple function"],parent::*/parent::*[@role!="prefix function"]'.split(","),'Rule;fence-nesting;Paren_SpeakNestingLevel;[n] text() (grammar:insertNesting=CSFnestingDepth);self::fence;contains(@grammar, "spokenFence");CQFmatchingFences'.split(";"),["Rule","fence-no-nesting","Paren_SpeakNestingLevel","[n] text()","self::fence"],'Rule,fences-points,Paren_CoordPoint,[t] "the point with coordinates"; [n] children/*[1],self::fenced,name(children/*[1])="punctuated",children/*[1][@role="sequence"]'.split(","),'Rule{fences-interval{Paren_Interval{[t] "the interval from"; [n] children/*[1]/children/*[1]; [t] "to"; [n] children/*[1]/children/*[3]; [p] (pause:"short"); [n] . (grammar:interval){self::fenced{not(contains(@grammar, "interval")){name(children/*[1])="punctuated"{children/*[1][@role="sequence"]{count(./children/*[1]/content/*)=1{children/*[1]/content/*[1][@role="comma"]'.split("{"),'Rule{interval-open{Paren_Interval{[t] "not including"; [n] children/*[1]/children/*[1]; [t] "or"; [n] children/*[1]/children/*[3]{self::fenced{contains(@grammar, "interval"){content/*[1]/text()="("{content/*[2]/text()=")"'.split("{"),'Rule{interval-closed-open{Paren_Interval{[t] "including"; [n] children/*[1]/children/*[1]; [p] (pause:"short"); [t] "but not including"; [n] children/*[1]/children/*[3]{self::fenced{contains(@grammar, "interval"){content/*[1]/text()="["{content/*[2]/text()=")"'.split("{"),'Rule{interval-open-closed{Paren_Interval{[t] "not including"; [n] children/*[1]/children/*[1]; [p] (pause:"short"); [t] "but including"; [n] children/*[1]/children/*[3]{self::fenced{contains(@grammar, "interval"){content/*[1]/text()="("{content/*[2]/text()="]"'.split("{"),'Rule{interval-closed{Paren_Interval{[t] "including"; [n] children/*[1]/children/*[1]; [t] "and"; [n] children/*[1]/children/*[3]{self::fenced{contains(@grammar, "interval"){content/*[1]/text()="["{content/*[2]/text()="]"'.split("{"),'Rule{interval-open-inf-r{Paren_Interval{[t] "not including"; [n] children/*[1]/children/*[1]{self::fenced{contains(@grammar, "interval"){content/*[1]/text()="("{content/*[2]/text()=")"{children/*[1]/children/*[3]/text()="∞" or (name(children/*[1]/children/*[3])="prefixop" and children/*[1]/children/*[3]/children/*[1]/text()="∞")'.split("{"),'Rule{interval-open-inf-l{Paren_Interval{[t] "not including"; [n] children/*[1]/children/*[3]{self::fenced{contains(@grammar, "interval"){content/*[1]/text()="("{content/*[2]/text()=")"{children/*[1]/children/*[1]/text()="∞" or (name(children/*[1]/children/*[1])="prefixop" and children/*[1]/children/*[1]/children/*[1]/text()="∞")'.split("{"),'Rule;interval-open-inf-lr;Paren_Interval;;self::fenced;contains(@grammar, "interval");content/*[1]/text()="(";content/*[2]/text()=")";children/*[1]/children/*[3]/text()="∞" or (name(children/*[1]/children/*[3])="prefixop" and children/*[1]/children/*[3]/children/*[1]/text()="∞");children/*[1]/children/*[1]/text()="∞" or (name(children/*[1]/children/*[1])="prefixop" and children/*[1]/children/*[1]/children/*[1]/text()="∞")'.split(";"),'Rule{interval-closed-open-inf{Paren_Interval{[t] "including"; [n] children/*[1]/children/*[1]{self::fenced{contains(@grammar, "interval"){content/*[1]/text()="["{content/*[2]/text()=")"{children/*[1]/children/*[3]/text()="∞" or (name(children/*[1]/children/*[3])="prefixop" and children/*[1]/children/*[3]/children/*[1]/text()="∞")'.split("{"),'Rule{interval-open-closed-inf{Paren_Interval{[t] "including"; [n] children/*[1]/children/*[3]{self::fenced{contains(@grammar, "interval"){content/*[1]/text()="("{content/*[2]/text()="]"{children/*[1]/children/*[1]/text()="∞" or (name(children/*[1]/children/*[1])="prefixop" and children/*[1]/children/*[1]/children/*[1]/text()="∞")'.split("{"),'Rule,paren-nested-embellished-funcs,Functions_None,[p] (pause:"short"); [n] content/*[1]; [p] (pause:"short"); [n] children/*[1]; [p] (pause:"short"); [n] content/*[2]; [p] (pause:"short"),self::fenced,@role="leftright",name(../..)="appl",name(children/*[1]) = "appl",preceding-sibling::*/descendant-or-self::*[@role="subsup"] or children/*[1]/descendant-or-self::*[@role="subsup"]'.split(","),'Rule;set-empty;default;[t] "the empty set";self::fenced;@role="set empty"'.split(";"),'Rule,set-extended,default,[t] "the set of all"; [n] children/*[1]/children/*[1]; [t] "such that"; [n] children/*[1]/children/*[3],self::fenced,@role="set extended"'.split(","),'Rule,set-collection,default,[t] "the set"; [n] children/*[1],self::fenced,@role="set collection"'.split(","),["Aliases","set-collection","self::fenced",'@role="set singleton"'],'Rule,set-extended,Sets_woAll,[t] "the set of"; [n] children/*[1]/children/*[1]; [t] "such that"; [n] children/*[1]/children/*[3],self::fenced,@role="set extended"'.split(","),'Rule;set-collection;Sets_SilentBracket;[n] children/*[1];self::fenced;@role="set collection"'.split(";"),["Rule","subscript","default",'[p] (pause:short); [n] children/*[1]; [t] "sub"; [n] children/*[2]; [p] (pause:short)',"self::subscript"],'Rule,subscript-base,default,[n] children/*[1]; [t] "base"; [n] children/*[2],self::subscript,CQFisLogarithm'.split(","),'Rule{subscript-index{default{[n] children/*[1]; [t] "sub"; [n] children/*[2]{self::subscript{contains(@grammar, "simpleDet")'.split("{"),["Rule","fraction","default",'[p] (pause:short); [t] "the fraction with numerator"; [n] children/*[1]; [p] (pause:short); [t] "and denominator"; [n] children/*[2]; [p] (pause:short)',"self::fraction"],'Rule,fraction,Functions_None,[p] (pause:short); [t] "the fraction with numerator"; [n] children/*[1]; [p] (pause:short); [t] "and denominator"; [n] children/*[2]; [p] (pause:short),self::fraction,name(children/*[1])="appl" or name(children/*[2])="appl"'.split(","),'Rule{simple-fraction{default{[p] (pause:short); [n] children/*[1]; [t] "over"; [n] children/*[2]; [p] (pause:short){self::fraction{contains(children/*[1]/@annotation, "clearspeak:simple") or contains(children/*[1]/@annotation, "clearspeak:unit"){contains(children/*[2]/@annotation, "clearspeak:simple") or contains(children/*[2]/@annotation, "clearspeak:unit")'.split("{"),'Rule,simple-vulgar-fraction,default,[p] (pause:short); [n] children/*[1]; [t] "over"; [n] children/*[2]; [p] (pause:short),self::fraction,@role="vulgar"'.split(","),'Rule,simple-text-fraction,default,[p] (pause:short); [n] children/*[1]; [t] "over"; [n] children/*[2]; [p] (pause:short),self::fraction,name(children/*[1])="text",name(children/*[2])="text"'.split(","),'Rule,simple-text-fraction,default,[p] (pause:short); [n] children/*[1]; [t] "over"; [n] children/*[2]; [p] (pause:short),self::fraction,name(children/*[1])="infixop",children/*[1][@role="unit"],name(children/*[2])="text"'.split(","),'Rule;vulgar-fraction;default;[t] CSFvulgarFraction;self::fraction;@role="vulgar";CQFvulgarFractionSmall'.split(";"),["Rule","fraction","Fraction_Over",'[p] (pause:short); [n] children/*[1]; [t] "over"; [n] children/*[2]; [p] (pause:short)',"self::fraction"],["Rule","fraction","Fraction_OverEndFrac",'[p] (pause:short); [n] children/*[1]; [t] "over"; [n] children/*[2]; [p] (pause:short); [t] "end fraction"; [p] (pause:short)',"self::fraction"],["Rule","fraction","Fraction_FracOver",'[p] (pause:short); [t] "the fraction"; [n] children/*[1]; [t] "over"; [n] children/*[2]; [p] (pause:short)',"self::fraction"],["Rule","fraction","Fraction_Per",'[p] (pause:short); [n] children/*[1]; [t] "per"; [n] children/*[2]; [p] (pause:short)',"self::fraction"],["Rule","fraction","Fraction_GeneralEndFrac",'[p] (pause:short); [t] "the fraction with numerator"; [n] children/*[1]; [p] (pause:short); [t] "and denominator"; [n] children/*[2]; [p] (pause:short); [t] "end fraction"; [p] (pause:short)',"self::fraction"],["Rule","fraction","Fraction_General",'[p] (pause:short); [t] "the fraction with numerator"; [n] children/*[1]; [p] (pause:short); [t] "and denominator"; [n] children/*[2]; [p] (pause:short)',"self::fraction"],'Rule;simple-vulgar-fraction;Fraction_Ordinal;[t] CSFvulgarFraction;self::fraction;@role="vulgar"'.split(";"),'Rule{fraction{Fraction_EndFrac{[p] (pause:short); [n] . (grammar:endfrac); [t] "end fraction"; [p] (pause:short){self::fraction{not(contains(@grammar, "endfrac")){not(contains(children/*[1]/@annotation, "clearspeak:unit")){not(contains(children/*[2]/@annotation, "clearspeak:unit"))'.split("{"),'Rule{vulgar-fraction{Fraction_EndFrac{[p] (pause:short); [n] children/*[1]; [t] "over"; [n] children/*[2]; [p] (pause:short){self::fraction{name(children/*[1])="fraction"{name(children/*[2])="fraction"{contains(children/*[1]/@annotation, "clearspeak:simple"){contains(children/*[2]/@annotation, "clearspeak:simple")'.split("{"),'Rule;simple-vulgar-fraction;Fraction_EndFrac;[t] CSFvulgarFraction;self::fraction;@role="vulgar";contains(@annotation, "clearspeak:simple");self::*'.split(";"),["Rule","sqrt","default",'[t] "the square root of"; [n] children/*[1] (grammar:EndRoot=false); [p] (pause:short)',"self::sqrt"],'Rule,sqrt-nested,default,[p] (pause: "short"); [t] "the square root of"; [n] children/*[1] (grammar:EndRoot=false); [p] (pause:short),self::sqrt,not(preceding-sibling::*),ancestor::sqrt|ancestor::root'.split(","),'Rule,negative-sqrt,default,[t] "the negative square root of"; [n] children/*[1]/children/*[1] (grammar:EndRoot=false); [p] (pause:short),self::prefixop,@role="negative",name(children/*[1])="sqrt"'.split(","),'Rule,negative-sqrt,default,[p] (pause: "short"); [t] "the negative square root of"; [n] children/*[1]/children/*[1] (grammar:EndRoot=false); [p] (pause:short),self::prefixop,@role="negative",name(children/*[1])="sqrt",not(preceding-sibling::*),ancestor::sqrt|ancestor::root'.split(","),'Rule,sqrt-plus-minus,Roots_PosNegSqRoot,[t] "the positive square root of"; [n] children/*[1] (grammar:EndRoot=false); [p] (pause:short),self::sqrt,parent::stree or not(parent::*/parent::infixop[@role="addition"]) or (parent::*/parent::*[1]/text()!="±" and parent::*/parent::*/text()!="∓")'.split(","),'Rule,sqrt-nested-plus-minus,Roots_PosNegSqRoot,[p] (pause: "short"); [t] "the positive square root of"; [n] children/*[1] (grammar:EndRoot=false); [p] (pause:short),self::sqrt,not(preceding-sibling::*),ancestor::sqrt|ancestor::root,parent::stree or not(parent::*/parent::infixop[@role="addition"]) or (parent::*/parent::*[1]/text()!="±" and parent::*/parent::*/text()!="∓")'.split(","),'Rule,sqrt-plus-minus,Roots_PosNegSqRootEnd,[t] "the positive square root of"; [n] children/*[1] (grammar:EndRoot=false); [p] (pause:short),self::sqrt,parent::stree or not(parent::*/parent::infixop[@role="addition"]) or (parent::*/parent::*[1]/text()!="±" and parent::*/parent::*/text()!="∓")'.split(","),'Rule,sqrt-nested-plus-minus,Roots_PosNegSqRootEnd,[p] (pause: "short"); [t] "the positive square root of"; [n] children/*[1] (grammar:EndRoot=false); [p] (pause:short),self::sqrt,not(preceding-sibling::*),ancestor::sqrt|ancestor::root,parent::stree or not(parent::*/parent::infixop[@role="addition"]) or (parent::*/parent::*[1]/text()!="±" and parent::*/parent::*/text()!="∓")'.split(","),'Rule{sqrt-endroot{Roots_RootEnd{[n] . (grammar:EndRoot); [t] "end root"; [p] (pause:short){self::sqrt{not(contains(@grammar, "EndRoot"))'.split("{"),'Rule{negative-sqrt-endroot{Roots_RootEnd{[n] . (grammar:EndRoot); [t] "end root"; [p] (pause:short){self::prefixop{@role="negative"{name(children/*[1])="sqrt"{not(contains(@grammar, "EndRoot"))'.split("{"),'Rule{sqrt-endroot{Roots_PosNegSqRootEnd{[n] . (grammar:EndRoot); [t] "end root"; [p] (pause:short){self::sqrt{not(contains(@grammar, "EndRoot"))'.split("{"),'Rule{negative-sqrt-endroot{Roots_PosNegSqRootEnd{[n] . (grammar:EndRoot); [t] "end root"; [p] (pause:short){self::prefixop{@role="negative"{name(children/*[1])="sqrt"{not(contains(@grammar, "EndRoot"))'.split("{"),'Rule,cube,default,[t] "the cube root of"; [n] children/*[2] (grammar:EndRoot=false); [p] (pause:short),self::root,children/*[1][text()="3"]'.split(","),'Rule,cube-nested,default,[p] (pause:short); [t] "the cube root of"; [n] children/*[2] (grammar:EndRoot=false); [p] (pause:short),self::root,children/*[1][text()="3"],not(preceding-sibling::*),ancestor::sqrt|ancestor::root'.split(","),["Rule","root","default",'[t] "the"; [n] children/*[1] (grammar:ordinal); [t] "root of"; [n] children/*[2] (grammar:EndRoot=false); [p] (pause:short)',"self::root"],'Rule,root-nested,default,[p] (pause:short); [t] "the"; [n] children/*[1] (grammar:ordinal); [t] "root of"; [n] children/*[2] (grammar:EndRoot=false); [p] (pause:short),self::root,not(preceding-sibling::*),ancestor::sqrt|ancestor::root'.split(","),'Rule{root-endroot{Roots_RootEnd{[n] . (grammar:EndRoot); [t] "end root"; [p] (pause:short){self::root{not(contains(@grammar, "EndRoot"))'.split("{"),'Rule{root-endroot{Roots_PosNegSqRootEnd{[n] . (grammar:EndRoot); [t] "end root"; [p] (pause:short){self::root{not(contains(@grammar, "EndRoot"))'.split("{"),'Rule,negative,default,[t] "negative"; [n] children/*[1],self::prefixop,@role="negative"'.split(","),'Rule,positive,default,[t] "positive"; [n] children/*[1],self::prefixop,@role="positive"'.split(","),'Rule,angle-measure,default,[t] "the measure of"; [n] content/*[1]; [n] children/*[2] (grammar:angle),self::infixop,content/*[1]/text()="∠",children/*[1][text()="m"]'.split(","),["Rule","prefix","default","[m] content/* (grammar:prefix); [n] children/*[1]","self::prefixop"],["Rule","postfix","default","[n] children/*[1]; [m] content/* (grammar:postfix)","self::postfixop"],'Rule{set-prefix-operators{default{[t] "the"; [n] self::* (grammar:!prefix); [t] "of"{self::*{contains(@grammar,"prefix"){descendant-or-self::*/text()="∩" or descendant-or-self::*/text()="∪"{self::*{self::*{self::*'.split("{"),["Rule","binary-operation","default","[m] children/* (sepFunc:CTXFcontentIterator);","self::infixop"],'Rule,binary-operation,ImpliedTimes_MoreImpliedTimes,[m] children/* (sepFunc:CTXFcontentIterator);,self::infixop,@role="implicit"'.split(","),'Rule,binary-operation-pause,default,[p] (pause:short); [m] children/* (sepFunc:CTXFcontentIterator);,self::infixop,@role="implicit",name(children/*[1])="appl"'.split(","),'Rule,binary-operation-pause,default,[m] children/* (sepFunc:CTXFcontentIterator); [p] (pause:short),self::infixop,@role="implicit",name(children/*[last()])="appl"'.split(","),'Rule,binary-operation-pause,default,[p] (pause:short); [m] children/* (sepFunc:CTXFcontentIterator); [p] (pause:short),self::infixop,@role="implicit",name(children/*[1])="appl",name(children/*[last()])="appl"'.split(","),'Rule;implicit-times;default;[p] (pause:short);self::operator;@role="multiplication";text()="⁢"'.split(";"),'Rule implicit-times default  self::operator @role="multiplication" text()="⁢" CQFsimpleArguments'.split(" "),'Rule;implicit-times;default;[n] text();self::operator;@role="multiplication";text()="⁢";CQFfencedArguments'.split(";"),'Rule;implicit-times;ImpliedTimes_MoreImpliedTimes;[n] text();self::operator;@role="multiplication";text()="⁢"'.split(";"),'Rule implicit-times ImpliedTimes_None  self::operator @role="multiplication" text()="⁢"'.split(" "),'Rule{binary-operation-simple{default{[m] children/* (rate:"0.5"); [p] (pause:short){self::infixop{@role="implicit"{contains(@annotation, "clearspeak:simple"){not(contains(@grammar, "inFrac"))'.split("{"),'Rule;simple-in-fraction;default;[n] . (rate:"0.5",grammar:inFrac);self::*;contains(@annotation, "clearspeak:simple");not(contains(@grammar, "inFrac"));name(.)!="identifier";name(.)!="function";name(.)!="number";name(parent::*/parent::*)="fraction";not(preceding-sibling::*)'.split(";"),'Rule;operators-after-power;Exponent_AfterPower;[m] children/* (rate:"0.5");self::infixop;@role="implicit";contains(@grammar, "afterPower")'.split(";"),["Rule","relseq","default","[m] children/* (sepFunc:CTXFcontentIterator)","self::relseq"],["Rule","multrel","default","[m] children/* (sepFunc:CTXFcontentIterator)","self::multirel"],'Rule;natural-numbers;default;[t] "the natural numbers";self::identifier;text()="ℕ" or (text()="N" and @font="double-struck");self::*;self::*;self::*'.split(";"),'Rule;integers;default;[t] "the integers";self::identifier;text()="ℤ" or (text()="Z" and @font="double-struck");self::*;self::*;self::*'.split(";"),'Rule;rational-numbers;default;[t] "the rational numbers";self::identifier;text()="ℚ" or (text()="Q" and @font="double-struck");self::*;self::*;self::*'.split(";"),'Rule;real-numbers;default;[t] "the real numbers";self::identifier;text()="ℝ" or (text()="R" and @font="double-struck");self::*;self::*;self::*'.split(";"),'Rule;complex-numbers;default;[t] "the complex numbers";self::identifier;text()="ℂ" or (text()="C" and @font="double-struck");self::*;self::*;self::*'.split(";"),'Rule,natural-numbers-super,default,[t] "n" (join: "-"); [n] children/*[2] (grammar:numbers2alpha),self::superscript,children/*[1]/text()="ℕ" or (children/*[1]/text()="N" and children/*[1]/@font="double-struck"),self::*,self::*,self::*'.split(","),'Rule,integers-super,default,[t] "z" (join: "-"); [n] children/*[2] (grammar:numbers2alpha),self::superscript,children/*[1]/text()="ℤ" or (children/*[1]/text()="Z" and children/*[1]/@font="double-struck"),self::*,self::*,self::*'.split(","),'Rule,rational-numbers-super,default,[t] "q" (join: "-"); [n] children/*[2] (grammar:numbers2alpha),self::superscript,children/*[1]/text()="ℚ" or (children/*[1]/text()="Q" and children/*[1]/@font="double-struck"),self::*,self::*,self::*'.split(","),'Rule,real-numbers-super,default,[t] "r" (join:"-"); [n] children/*[2] (grammar:numbers2alpha),self::superscript,children/*[1]/text()="ℝ" or (children/*[1]/text()="R" and children/*[1]/@font="double-struck"),self::*,self::*,self::*'.split(","),'Rule,complex-numbers-super,default,[t] "c" (join:"-"); [n] children/*[2] (grammar:numbers2alpha),self::superscript,children/*[1]/text()="ℂ" or (children/*[1]/text()="C" and children/*[1]/@font="double-struck"),self::*,self::*,self::*'.split(","),'Rule;natural-numbers-with-zero;default;[t] "the natural numbers with zero";self::subscript;children/*[1]/text()="ℕ" or (children/*[1]/text()="N" and children/*[1]/@font="double-struck");children/*[2]/text()="0"'.split(";"),'Rule;positive-integers;default;[t] "the positive integers";self::superscript;children/*[1]/text()="ℤ" or (children/*[1]/text()="Z" and children/*[1]/@font="double-struck");children/*[2]/text()="+";self::*;self::*;self::*'.split(";"),'Rule;positive-integers;default;[t] "the negative integers";self::superscript;children/*[1]/text()="ℤ" or (children/*[1]/text()="Z" and children/*[1]/@font="double-struck");children/*[2]/text()="-";self::*;self::*;self::*'.split(";"),'Rule;positive-rational-numbers;default;[t] "the positive rational numbers";self::superscript;children/*[1]/text()="ℚ" or (children/*[1]/text()="Q" and children/*[1]/@font="double-struck");children/*[2]/text()="+";self::*;self::*;self::*'.split(";"),'Rule;negative-rational-numbers;default;[t] "the negative rational numbers";self::superscript;children/*[1]/text()="ℚ" or (children/*[1]/text()="Q" and children/*[1]/@font="double-struck");children/*[2]/text()="-";self::*;self::*;self::*'.split(";"),'Rule,fences-neutral,default,[p] (pause:short); [t] "the absolute value of"; [n] children/*[1]; [p] (pause: short),self::fenced,@role="neutral",content/*[1][text()]="|" or content/*[1][text()]="❘" or content/*[1][text()]="｜"'.split(","),'Rule,fences-neutral,AbsoluteValue_AbsEnd,[p] (pause:short); [t] "the absolute value of"; [n] children/*[1]; [p] (pause: short); [t] "end absolute value"; [p] (pause: short),self::fenced,@role="neutral",content/*[1][text()]="|" or content/*[1][text()]="❘" or content/*[1][text()]="｜"'.split(","),'Rule,fences-neutral,AbsoluteValue_Cardinality,[p] (pause:short); [t] "the cardinality of"; [n] children/*[1]; [p] (pause: short),self::fenced,@role="neutral",content/*[1][text()]="|" or content/*[1][text()]="❘" or content/*[1][text()]="｜"'.split(","),'Rule,fences-neutral,AbsoluteValue_Determinant,[p] (pause:short); [t] "the determinant of"; [n] children/*[1]; [p] (pause: short),self::fenced,@role="neutral",content/*[1][text()]="|" or content/*[1][text()]="❘" or content/*[1][text()]="｜"'.split(","),["Rule","matrix","default",'[t] "the"; [t] count(children/*);  [t] "by";[t] count(children/*[1]/children/*); [t] "matrix"; [p] (pause:long); [m] children/* (ctxtFunc:CTXFnodeCounter,context:"Row-:"); [p] (pause:long)',"self::matrix"],'Rule{matrix-simple{default{[t] "the"; [t] count(children/*);  [t] "by";[t] count(children/*[1]/children/*); [t] "matrix"; [p] (pause:long); [m] children/* (ctxtFunc:CTXFnodeCounter,context:"Row-:",grammar:simpleDet); [p] (pause:long){self::matrix{count(children/*)<4{count(children/*[1]/children/*)<4{CQFcellsSimple'.split("{"),'Rule,matrix-trivial,default,[t] "the 1 by 1 matrix with entry"; [n] children/*[1]; [p] (pause:long),self::vector,@role="squarematrix"'.split(","),'Rule{determinant{default{[t] "the determinant of the"; [t] count(children/*);  [t] "by";[t] count(children/*[1]/children/*); [t] "matrix"; [p] (pause:long); [m] children/* (ctxtFunc:CTXFnodeCounter,context:"Row-:",grammar:simpleDet); [p] (pause:long){self::matrix{@role="determinant"{count(children/*)<4{CQFcellsSimple'.split("{"),'Rule{determinant-simple{default{[t] "the determinant of the"; [t] count(children/*);  [t] "by";[t] count(children/*[1]/children/*); [t] "matrix"; [p] (pause:long); [m] children/* (ctxtFunc:CTXFnodeCounter,context:"Row-:"); [p] (pause:long){self::matrix{@role="determinant"'.split("{"),["Rule","matrix-vector","default",'[t] "the"; [t] count(children/*);  [t] "by";[t] count(children/*[1]/children/*); [t] "column matrix"; [p] (pause:long); [m] children/* (ctxtFunc:CTXFnodeCounter,context:"Row-:",grammar:simpleDet); [p] (pause:long)',"self::vector"],["SpecializedRule","matrix-vector","default","Matrix_SpeakColNum"],'Rule{matrix-vector-simple{default{[t] "the"; [t] count(children/*);  [t] "by";[t] count(children/*[1]/children/*); [t] "column matrix"; [p] (pause:long); [m] children/* (sepFunc:CTXFpauseSeparator,separator:"short",grammar:simpleDet); [p] (pause:long){self::vector{count(children/*)<4{CQFcellsSimple{@role!="squarematrix"'.split("{"),["Rule","matrix-vector-simple","Matrix_SilentColNum",'[t] "the"; [t] count(children/*);  [t] "by";[t] count(children/*[1]/children/*); [t] "column matrix"; [p] (pause:long); [m] children/* (sepFunc:CTXFpauseSeparator,separator:"short",grammar:simpleDet); [p] (pause:long)',"self::vector"],'Rule{matrix-row-vector{default{[t] "the"; [t] count(children/*);  [t] "by";[t] count(children/*[1]/children/*); [t] "row matrix"; [p] (pause:long); [m] children/*[1]/children/* (ctxtFunc:CTXFnodeCounter,context:"Column-:",grammar:simpleDet); [p] (pause:long){self::matrix{@role="rowvector"'.split("{"),["SpecializedRule","matrix-row-vector","default","Matrix_SpeakColNum"],'Rule{matrix-row-vector-simple{default{[t] "the"; [t] count(children/*);  [t] "by";[t] count(children/*[1]/children/*); [t] "row matrix"; [p] (pause:long); [m] children/*[1]/children/* (sepFunc:CTXFpauseSeparator,separator:"short",grammar:simpleDet); [p] (pause:long){self::matrix{@role="rowvector"{count(children/*[1]/children/*)<4{CQFcellsSimple'.split("{"),'Rule{matrix-row-vector-simple{Matrix_SilentColNum{[t] "the"; [t] count(children/*);  [t] "by";[t] count(children/*[1]/children/*); [t] "row matrix"; [p] (pause:long); [m] children/*[1]/children/* (sepFunc:CTXFpauseSeparator,separator:"short",grammar:simpleDet); [p] (pause:long){self::matrix{@role="rowvector"'.split("{"),'Rule;matrix-row-simple;default;[m] children/* (sepFunc:CTXFpauseSeparator,separator:"short");self::row;contains(@grammar, "simpleDet")'.split(";"),["Rule","matrix-row-simple","Matrix_SilentColNum",'[m] children/* (sepFunc:CTXFpauseSeparator,separator:"short")',"self::row"],'Rule;line-simple;default;[n] children/*[1];self::line;contains(@grammar, "simpleDet")'.split(";"),["Rule","matrix-row","default",'[m] children/* (ctxtFunc:CTXFnodeCounter,context:"Column-,- ",sepFunc:CTXFpauseSeparator,separator:"medium"); [p] (pause:long)',"self::row"],["SpecializedRule","matrix-row","default","Matrix_SpeakColNum"],["Rule","matrix-cell","default","[n] children/*[1]","self::cell"],'Rule{matrix-end-matrix{Matrix_EndMatrix{[n] . (grammar:EndMatrix); [t] "end matrix"{self::matrix{not(contains(@grammar, "EndMatrix"))'.split("{"),'Rule{matrix-end-vector{Matrix_EndMatrix{[n] . (grammar:EndMatrix); [t] "end matrix"{self::vector{not(contains(@grammar, "EndMatrix"))'.split("{"),'Rule{matrix-end-determinant{Matrix_EndMatrix{[n] . (grammar:EndMatrix); [t] "end determinant"{self::matrix{@role="determinant"{not(contains(@grammar, "EndMatrix"))'.split("{"),["Rule","vector","Matrix_Vector",'[t] "the"; [t] count(children/*);  [t] "by";[t] count(children/*[1]/children/*); [t] "column vector"; [p] (pause:long); [m] children/* (ctxtFunc:CTXFnodeCounter,context:"Row-:",grammar:simpleDet); [p] (pause:long)',"self::vector"],["SpecializedRule","vector","Matrix_Vector","Matrix_EndVector"],'Rule{vector-simple{Matrix_Vector{[t] "the"; [t] count(children/*);  [t] "by"; [t] count(children/*[1]/children/*); [t] "column vector"; [p] (pause:long); [m] children/* (sepFunc:CTXFpauseSeparator,separator:"short",grammar:simpleDet); [p] (pause:long){self::vector{count(children/*)<4{CQFcellsSimple'.split("{"),["SpecializedRule","vector-simple","Matrix_Vector","Matrix_EndVector"],'Rule{row-vector{Matrix_Vector{[t] "the"; [t] count(children/*);  [t] "by";[t] count(children/*[1]/children/*); [t] "row vector"; [p] (pause:long); [m] children/*[1]/children/* (ctxtFunc:CTXFnodeCounter,context:"Column-:",grammar:simpleDet); [p] (pause:long){self::matrix{@role="rowvector"'.split("{"),["SpecializedRule","row-vector","Matrix_Vector","Matrix_EndVector"],'Rule{row-vector-simple{Matrix_Vector{[t] "the"; [t] count(children/*);  [t] "by";[t] count(children/*[1]/children/*); [t] "row vector"; [p] (pause:long); [m] children/*[1]/children/* (sepFunc:CTXFpauseSeparator,separator:"short",grammar:simpleDet); [p] (pause:long){self::matrix{@role="rowvector"{count(children/*[1]/children/*)<4{CQFcellsSimple'.split("{"),["SpecializedRule","row-vector-simple","Matrix_Vector","Matrix_EndVector"],'Rule{vector-end-matrix{Matrix_EndVector{[n] . (grammar:EndMatrix); [t] "end matrix"{self::matrix{not(contains(@grammar, "EndMatrix")){self::*'.split("{"),'Rule{vector-end-vector{Matrix_EndVector{[n] . (grammar:EndMatrix); [t] "end vector"{self::vector{not(contains(@grammar, "EndMatrix")){self::*'.split("{"),'Rule{vector-end-vector{Matrix_EndVector{[n] . (grammar:EndMatrix); [t] "end vector"{self::matrix{@role="rowvector"{not(contains(@grammar, "EndMatrix")){self::*'.split("{"),'Rule{vector-end-determinant{Matrix_EndVector{[n] . (grammar:EndMatrix); [t] "end determinant"{self::matrix{@role="determinant"{not(contains(@grammar, "EndMatrix")){self::*'.split("{"),'Rule,binomial,Matrix_Combinatoric,[n] children/*[1]/children/*[1]; [t] "choose"; [n] children/*[2]/children/*[1]; ,self::vector,@role="binomial"'.split(","),'Rule{lines-summary{default{[p] (pause:short); [t] count(children/*); [t] "lines";  [n] . (grammar:layoutSummary){self::multiline{not(contains(@grammar, "layoutSummary")){self::*'.split("{"),'Rule;lines-summary;MultiLineOverview_None;[n] . (grammar:layoutSummary);self::multiline;not(contains(@grammar, "layoutSummary"));self::*'.split(";"),["Aliases","lines-summary","self::table",'not(contains(@grammar, "layoutSummary"))'],'Rule{cases-summary{default{[p] (pause:short); [t] count(children/*); [t] "cases";  [n] . (grammar:layoutSummary){self::cases{not(contains(@grammar, "layoutSummary"))'.split("{"),'Rule;cases-summary;MultiLineOverview_None;[n] . (grammar:layoutSummary);self::cases;not(contains(@grammar, "layoutSummary"));self::*'.split(";"),["Rule","lines","default",'[p] (pause:short); [m] children/* (ctxtFunc:CTXFnodeCounter,context:"Line-:",sepFunc:CTXFpauseSeparator,separator:"long"); [p] (pause:long)',"self::table"],["Aliases","lines","self::multiline"],["Rule","line","default","[n] children/*[1]","self::line"],'Rule;row-medium;default;[m] children/* (sepFunc:CTXFpauseSeparator,separator:"medium");self::row;@role="table"'.split(";"),["Aliases","row-medium","self::row",'@role="cases"'],'Rule;row-long;MultiLinePausesBetweenColumns_Long;[m] children/* (sepFunc:CTXFpauseSeparator,separator:"long");self::row;@role="table"'.split(";"),["Aliases","row-long","self::row",'@role="cases"'],'Rule;row-short;MultiLinePausesBetweenColumns_Short;[m] children/* (sepFunc:CTXFpauseSeparator,separator:"short");self::row;@role="table"'.split(";"),["Aliases","row-short","self::row",'@role="cases"'],'Rule;blank-cell;default;[t] "blank";self::cell;count(children/*)=0'.split(";"),'Rule;blank-empty;default;[t] "blank";self::empty;count(../*)=1;name(../..)="cell" or name(../..)="line"'.split(";"),["Rule","cases","default",'[p] (pause:short);  [m] children/* (ctxtFunc:CTXFnodeCounter,context:"Case-:",sepFunc:CTXFpauseSeparator,separator:"long"); [p] (pause:long)',"self::cases"],'Rule{lines-cases-summary{MultiLineLabel_Case{[p] (pause:short); [t] count(children/*); [t] "cases";  [n] . (grammar:layoutSummary){self::multiline{not(contains(@grammar, "layoutSummary"))'.split("{"),["Aliases","lines-cases-summary","self::table",'not(contains(@grammar, "layoutSummary"))'],["Rule","lines-cases","MultiLineLabel_Case",'[p] (pause:short); [m] children/* (ctxtFunc:CTXFnodeCounter,context:"Case-:",sepFunc:CTXFpauseSeparator,separator:"long"); [p] (pause:long)',"self::table"],["Aliases","lines-cases","self::multiline"],'Rule{lines-equations-summary{MultiLineLabel_Equation{[p] (pause:short); [t] count(children/*); [t] "equations";  [n] . (grammar:layoutSummary){self::multiline{not(contains(@grammar, "layoutSummary"))'.split("{"),["Aliases","lines-equations-summary","self::table",'not(contains(@grammar, "layoutSummary"))'],["Rule","lines-equations","MultiLineLabel_Equation",'[p] (pause:short); [m] children/* (ctxtFunc:CTXFnodeCounter,context:"Equation-:",sepFunc:CTXFpauseSeparator,separator:"long"); [p] (pause:long)',"self::table"],["Aliases","lines-equations","self::multiline"],'Rule{lines-steps-summary{MultiLineLabel_Step{[p] (pause:short); [t] count(children/*); [t] "steps";  [n] . (grammar:layoutSummary){self::multiline{not(contains(@grammar, "layoutSummary"))'.split("{"),["Aliases","lines-steps-summary","self::table",'not(contains(@grammar, "layoutSummary"))'],["Rule","lines-steps","MultiLineLabel_Step",'[p] (pause:short); [m] children/* (ctxtFunc:CTXFnodeCounter,context:"Step-:",sepFunc:CTXFpauseSeparator,separator:"long"); [p] (pause:long)',"self::table"],["Aliases","lines-steps","self::multiline"],'Rule{lines-rows-summary{MultiLineLabel_Row{[p] (pause:short); [t] count(children/*); [t] "rows";  [n] . (grammar:layoutSummary){self::multiline{not(contains(@grammar, "layoutSummary"))'.split("{"),["Aliases","lines-rows-summary","self::table",'not(contains(@grammar, "layoutSummary"))'],["Rule","lines-rows","MultiLineLabel_Row",'[p] (pause:short); [m] children/* (ctxtFunc:CTXFnodeCounter,context:"Row-:",sepFunc:CTXFpauseSeparator,separator:"long"); [p] (pause:long)',"self::table"],["Aliases","lines-rows","self::multiline"],'Rule{lines-constraints-summary{MultiLineLabel_Constraint{[p] (pause:short); [t] count(children/*); [t] "constraints";  [n] . (grammar:layoutSummary){self::multiline{not(contains(@grammar, "layoutSummary"))'.split("{"),["Aliases","lines-constraints-summary","self::table",'not(contains(@grammar, "layoutSummary"))'],["Rule","lines-constraints","MultiLineLabel_Constraint",'[p] (pause:short); [m] children/* (ctxtFunc:CTXFnodeCounter,context:"Constraint-:",sepFunc:CTXFpauseSeparator,separator:"long"); [p] (pause:long)',"self::table"],["Aliases","lines-constraints","self::multiline"],'Rule{lines-none{MultiLineLabel_None{[p] (pause:short); [m] children/* (sepFunc:CTXFpauseSeparator,separator:"long"); [p] (pause:long){self::table{contains(@grammar, "layoutSummary")'.split("{"),["Aliases","lines-none","self::multiline",'contains(@grammar, "layoutSummary")'],["Aliases","lines-none","self::cases",'contains(@grammar, "layoutSummary")'],["Rule","bigop","default",'[t] "the"; [n] children/*[1]; [t] "of"; [n] children/*[2]; [p] (pause:short)',"self::bigop"],["Rule","limboth","default",'[n] children/*[1]; [t] "from"; [n] children/*[2];[t] "to"; [n] children/*[3];',"self::limboth"],["Rule","limlower","default",'[n] children/*[1]; [t] "over"; [n] children/*[2]; [p] (pause:short)',"self::limlower"],["Rule","limupper","default",'[n] children/*[1]; [t] "under"; [n] children/*[2]; [p] (pause:short)',"self::limupper"],["Rule","integral","default",'[t] "the"; [n] children/*[1]; [t] "of"; [n] children/*[2]; [p] (pause:short)',"self::integral"],["Rule","overscript","default",'[n] children/*[1]; [t] "under"; [n] children/*[2]; [p] (pause:short)',"self::overscore"],'Rule,overscript,default,[n] children/*[1]; [n] children/*[2];,self::overscore,children/*[2][@role="overaccent"]'.split(","),'Rule,overscript-limits,default,[n] children/*[1]; [t] "to"; [n] children/*[2],self::overscore,children/*[2][@role!="overaccent"],name(children/*[1])="underscore",children/*[1]/children/*[2][@role!="underaccent"]'.split(","),["Rule","underscript","default",'[n] children/*[1]; [t] "over"; [n] children/*[2]; [p] (pause:short)',"self::underscore"],'Rule,underscript-limits,default,[n] children/*[1]; [t] "from"; [n] children/*[2],self::underscore,@role="underover",children/*[2][@role!="underaccent"]'.split(","),["Rule","number","default","[n] text()","self::number"],'Rule,mixed-number,default,[n] children/*[1]; [t] "and"; [n] children/*[2]; ,self::number,@role="mixed"'.split(","),'Rule{number-with-chars{default{[t] "number"; [m] CQFspaceoutNumber (grammar:protected){self::number{@role="othernumber"{"" != translate(text(), "0123456789.,", ""){not(contains(@grammar, "protected"))'.split("{"),'Rule,decimal-period,default,[t] "the repeating decimal"; [n] children/*[1] (grammar:spaceout); [t] "point followed by repeating digits";  [n] children/*[3]/children/*[1] (grammar:spaceout),self::punctuated,@role="sequence",count(./content/*)=1,./content/*[1][@role="fullstop"],name(children/*[1])="number",children/*[1][@role="integer"],name(children/*[3])="overscore",children/*[3][@role="integer"],children/*[3]/children/*[2][@role="overaccent"],children/*[3]/children/*[2][text()="¯" or text()="￣" or text()="＿" or text()="_" or text()="‾"]'.split(","),'Rule,decimal-period,default,[t] "the repeating decimal"; [n] children/*[1] (grammar:spaceout); [t] "followed by repeating digits";  [n] children/*[2]/children/*[1] (grammar:spaceout);,self::infixop,@role="implicit",count(./children/*)=2,name(children/*[1])="number",children/*[1][@role="float"],name(children/*[2])="overscore",children/*[2][@role="integer"],children/*[2]/children/*[2][@role="overaccent"],children/*[2]/children/*[2][text()="¯" or text()="￣" or text()="＿" or text()="_" or text()="‾"]'.split(","),'Rule,decimal-period-singular,default,[t] "the repeating decimal"; [n] children/*[1] (grammar:spaceout); [t] "point followed by repeating digit";  [n] children/*[3]/children/*[1] (grammar:spaceout),self::punctuated,@role="sequence",count(./content/*)=1,./content/*[1][@role="fullstop"],name(children/*[1])="number",children/*[1][@role="integer"],name(children/*[3])="overscore",children/*[3][@role="integer"],children/*[3]/children/*[2][@role="overaccent"],children/*[3]/children/*[2][text()="¯" or text()="￣" or text()="＿" or text()="_" or text()="‾"],string-length(./children/*[3]/children/*[1]/text())=1'.split(","),'Rule,decimal-period-singular,default,[t] "the repeating decimal"; [n] children/*[1] (grammar:spaceout); [t] "followed by repeating digit";  [n] children/*[2]/children/*[1] (grammar:spaceout);,self::infixop,@role="implicit",count(./children/*)=2,name(children/*[1])="number",children/*[1][@role="float"],name(children/*[2])="overscore",children/*[2][@role="integer"],children/*[2]/children/*[2][@role="overaccent"],children/*[2]/children/*[2][text()="¯" or text()="￣" or text()="＿" or text()="_" or text()="‾"],string-length(./children/*[2]/children/*[1]/text())=1'.split(","),'Rule;number-with-spaces;default;[m] CQFspaceoutNumber (grammar:!spaceout:number);self::number;contains(@grammar, "spaceout")'.split(";"),'Rule;decimal-point;default;[t] "point";self::punctuation;@role="fullstop";contains(@grammar,"number")'.split(";"),'Rule,line-segment,default,[t] "the line segment"; [n] children/*[1]/children/*[1]; [n] children/*[1]/children/*[2]; [p] (pause:short),self::overscore,@role="implicit",children/*[2][@role="overaccent"],children/*[2][text()="¯" or text()="￣" or text()="＿" or text()="_" or text()="‾"],name(children/*[1])="infixop",count(./children/*[1]/children/*)=2'.split(","),'Rule,conjugate,Bar_Conjugate,[t] "the complex conjugate of"; [n] children/*[1],self::overscore,children/*[2][@role="overaccent"],children/*[2][text()="¯" or text()="￣" or text()="＿" or text()="_" or text()="‾"]'.split(","),'Rule;defined-by;default;[t] "is defined to be" (pause:short);self::overscore;@role="equality";@embellished="relation";name(children/*[2])="text";children/*[2][text()]="def"'.split(";"),'Rule,adorned-sign,default,[n] children/*[1] ; [t] "sign with"; [n] children/*[2]; [t] "over it",self::overscore,@embellished,name(children/*[1])="operator" or name(children/*[1])="relation"'.split(","),'Rule;factorial;default;[t] "factorial";self::punctuation;text()="!";name(preceding-sibling::*[1])!="text"'.split(";"),["Rule","tensor-base","default","[n] children/*[2]; [n] children/*[3]; [n] children/*[1]; [n] children/*[4]; [n] children/*[5]","self::tensor"],'Rule{left-super{default{[t] "left super"; [n] text(){self::*[@role="leftsuper"]{not(contains(@grammar,"combinatorics"))'.split("{"),'Rule{left-super{default{[t] "left super"; [m] children/*{self::punctuated{@role="leftsuper"{not(contains(@grammar,"combinatorics"))'.split("{"),'Rule{left-sub{default{[t] "left sub"; [n] text(){self::*[@role="leftsub"]{not(contains(@grammar,"combinatorics"))'.split("{"),'Rule{left-sub{default{[t] "left sub"; [m] children/*{self::punctuated{@role="leftsub"{not(contains(@grammar,"combinatorics"))'.split("{"),'Rule{right-super{default{[t] "right super"; [n] text(){self::*[@role="rightsuper"]{not(contains(@grammar,"combinatorics"))'.split("{"),'Rule{right-super{default{[t] "right super"; [m] children/*{self::punctuated{@role="rightsuper"{not(contains(@grammar,"combinatorics"))'.split("{"),'Rule{right-sub{default{[t] "right sub"; [n] text(){self::*[@role="rightsub"]{not(contains(@grammar,"combinatorics"))'.split("{"),'Rule{right-sub{default{[t] "right sub"; [m] children/*{self::punctuated{@role="rightsub"{not(contains(@grammar,"combinatorics"))'.split("{"),'Rule;empty-index;default;[p] (pause:medium);self::empty;@role="rightsub" or @role="rightsuper" or @role="leftsub" or @role="leftsuper"'.split(";"),'Rule,combinatorics,default,[n] children/*[2] (grammar:combinatorics); [n] children/*[1]; [n] children/*[4] (grammar:combinatorics),self::tensor,name(children/*[3])="empty",name(children/*[5])="empty",children/*[1][text()="P" or text()="C"]'.split(","),'Rule,choose,CombinationPermutation_ChoosePermute,[n] children/*[2] (grammar:combinatorics); [t] "choose"; [n] children/*[4] (grammar:combinatorics),self::tensor,name(children/*[3])="empty",name(children/*[5])="empty",children/*[1][text()="C"]'.split(","),'Rule,permute,CombinationPermutation_ChoosePermute,[n] children/*[2] (grammar:combinatorics); [t] "permute"; [n] children/*[4] (grammar:combinatorics),self::tensor,name(children/*[3])="empty",name(children/*[5])="empty",children/*[1][text()="P"]'.split(","),'Rule;unit-singular;default;[t] text() (grammar:annotation="unit":translate);self::identifier;@role="unit"'.split(";"),'Rule;unit-plural;default;[t] text() (grammar:annotation="unit":translate:plural);self::identifier;@role="unit";not(contains(@grammar, "singularUnit"))'.split(";"),'Rule,unit-square,default,[t] "square"; [n] children/*[1],self::superscript,@role="unit",children/*[2][text()=2],name(children/*[1])="identifier"'.split(","),'Rule,unit-cubic,default,[t] "cubic"; [n] children/*[1],self::superscript,@role="unit",children/*[2][text()=3],name(children/*[1])="identifier"'.split(","),'Rule,unit-reciprocal,default,[t] "reciprocal"; [n] children/*[1],self::superscript,@role="unit",name(children/*[1])="identifier",name(children/*[2])="prefixop",children/*[2][@role="negative"],children/*[2]/children/*[1][text()=1],count(preceding-sibling::*)=0 or preceding-sibling::*[@role!="unit"]'.split(","),'Rule,unit-reciprocal,default,[t] "per"; [n] children/*[1] (grammar:singularUnit),self::superscript,@role="unit",name(children/*[1])="identifier",name(children/*[2])="prefixop",children/*[2][@role="negative"],children/*[2]/children/*[1][text()=1],preceding-sibling::*[@role="unit"]'.split(","),'Rule;unit-combine;default;[m] children/*;self::infixop;@role="unit"'.split(";"),'Rule,unit-combine-singular,default,[n] children/*[1]; [n] children/*[2] (grammar:singularUnit); [m] children/*[position()>2],self::infixop,@role="unit",name(children/*[1])="number",children/*[1][text()=1]'.split(","),'Rule,unit-divide,default,[n] children/*[1]; [t] "per"; [n] children/*[2] (grammar:singularUnit),self::fraction,@role="unit"'.split(","),'Rule{currency{default{[m] children/*[position()>1]; [n] children/*[1];{self::infixop{contains(@annotation, "clearspeak:unit"){children/*[1][@role="unit"]{CQFfirstCurrency'.split("{"),'Rule;currency;Currency_Position;[m] children/*;self::infixop;contains(@annotation, "clearspeak:unit")'.split(";"),["SpecializedRule","currency","Currency_Position","Currency_Prefix"],'Rule{currency{Currency_Prefix{[n] children/*[last()]; [m] children/*[position()<last()]; {self::infixop{contains(@annotation, "clearspeak:unit"){children/*[last()][@role="unit"]{CQFlastCurrency'.split("{")],initialize:[sre.ClearspeakUtil.addAnnotators]},sre.Grammar.getInstance().setPreprocessor("numbers2alpha",sre.ClearspeakUtil.numbersToAlpha),sre.EmacspeakRules={domain:"emacspeak",functions:[["CTXF","CTXFnodeCounter",sre.StoreUtil.nodeCounter],["CTXF","CTXFcontentIterator",sre.StoreUtil.contentIterator],["CQF","CQFvulgarFractionSmall",sre.MathspeakUtil.isSmallVulgarFraction],["CSF","CSFvulgarFraction",sre.NumbersUtil.vulgarFraction]],rules:[["Rule","stree","default","[n] ./*[1]","self::stree"],["Rule","multrel","default",'[t] "multirelation"; [m] children/* (sepFunc:CTXFcontentIterator)',"self::multirel"],'Rule{variable-equality{default{[t] "equation sequence"; [m] children/* (context:"part",ctxtFunc:CTXFnodeCounter,sepFunc:CTXFcontentIterator){self::relseq[@role="equality"]{count(./children/*)>2{./children/punctuation[@role="ellipsis"]'.split("{"),'Rule{multi-equality{default{[t] "equation sequence"; [m] children/* (context:"part",ctxtFunc:CTXFnodeCounter,sepFunc:CTXFcontentIterator){self::relseq[@role="equality"]{count(./children/*)>2'.split("{"),'Rule,equality,default,[t] "equation"; [t] "left hand side"; [n] children/*[1];[p] (pause:200); [n] content/*[1] (pause:200);[t] "right hand side"; [n] children/*[2],self::relseq[@role="equality"],count(./children/*)=2'.split(","),'Rule,simple-equality,default,[n] children/*[1]; [p] (pause:200); [n] content/*[1] (pause:200);[n] children/*[2],self::relseq[@role="equality"],count(./children/*)=2,./children/identifier or ./children/number'.split(","),'Rule,simple-equality2,default,[n] children/*[1]; [p] (pause:200); [n] content/*[1] (pause:200);[n] children/*[2],self::relseq[@role="equality"],count(./children/*)=2,./children/function or ./children/appl'.split(","),["Rule","relseq","default","[m] children/* (sepFunc:CTXFcontentIterator)","self::relseq"],'Rule;implicit;default;[m] children/*;self::infixop;@role="implicit";children/*[1][@role="latinletter"] or children/*[1][@role="greekletter"] or children/*[1][@role="otherletter"] or name(children/*[1])="number";children/*[2][@role="latinletter"] or children/*[2][@role="greekletter"] or children/*[2][@role="otherletter"] or name(children/*[2])="number"'.split(";"),["Rule","binary-operation","default","[p] (pause:100); [m] children/* (sepFunc:CTXFcontentIterator); [p] (pause:100);","self::infixop"],'Rule,variable-addition,default,[t] "sum with variable number of summands";[p] (pause:400); [m] children/* (sepFunc:CTXFcontentIterator),self::infixop[@role="addition"],count(children/*)>2,children/punctuation[@role="ellipsis"]'.split(","),["Rule","prefix","default",'[t] "prefix"; [n] text(); [t] "of" (pause 150);[n] children/*[1]',"self::prefixop"],'Rule,negative,default,[t] "negative"; [n] children/*[1],self::prefixop,self::prefixop[@role="negative"]'.split(","),["Rule","postfix","default",'[n] children/*[1]; [t] "postfix"; [n] text() (pause 300)',"self::postfixop"],["Rule","identifier","default","[n] text()","self::identifier"],["Rule","number","default","[n] text()","self::number"],'Rule{font{default{[t] @font; [n] . (grammar:ignoreFont=@font){self::*{@font{not(contains(@grammar, "ignoreFont")){@font!="normal"'.split("{"),'Rule{font-identifier-short{default{[t] @font; [n] CQFhideFont; [t] CSFshowFont{self::identifier{string-length(text())=1{@font{@font="normal"{""=translate(text(), "abcdefghijklmnopqrstuvwxyzαβγδεζηθικλμνξοπρςστυφχψωABCDEFGHIJKLMNOPQRSTUVWXYZΑΒΓΔΕΖΗΘΙΚΛΜΝΞΟΠΡΣΣΤΥΦΧΨΩ", ""){@role!="unit"'.split("{"),'Rule{font-identifier{default{[t] @font; [n] . (grammar:ignoreFont=@font){self::identifier{string-length(text())=1{@font{@font="normal"{not(contains(@grammar, "ignoreFont")){@role!="unit"'.split("{"),'Rule;omit-font;default;[n] . (grammar:ignoreFont=@font);self::identifier;string-length(text())=1;@font;not(contains(@grammar, "ignoreFont"));@font="italic"'.split(";"),'Rule,simple-fraction,default,[p] (pause:100); [n] children/*[1] (rate:0.35); [t] "over";  [n] children/*[2] (rate:0.35); [p] (pause:100),self::fraction,name(children/*[1])="number" or name(children/*[1])="identifier",name(children/*[2])="number" or name(children/*[2])="identifier"'.split(","),'Rule;vulgar-fraction;default;[t] CSFvulgarFraction;self::fraction;@role="vulgar";CQFvulgarFractionSmall'.split(";"),["Rule","fraction","default",'[p] (pause:250); [n] children/*[1] (rate:0.35); [p] (pause:250); [t] "divided by"; [p] (pause:250);  [n] children/*[2] (rate:0.35); [p] (pause:250)',"self::fraction"],["Rule","superscript","default",'[n] children/*[1]; [t] "super"; [n] children/*[2] (pitch:0.35);[p] (pause:300)',"self::superscript"],["Rule","subscript","default",'[n] children/*[1]; [t] "sub"; [n] children/*[2] (pitch:-0.35);[p] (pause:300)',"self::subscript"],'Rule,ellipsis,default,[p] (pause:200); [t] "ellipsis"; [p] (pause:300),self::punctuation,self::punctuation[@role="ellipsis"]'.split(","),'Rule;fence-single;default;[n] text();self::punctuation;self::punctuation[@role="openfence"]'.split(";"),["Alias","fence-single","self::punctuation",'self::punctuation[@role="closefence"]'],["Alias","fence-single","self::punctuation",'self::punctuation[@role="vbar"]'],["Alias","fence-single","self::punctuation",'self::punctuation[@role="application"]'],["Rule","omit-empty","default","[p] (pause:100)","self::empty"],'Rule,fences-open-close,default,[p] (pause:200); [n] children/*[1] (rate:0.35); [p] (pause:200),self::fenced,@role="leftright"'.split(","),'Rule,fences-open-close-in-appl,default,[p] (pause:200); [n] children/*[1]; [p] (pause:200);,self::fenced[@role="leftright"],./parent::children/parent::appl'.split(","),'Rule,fences-neutral,default,[p] (pause:100); [t] "absolute value of"; [n] children/*[1];[p] (pause:350);,self::fenced,self::fenced[@role="neutral"]'.split(","),["Rule","omit-fences","default","[p] (pause:500); [n] children/*[1]; [p] (pause:200);","self::fenced"],["Rule","matrix","default",'[t] "matrix"; [m] children/* (ctxtFunc:CTXFnodeCounter,context:"row",pause:100)',"self::matrix"],["Rule","matrix-row","default",'[m] children/* (ctxtFunc:CTXFnodeCounter,context:"column",pause:100)','self::row[@role="matrix"]'],["Rule","matrix-cell","default","[n] children/*[1]",'self::cell[@role="matrix"]'],["Rule","vector","default",'[t] "vector"; [m] children/* (ctxtFunc:CTXFnodeCounter,context:"element",pause:100)',"self::vector"],["Rule","cases","default",'[t] "case statement"; [m] children/* (ctxtFunc:CTXFnodeCounter,context:"case",pause:100)',"self::cases"],["Rule","cases-row","default","[m] children/*",'self::row[@role="cases"]'],["Rule","cases-cell","default","[n] children/*[1]",'self::cell[@role="cases"]'],["Rule","row","default",'[m] ./* (ctxtFunc:CTXFnodeCounter,context:"column",pause:100)',"self::row"],'Rule{cases-end{default{[t] "case statement"; [m] children/* (ctxtFunc:CTXFnodeCounter,context:"case",pause:100);[t] "end cases"{self::cases{following-sibling::*'.split("{"),["Rule","multiline","default",'[t] "multiline equation";[m] children/* (ctxtFunc:CTXFnodeCounter,context:"line",pause:100)',"self::multiline"],["Rule","line","default","[m] children/*","self::line"],["Rule","table","default",'[t] "multiline equation";[m] children/* (ctxtFunc:CTXFnodeCounter,context:"row",pause:200)',"self::table"],["Rule","table-row","default","[m] children/* (pause:100)",'self::row[@role="table"]'],["Alias","cases-cell",'self::cell[@role="table"]'],'Rule,end-punct,default,[m] children/*; [p] (pause:300),self::punctuated,@role="endpunct"'.split(","),'Rule,start-punct,default,[n] content/*[1]; [p] (pause:200); [m] children/*[position()>1],self::punctuated,@role="startpunct"'.split(","),'Rule,integral-punct,default,[n] children/*[1] (rate:0.2); [n] children/*[3] (rate:0.2),self::punctuated,@role="integral"'.split(","),["Rule","punctuated","default","[m] children/* (pause:100)","self::punctuated"],["Rule","function","default","[n] text()","self::function"],["Rule","appl","default","[n] children/*[1]; [n] content/*[1]; [n] children/*[2]","self::appl"],'Rule,sum-only,default,[n] children/*[1]; [t] "from"; [n] children/*[2]; [t] "to";[n] children/*[3],self::limboth,@role="sum" or @role="integral"'.split(","),["Rule","limboth","default",'[n] children/*[1]; [p] (pause 100); [t] "over"; [n] children/*[2];[t] "under"; [n] children/*[3]; [p] (pause 250);',"self::limboth"],["Rule","limlower","default",'[n] children/*[1]; [t] "over"; [n] children/*[2];',"self::limlower"],["Rule","limupper","default",'[n] children/*[1]; [t] "under"; [n] children/*[2];',"self::limupper"],["Rule","largeop","default","[n] text()","self::largeop"],["Rule","bigop","default",'[n] children/*[1]; [p] (pause 100); [t] "over"; [n] children/*[2];[p] (pause 250);',"self::bigop"],["Rule","integral","default","[n] children/*[1]; [p] (pause 100); [n] children/*[2];[p] (pause 200); [n] children/*[3] (rate:0.35);","self::integral"],["Rule","sqrt","default",'[t] "Square root of"; [n] children/*[1] (rate:0.35); [p] (pause:400)',"self::sqrt"],'Rule,square,default,[n] children/*[1]; [t] "squared" (pitch:0.35); [p] (pause:200),self::superscript,children/*[2][text()=2],name(./children/*[1])!="text"'.split(","),'Rule,cube,default,[n] children/*[1]; [t] "cubed" (pitch:0.35); [p] (pause:200),self::superscript,children/*[2][text()=3],name(./children/*[1])!="text"'.split(","),["Rule","root","default",'[t] "root of order"; [n] children/*[1];[t] "over"; [n] children/*[1] (rate:0.35); [p] (pause:400)',"self::root"],"Rule,text-no-mult,default,[n] children/*[1]; [p] (pause:200); [n] children/*[2],self::infixop,children/text".split(","),["Rule","text","default","[n] text(); [p] (pause:200)","self::text"],'Rule;unit;default;[t] text() (annotation:unit, preprocess);self::identifier;@role="unit"'.split(";"),'Rule,unit-square,default,[t] "square"; [n] children/*[1],self::superscript,@role="unit",children/*[2][text()=2],name(children/*[1])="identifier"'.split(","),'Rule,unit-cubic,default,[t] "cubic"; [n] children/*[1],self::superscript,@role="unit",children/*[2][text()=3],name(children/*[1])="identifier"'.split(","),'Rule,reciprocal,default,[t] "reciprocal"; [n] children/*[1],self::superscript,@role="unit",name(children/*[1])="identifier",name(children/*[2])="prefixop",children/*[2][@role="negative"],children/*[2]/children/*[1][text()=1],count(preceding-sibling::*)=0 or preceding-sibling::*[@role!="unit"]'.split(","),'Rule,reciprocal,default,[t] "per"; [n] children/*[1],self::superscript,@role="unit",name(children/*[1])="identifier",name(children/*[2])="prefixop",children/*[2][@role="negative"],children/*[2]/children/*[1][text()=1],preceding-sibling::*[@role="unit"]'.split(","),'Rule;unit-combine;default;[m] children/*;self::infixop;@role="unit"'.split(";"),'Rule,unit-divide,default,[n] children/*[1] (pitch:0.3); [t] "per"; [n] children/*[2] (pitch:-0.3),self::fraction,@role="unit"'.split(",")]},sre.MathspeakFrenchUtil={},sre.MathspeakFrenchUtil.smallRoot=function(e){if(!e.childNodes||0===e.childNodes.length||!e.childNodes[0].childNodes)return[];var t=e.childNodes[0].childNodes[0].textContent;return/^\d+$/.test(t)?(t=parseInt(t,10),1<t&&3>=t?[e]:[]):[]},sre.MathspeakFrenchUtil.baselineVerbose=function(e){return sre.MathspeakUtil.baselineVerbose(e).replace(/-$/,"")},sre.MathspeakFrenchUtil.baselineBrief=function(e){return sre.MathspeakUtil.baselineBrief(e).replace(/-$/,"")},sre.MathspeakFrenchUtil.leftSuperscriptVerbose=function(e){return sre.MathspeakUtil.superscriptVerbose(e).replace(/^exposant/,"exposant gauche")},sre.MathspeakFrenchUtil.leftSubscriptVerbose=function(e){return sre.MathspeakUtil.subscriptVerbose(e).replace(/^indice/,"indice gauche")},sre.MathspeakFrenchUtil.leftSuperscriptBrief=function(e){return sre.MathspeakUtil.superscriptBrief(e).replace(/^sup/,"sup gauche")},sre.MathspeakFrenchUtil.leftSubscriptBrief=function(e){return sre.MathspeakUtil.subscriptBrief(e).replace(/^sub/,"sub gauche")},sre.MathspeakFrench={locale:"fr",domain:"mathspeak",functions:[["CQF","CQFspaceoutNumber",sre.MathspeakUtil.spaceoutNumber],["CQF","CQFspaceoutIdentifier",sre.MathspeakUtil.spaceoutIdentifier],["CSF","CSFspaceoutText",sre.MathspeakUtil.spaceoutText],["CSF","CSFopenFracVerbose",sre.MathspeakUtil.openingFractionVerbose],["CSF","CSFcloseFracVerbose",sre.MathspeakUtil.closingFractionVerbose],["CSF","CSFoverFracVerbose",sre.MathspeakUtil.overFractionVerbose],["CSF","CSFopenFracBrief",sre.MathspeakUtil.openingFractionBrief],["CSF","CSFcloseFracBrief",sre.MathspeakUtil.closingFractionBrief],["CSF","CSFopenFracSbrief",sre.MathspeakUtil.openingFractionSbrief],["CSF","CSFcloseFracSbrief",sre.MathspeakUtil.closingFractionSbrief],["CSF","CSFoverFracSbrief",sre.MathspeakUtil.overFractionSbrief],["CSF","CSFvulgarFrFraction",sre.NumbersUtil.vulgarFraction],["CQF","CQFvulgarFractionSmall",sre.MathspeakUtil.isSmallVulgarFraction],["CSF","CSFopenRadicalVerbose",sre.MathspeakUtil.openingRadicalVerbose],["CSF","CSFcloseRadicalVerbose",sre.MathspeakUtil.closingRadicalVerbose],["CSF","CSFindexRadicalVerbose",sre.MathspeakUtil.indexRadicalVerbose],["CSF","CSFopenRadicalBrief",sre.MathspeakUtil.openingRadicalBrief],["CSF","CSFcloseRadicalBrief",sre.MathspeakUtil.closingRadicalBrief],["CSF","CSFindexRadicalBrief",sre.MathspeakUtil.indexRadicalBrief],["CSF","CSFopenRadicalSbrief",sre.MathspeakUtil.openingRadicalSbrief],["CSF","CSFindexRadicalSbrief",sre.MathspeakUtil.indexRadicalSbrief],["CQF","CQFisSmallRoot",sre.MathspeakFrenchUtil.smallRoot],["CSF","CSFsuperscriptVerbose",sre.MathspeakUtil.superscriptVerbose],["CSF","CSFsuperscriptBrief",sre.MathspeakUtil.superscriptBrief],["CSF","CSFsubscriptVerbose",sre.MathspeakUtil.subscriptVerbose],["CSF","CSFsubscriptBrief",sre.MathspeakUtil.subscriptBrief],["CSF","CSFbaselineVerbose",sre.MathspeakFrenchUtil.baselineVerbose],["CSF","CSFbaselineBrief",sre.MathspeakFrenchUtil.baselineBrief],["CSF","CSFleftsuperscriptVerbose",sre.MathspeakFrenchUtil.leftSuperscriptVerbose],["CSF","CSFleftsubscriptVerbose",sre.MathspeakFrenchUtil.leftSubscriptVerbose],["CSF","CSFrightsuperscriptVerbose",sre.MathspeakUtil.superscriptVerbose],["CSF","CSFrightsubscriptVerbose",sre.MathspeakUtil.subscriptVerbose],["CSF","CSFleftsuperscriptBrief",sre.MathspeakFrenchUtil.leftSuperscriptBrief],["CSF","CSFleftsubscriptBrief",sre.MathspeakFrenchUtil.leftSubscriptBrief],["CSF","CSFrightsuperscriptBrief",sre.MathspeakUtil.superscriptBrief],["CSF","CSFrightsubscriptBrief",sre.MathspeakUtil.subscriptBrief],["CSF","CSFunderscript",sre.MathspeakUtil.nestedUnderscore],["CSF","CSFoverscript",sre.MathspeakUtil.nestedOverscore],["CTXF","CTXFordinalCounter",sre.NumbersUtil.ordinalCounter],["CTXF","CTXFcontentIterator",sre.StoreUtil.contentIterator],["CQF","CQFdetIsSimple",sre.MathspeakUtil.determinantIsSimple],["CSF","CSFRemoveParens",sre.MathspeakUtil.removeParens],["CQF","CQFresetNesting",sre.MathspeakUtil.resetNestingDepth],["CQF","CQFisLogarithm",sre.ClearspeakUtil.isLogarithmWithBase]],rules:['Rule;collapsed;default;[n] . (engine:modality=summary,grammar:collapsed);self::*;@alternative;not(contains(@grammar, "collapsed"));self::*;self::*;self::*;self::*;self::*'.split(";"),["SpecializedRule","collapsed","default","brief"],["SpecializedRule","collapsed","brief","sbrief"],"Rule;stree;default;[n] ./*[1];self::stree;CQFresetNesting".split(";"),["Rule","unknown","default","[n] text()","self::unknown"],'Rule;protected;default;[t] text();self::*;@role="protected"'.split(";"),["Rule","omit-empty","default","[p] (pause:100)","self::empty"],'Rule;blank-empty;default;[t] "vide";self::empty;count(../*)=1;name(../..)="cell" or name(../..)="line"'.split(";"),'Rule{font{default{[n] . (grammar:ignoreFont=@font); [t] @font (grammar:localFont){self::*{@font{not(contains(@grammar, "ignoreFont")){@font!="normal"'.split("{"),'Rule{font-identifier-short{default{[n] . (grammar:ignoreFont=@font); [t] @font (grammar:localFont);{self::identifier{string-length(text())=1{@font{not(contains(@grammar, "ignoreFont")){@font="normal"{""=translate(text(), "abcdefghijklmnopqrstuvwxyzαβγδεζηθικλμνξοπρςστυφχψωABCDEFGHIJKLMNOPQRSTUVWXYZΑΒΓΔΕΖΗΘΙΚΛΜΝΞΟΠΡΣΣΤΥΦΧΨΩ", ""){@role!="unit"'.split("{"),'Rule{font-identifier{default{[n] . (grammar:ignoreFont=@font); [t] @font (grammar:localFont){self::identifier{string-length(text())=1{@font{@font="normal"{not(contains(@grammar, "ignoreFont")){@role!="unit"'.split("{"),'Rule;omit-font;default;[n] . (grammar:ignoreFont=@font);self::identifier;string-length(text())=1;@font;not(contains(@grammar, "ignoreFont"));@font="italic"'.split(";"),["Rule","number","default","[n] text()","self::number"],'Rule,mixed-number,default,[n] children/*[1]; [t] "et"; [n] children/*[2]; ,self::number,@role="mixed"'.split(","),'Rule{number-with-chars{default{[t] "nombre"; [m] CQFspaceoutNumber{self::number{"" != translate(text(), "0123456789.,", ""){text() != translate(text(), "0123456789.,", "")'.split("{"),'Rule{number-as-upper-word{default{[t] "MotMajuscule"; [t] CSFspaceoutText{self::number{string-length(text())>1{text()=translate(text(), "abcdefghijklmnopqrstuvwxyzαβγδεζηθικλμνξοπρςστυφχψω", "ABCDEFGHIJKLMNOPQRSTUVWXYZΑΒΓΔΕΖΗΘΙΚΛΜΝΞΟΠΡΣΣΤΥΦΧΨΩ"){""=translate(text(), "ABCDEFGHIJKLMNOPQRSTUVWXYZΑΒΓΔΕΖΗΘΙΚΛΜΝΞΟΠΡΣΣΤΥΦΧΨΩ","")'.split("{"),'Rule{number-baseline{default{[t] "position de base"; [n] . (grammar:baseline){self::number{not(contains(@grammar, "ignoreFont")){preceding-sibling::identifier{not(contains(@grammar, "baseline")){preceding-sibling::*[1][@role="latinletter" or @role="greekletter" or @role="otherletter"]{parent::*/parent::infixop[@role="implicit"]'.split("{"),["SpecializedRule","number-baseline","default","brief",'[t] "base"; [n] . (grammar:baseline)'],["SpecializedRule","number-baseline","brief","sbrief"],'Rule{number-baseline-font{default{[t] "position de base"; [n] . (grammar:ignoreFont=@font); [t] @font (grammar:localFont){self::number{@font{not(contains(@grammar, "ignoreFont")){@font!="normal"{preceding-sibling::identifier{preceding-sibling::*[@role="latinletter" or @role="greekletter" or @role="otherletter"]{parent::*/parent::infixop[@role="implicit"]'.split("{"),["SpecializedRule","number-baseline-font","default","brief",'[t] "base"; [n] . (grammar:ignoreFont=@font); [t] @font (grammar:localFont)'],["SpecializedRule","number-baseline-font","brief","sbrief"],'Rule;identifier;default;[m] CQFspaceoutIdentifier;self::identifier;string-length(text())>1;@role!="unit";@role!="protected";not(@font) or @font="normal" or contains(@grammar, "ignoreFont");text()!=translate(text(), "abcdefghijklmnopqrstuvwxyzαβγδεζηθικλμνξοπρςστυφχψωABCDEFGHIJKLMNOPQRSTUVWXYZΑΒΓΔΕΖΗΘΙΚΛΜΝΞΟΠΡΣΣΤΥΦΧΨΩ", "")'.split(";"),["Rule","identifier","default","[n] text()","self::identifier"],'Rule,negative,default,[t] "négatif"; [n] children/*[1],self::prefixop,@role="negative",children/identifier'.split(","),["Aliases","negative","self::prefixop",'@role="negative"',"children/number"],["Aliases","negative","self::prefixop",'@role="negative"','children/fraction[@role="vulgar"]'],'Rule,negative,default,[t] "négatif"; [n] children/*[1],self::prefixop,@role="negative"'.split(","),["Rule","prefix","default","[m] content/*; [n] children/*[1]","self::prefixop"],["Rule","postfix","default","[n] children/*[1]; [m] content/*","self::postfixop"],["Rule","binary-operation","default","[m] children/* (sepFunc:CTXFcontentIterator);","self::infixop"],'Rule;implicit;default;[m] children/*;self::infixop;@role="implicit"'.split(";"),["Aliases","implicit","self::infixop",'@role="leftsuper" or @role="leftsub" or @role="rightsuper" or @role="rightsub"'],'Rule,subtraction,default,[m] children/* (separator:"moins");,self::infixop,@role="subtraction"'.split(","),["Rule","function-unknown","default","[n] children/*[1]; [n] children/*[2]","self::appl"],'Rule,function-prefix,default,[n] children/*[1]; [n] children/*[2],self::appl,children/*[1][@role="prefix function"]'.split(","),'Rule,fences-open-close,default,[n] content/*[1]; [n] children/*[1]; [n] content/*[2],self::fenced,@role="leftright"'.split(","),'Rule,fences-neutral,default,[t] "début valeur absolue"; [n] children/*[1]; [t] "fin valeur absolue",self::fenced,@role="neutral",content/*[1][text()]="|" or content/*[1][text()]="❘" or content/*[1][text()]="｜"'.split(","),["SpecializedRule","fences-neutral","default","sbrief",'[t] "valeur absolue"; [n] children/*[1]; [t] "fin valeur absolue"'],'Rule,fences-neutral,default,[n] content/*[1]; [n] children/*[1]; [n] content/*[2],self::fenced,@role="neutral"'.split(","),'Rule,fences-set,default,[t] "début ensemble"; [n] children/*[1]; [t] "fin ensemble",self::fenced,@role="set empty" or @role="set extended" or @role="set singleton" or @role="set collection",not(name(../..)="appl")'.split(","),["SpecializedRule","fences-set","default","sbrief",'[t] "ensemble"; [n] children/*[1]; [t] "fin ensemble"'],["Rule","text","default","[n] text()","self::text"],'Rule;factorial;default;[t] "factorielle";self::punctuation;text()="!";name(preceding-sibling::*[1])!="text"'.split(";"),'Rule;minus;default;[t] "moins";self::operator;text()="-"'.split(";"),'Rule;single-prime;default;[t] "prime";self::punctuated;@role="prime";count(children/*)=1'.split(";"),'Rule;double-prime;default;[t] "double prime";self::punctuated;@role="prime";count(children/*)=2'.split(";"),'Rule;triple-prime;default;[t] "triple prime";self::punctuated;@role="prime";count(children/*)=3'.split(";"),'Rule;quadruple-prime;default;[t] "quadruple prime";self::punctuated;@role="prime";count(children/*)=4'.split(";"),'Rule,counted-prime,default,[t] count(children/*); [t] "prime",self::punctuated,@role="prime"'.split(","),["Rule","fraction","default","[t] CSFopenFracVerbose; [n] children/*[1]; [t] CSFoverFracVerbose; [n] children/*[2]; [t] CSFcloseFracVerbose","self::fraction"],["Rule","fraction","brief","[t] CSFopenFracBrief; [n] children/*[1]; [t] CSFoverFracVerbose; [n] children/*[2]; [t] CSFcloseFracBrief","self::fraction"],["Rule","fraction","sbrief","[t] CSFopenFracSbrief; [n] children/*[1]; [t] CSFoverFracSbrief; [n] children/*[2]; [t] CSFcloseFracSbrief","self::fraction"],'Rule;vulgar-fraction;default;[t] CSFvulgarFrFraction;self::fraction;@role="vulgar";CQFvulgarFractionSmall'.split(";"),["SpecializedRule","vulgar-fraction","default","brief"],["SpecializedRule","vulgar-fraction","default","sbrief"],'Rule,continued-fraction-outer,default,[t] "fraction continue"; [n] children/*[1];[t] "sur"; [n] children/*[2],self::fraction,not(ancestor::fraction),children/*[2]/descendant-or-self::*[@role="ellipsis" and not(following-sibling::*)]'.split(","),["SpecializedRule","continued-fraction-outer","default","brief",'[t] "frac continue"; [n] children/*[1];[t] "sur"; [n] children/*[2]'],["SpecializedRule","continued-fraction-outer","brief","sbrief"],'Rule,continued-fraction-inner,default,[t] "début fraction"; [n] children/*[1];[t] "sur"; [n] children/*[2],self::fraction,ancestor::fraction,children/*[2]/descendant-or-self::*[@role="ellipsis" and not(following-sibling::*)]'.split(","),["SpecializedRule","continued-fraction-inner","default","brief",'[t] "début frac"; [n] children/*[1];[t] "sur"; [n] children/*[2]'],["SpecializedRule","continued-fraction-inner","brief","sbrief",'[t] "frac"; [n] children/*[1];[t] "sur"; [n] children/*[2]'],["Rule","sqrt","default","[t] CSFopenRadicalVerbose; [n] children/*[1]; [t] CSFcloseRadicalVerbose","self::sqrt"],["Rule","sqrt","brief","[t] CSFopenRadicalBrief; [n] children/*[1]; [t] CSFcloseRadicalBrief","self::sqrt"],["Rule","sqrt","sbrief","[t] CSFopenRadicalSbrief; [n] children/*[1]; [t] CSFcloseRadicalBrief","self::sqrt"],"Rule,root-small,default,[t] CSFopenRadicalVerbose; [n] children/*[2]; [t] CSFcloseRadicalVerbose,self::root,CQFisSmallRoot".split(","),"Rule,root-small,brief,[t] CSFopenRadicalBrief; [n] children/*[2]; [t] CSFcloseRadicalBrief,self::root,CQFisSmallRoot".split(","),"Rule,root-small,sbrief,[t] CSFopenRadicalSbrief; [n] children/*[2]; [t] CSFcloseRadicalBrief,self::root,CQFisSmallRoot".split(","),["Rule","root","default","[t] CSFindexRadicalVerbose; [n] children/*[1];[t] CSFopenRadicalVerbose; [n] children/*[2]; [t] CSFcloseRadicalVerbose","self::root"],["Rule","root","brief","[t] CSFindexRadicalBrief; [n] children/*[1];[t] CSFopenRadicalBrief; [n] children/*[2]; [t] CSFcloseRadicalBrief","self::root"],["Rule","root","sbrief","[t] CSFindexRadicalSbrief; [n] children/*[1];[t] CSFopenRadicalSbrief; [n] children/*[2]; [t] CSFcloseRadicalBrief","self::root"],'Rule,limboth,default,[n] children/*[1]; [t] "début"; [t] CSFunderscript; [n] children/*[2];[t] "début"; [t] CSFoverscript; [n] children/*[3],self::limboth,name(../..)="underscore" or name(../..)="overscore",following-sibling::*[@role!="underaccent" and @role!="overaccent"]'.split(","),'Rule,limlower,default,[n] children/*[1]; [t] "début"; [t] CSFunderscript; [n] children/*[2];,self::limlower,name(../..)="underscore" or name(../..)="overscore",following-sibling::*[@role!="underaccent" and @role!="overaccent"]'.split(","),'Rule,limupper,default,[n] children/*[1]; [t] "début"; [t] CSFoverscript; [n] children/*[2];,self::limupper,name(../..)="underscore" or name(../..)="overscore",following-sibling::*[@role!="underaccent" and @role!="overaccent"]'.split(","),'Aliases;limlower;self::underscore;@role="limit function";name(../..)="underscore" or name(../..)="overscore";following-sibling::*[@role!="underaccent" and @role!="overaccent"]'.split(";"),'Aliases;limlower;self::underscore;children/*[2][@role!="underaccent"];name(../..)="underscore" or name(../..)="overscore";following-sibling::*[@role!="underaccent" and @role!="overaccent"]'.split(";"),'Aliases;limupper;self::overscore;children/*[2][@role!="overaccent"];name(../..)="underscore" or name(../..)="overscore";following-sibling::*[@role!="underaccent" and @role!="overaccent"]'.split(";"),["Rule","limboth-end","default",'[n] children/*[1]; [t] "début"; [t] CSFunderscript; [n] children/*[2];[t] "début"; [t] CSFoverscript; [n] children/*[3]; [t] "fin scripts"',"self::limboth"],["Rule","limlower-end","default",'[n] children/*[1]; [t] "début"; [t] CSFunderscript; [n] children/*[2]; [t] "fin scripts"',"self::limlower"],["Rule","limupper-end","default",'[n] children/*[1]; [t] "début"; [t] CSFoverscript; [n] children/*[2]; [t] "fin scripts"',"self::limupper"],["Aliases","limlower-end","self::underscore",'@role="limit function"'],["Aliases","limlower-end","self::underscore"],["Aliases","limupper-end","self::overscore"],["Rule","integral","default","[n] children/*[1]; [n] children/*[2]; [n] children/*[3];","self::integral"],'Rule,integral,default,[n] children/*[1]; [t] "indice inférieur"; [n] children/*[2];[t] "indice supérieur"; [n] children/*[3]; [t] "position de base";,self::limboth,@role="integral"'.split(","),["SpecializedRule","integral","default","brief",'[n] children/*[1]; [t] "inf"; [n] children/*[2];[t] "sup"; [n] children/*[3]; [t] "position de base";'],["SpecializedRule","integral","brief","sbrief"],["Rule","bigop","default","[n] children/*[1]; [n] children/*[2];","self::bigop"],["Rule","relseq","default","[m] children/* (sepFunc:CTXFcontentIterator)","self::relseq"],'Rule,equality,default,[n] children/*[1]; [n] content/*[1]; [n] children/*[2],self::relseq,@role="equality",count(./children/*)=2'.split(","),'Rule;multi-equality;default;[m] children/* (sepFunc:CTXFcontentIterator);self::relseq;@role="equality";count(./children/*)>2'.split(";"),["Rule","multrel","default","[m] children/* (sepFunc:CTXFcontentIterator)","self::multirel"],["Rule","subscript","default","[n] children/*[1]; [t] CSFsubscriptVerbose; [n] children/*[2]","self::subscript"],["Rule","subscript","brief","[n] children/*[1]; [t] CSFsubscriptBrief; [n] children/*[2]","self::subscript"],["SpecializedRule","subscript","brief","sbrief"],'Rule,subscript-base,default,[n] children/*[1]; [t] "base"; [n] children/*[2],self::subscript,CQFisLogarithm,self::*,self::*,self::*'.split(","),["SpecializedRule","subscript-base","default","brief"],["SpecializedRule","subscript-base","default","sbrief"],'Rule,subscript-simple,brief,[n] children/*[1]; [n] children/*[2],self::subscript,name(./children/*[1])="identifier",name(./children/*[2])="number",./children/*[2][@role!="mixed"],./children/*[2][@role!="othernumber"]'.split(","),["SpecializedRule","subscript-simple","brief","sbrief"],'Rule,subscript-baseline,default,[n] children/*[1]; [t] CSFsubscriptVerbose; [n] children/*[2]; [t] CSFbaselineVerbose,self::subscript,following-sibling::*,not(name(following-sibling::subscript/children/*[1])="empty" or (name(following-sibling::infixop[@role="implicit"]/children/*[1])="subscript" and name(following-sibling::*/children/*[1]/children/*[1])="empty")) and @role!="subsup",not(following-sibling::*[@role="rightsuper" or @role="rightsub" or @role="leftsub" or @role="leftsub"])'.split(","),["SpecializedRule","subscript-baseline","default","brief","[n] children/*[1]; [t] CSFsubscriptBrief; [n] children/*[2]; [t] CSFbaselineBrief"],["SpecializedRule","subscript-baseline","brief","sbrief"],'Aliases;subscript-baseline;self::subscript;not(following-sibling::*);ancestor::fenced|ancestor::root|ancestor::sqrt|ancestor::punctuated|ancestor::fraction;not(ancestor::punctuated[@role="leftsuper" or @role="rightsub" or @role="rightsuper" or @role="rightsub"])'.split(";"),["Aliases","subscript-baseline","self::subscript","not(following-sibling::*)","ancestor::relseq|ancestor::multirel",sre.MathspeakUtil.generateBaselineConstraint()],["Aliases","subscript-baseline","self::subscript","not(following-sibling::*)","@embellished"],'Rule,subscript-empty-sup,default,[n] children/*[1]; [n] children/*[2],self::subscript,name(children/*[2])="infixop",name(children/*[2][@role="implicit"]/children/*[1])="superscript",name(children/*[2]/children/*[1]/children/*[1])="empty"'.split(","),["SpecializedRule","subscript-empty-sup","default","brief"],["SpecializedRule","subscript-empty-sup","brief","sbrief"],["Aliases","subscript-empty-sup","self::subscript",'name(children/*[2])="superscript"','name(children/*[2]/children/*[1])="empty"'],["Rule","superscript","default","[n] children/*[1]; [t] CSFsuperscriptVerbose; [n] children/*[2]","self::superscript"],["SpecializedRule","superscript","default","brief","[n] children/*[1]; [t] CSFsuperscriptBrief; [n] children/*[2]"],["SpecializedRule","superscript","brief","sbrief"],'Rule,superscript-baseline,default,[n] children/*[1]; [t] CSFsuperscriptVerbose; [n] children/*[2];[t] CSFbaselineVerbose,self::superscript,following-sibling::*,not(name(following-sibling::superscript/children/*[1])="empty" or (name(following-sibling::infixop[@role="implicit"]/children/*[1])="superscript" and name(following-sibling::*/children/*[1]/children/*[1])="empty")) and not(following-sibling::*[@role="rightsuper" or @role="rightsub" or @role="leftsub" or @role="leftsub"])'.split(","),["SpecializedRule","superscript-baseline","default","brief","[n] children/*[1]; [t] CSFsuperscriptBrief; [n] children/*[2];[t] CSFbaselineBrief"],["SpecializedRule","superscript-baseline","brief","sbrief"],'Aliases;superscript-baseline;self::superscript;not(following-sibling::*);ancestor::punctuated;ancestor::*/following-sibling::* and not(ancestor::punctuated[@role="leftsuper" or @role="rightsub" or @role="rightsuper" or @role="rightsub"])'.split(";"),["Aliases","superscript-baseline","self::superscript","not(following-sibling::*)","ancestor::fraction|ancestor::fenced|ancestor::root|ancestor::sqrt"],["Aliases","superscript-baseline","self::superscript","not(following-sibling::*)","ancestor::relseq|ancestor::multirel","not(@embellished)",sre.MathspeakUtil.generateBaselineConstraint()],'Aliases superscript-baseline self::superscript not(following-sibling::*) @embellished not(children/*[2][@role="prime"])'.split(" "),'Rule,superscript-empty-sub,default,[n] children/*[1]; [n] children/*[2],self::superscript,name(children/*[2])="infixop",name(children/*[2][@role="implicit"]/children/*[1])="subscript",name(children/*[2]/children/*[1]/children/*[1])="empty"'.split(","),["SpecializedRule","superscript-empty-sub","default","brief"],["SpecializedRule","superscript-empty-sub","brief","sbrief"],["Aliases","superscript-empty-sub","self::superscript",'name(children/*[2])="subscript"','name(children/*[2]/children/*[1])="empty"'],'Rule,square,default,[n] children/*[1]; [t] "au carré",self::superscript,children/*[2],children/*[2][text()=2],name(children/*[1])!="text" or not(name(children/*[1])="text" and (name(../../../punctuated[@role="text"]/..)="stree" or name(..)="stree")),name(children/*[1])!="subscript" or (name(children/*[1])="subscript" and name(children/*[1]/children/*[1])="identifier" and name(children/*[1]/children/*[2])="number" and children/*[1]/children/*[2][@role!="mixed"] and children/*[1]/children/*[2][@role!="othernumber"]),not(@embellished)'.split(","),["SpecializedRule","square","default","brief"],["SpecializedRule","square","default","sbrief"],'Aliases;square;self::superscript;children/*[2];children/*[2][text()=2];@embellished;children/*[1][@role="prefix operator"]'.split(";"),'Rule,cube,default,[n] children/*[1]; [t] "cubique",self::superscript,children/*[2],children/*[2][text()=3],name(children/*[1])!="text" or not(name(children/*[1])="text" and (name(../../../punctuated[@role="text"]/..)="stree" or name(..)="stree")),name(children/*[1])!="subscript" or (name(children/*[1])="subscript" and name(children/*[1]/children/*[1])="identifier" and name(children/*[1]/children/*[2])="number" and children/*[1]/children/*[2][@role!="mixed"] and children/*[1]/children/*[2][@role!="othernumber"]),not(@embellished)'.split(","),["SpecializedRule","cube","default","brief"],["SpecializedRule","cube","default","sbrief"],'Aliases;cube;self::superscript;children/*[2];children/*[2][text()=3];@embellished;children/*[1][@role="prefix operator"]'.split(";"),'Rule,prime,default,[n] children/*[1]; [n] children/*[2],self::superscript,children/*[2],children/*[2][@role="prime"]'.split(","),["SpecializedRule","prime","default","brief"],["SpecializedRule","prime","default","sbrief"],'Rule,prime-subscript,default,[n] children/*[1]/children/*[1]; [n] children/*[2]; [t] CSFsubscriptVerbose; [n] children/*[1]/children/*[2],self::superscript,children/*[2][@role="prime"],name(children/*[1])="subscript",not(following-sibling::*)'.split(","),["SpecializedRule","prime-subscript","default","brief","[n] children/*[1]/children/*[1]; [n] children/*[2]; [t] CSFsubscriptBrief; [n] children/*[1]/children/*[2]"],["SpecializedRule","prime-subscript","brief","sbrief"],'Rule,prime-subscript-baseline,default,[n] children/*[1]/children/*[1]; [n] children/*[2]; [t] CSFsubscriptVerbose; [n] children/*[1]/children/*[2]; [t] CSFbaselineVerbose,self::superscript,children/*[2][@role="prime"],name(children/*[1])="subscript",following-sibling::*'.split(","),["SpecializedRule","prime-subscript-baseline","default","brief","[n] children/*[1]/children/*[1]; [n] children/*[2]; [t] CSFsubscriptBrief; [n] children/*[1]/children/*[2]; [t] CSFbaselineBrief"],["SpecializedRule","prime-subscript-baseline","brief","sbrief"],'Aliases prime-subscript-baseline self::superscript children/*[2][@role="prime"] name(children/*[1])="subscript" not(following-sibling::*) @embellished'.split(" "),'Rule,prime-subscript-simple,brief,[n] children/*[1]/children/*[1]; [n] children/*[2];[n] children/*[1]/children/*[2],self::superscript,children/*[2][@role="prime"],name(children/*[1])="subscript",name(children/*[1]/children/*[1])="identifier",name(children/*[1]/children/*[2])="number",children/*[1]/children/*[2][@role!="mixed"],children/*[1]/children/*[2][@role!="othernumber"]'.split(","),["SpecializedRule","prime-subscript-simple","brief","sbrief"],'Rule,overscore,default,[t] "suscrire"; [n] children/*[1]; [t] "avec"; [n] children/*[2],self::overscore,children/*[2][@role="overaccent"]'.split(","),'Rule,double-overscore,default,[t] "sus-suscrire"; [n] children/*[1]; [t] "avec"; [n] children/*[2],self::overscore,children/*[2][@role="overaccent"],name(children/*[1])="overscore",children/*[1]/children/*[2][@role="overaccent"]'.split(","),'Rule,underscore,default,[t] "souscrire"; [n] children/*[1]; [t] "avec"; [n] children/*[2],self::underscore,children/*[2][@role="underaccent"]'.split(","),'Rule,double-underscore,default,[t] "sous-souscrire"; [n] children/*[1]; [t] "avec"; [n] children/*[2],self::underscore,children/*[2][@role="underaccent"],name(children/*[1])="underscore",children/*[1]/children/*[2][@role="underaccent"]'.split(","),'Rule,matrix-fence,default,[n] children/*[1];,self::fenced,count(children/*)=1,name(children/*[1])="matrix"'.split(","),["Rule","matrix","default",'[t] "début matrice"; [t] count(children/*);  [t] "par";[t] count(children/*[1]/children/*); [m] children/* (ctxtFunc:CTXFordinalCounter,context:"rangée "); [t] "fin matrice"',"self::matrix"],["Rule","matrix","sbrief",'[t] "matrice"; [t] count(children/*);  [t] "par";[t] count(children/*[1]/children/*); [m] children/* (ctxtFunc:CTXFordinalCounter,context:"rangée "); [t] "fin matrice"',"self::matrix"],["Aliases","matrix","self::vector"],["Rule","matrix-row","default",'[m] children/* (ctxtFunc:CTXFordinalCounter,context:"colonne");[p] (pause: 200)',"self::row"],'Rule{row-with-label{default{[t] "avec étiquette"; [n] content/*[1]; [t] "fin étiquette"(pause: 200); [m] children/* (ctxtFunc:CTXFordinalCounter,context:"colonne"){self::row{content'.split("{"),'Rule{row-with-label{brief{[t] "étiquette"; [n] content/*[1]; [m] children/* (ctxtFunc:CTXFordinalCounter,context:"colonne"){self::row{content'.split("{"),["SpecializedRule","row-with-label","brief","sbrief"],'Rule{row-with-text-label{sbrief{[t] "étiquette"; [t] CSFRemoveParens;[m] children/* (ctxtFunc:CTXFordinalCounter,context:"colonne"){self::row{content{name(content/cell/children/*[1])="text"'.split("{"),'Rule;empty-row;default;[t] "vide";self::row;count(children/*)=0'.split(";"),["Rule","matrix-cell","default","[n] children/*[1]; [p] (pause: 300)","self::cell"],'Rule,empty-cell,default,[t] "vide"; [p] (pause: 300),self::cell,count(children/*)=0'.split(","),'Rule{determinant{default{[t] "début déterminant"; [t] count(children/*);  [t] "par";[t] count(children/*[1]/children/*); [t] ""; [m] children/* (ctxtFunc:CTXFordinalCounter,context:"rangée "); [t] "fin déterminant"{self::matrix{@role="determinant"'.split("{"),["SpecializedRule","determinant","default","sbrief",'[t] "déterminant"; [t] count(children/*);  [t] "par";[t] count(children/*[1]/children/*); [m] children/* (ctxtFunc:CTXFordinalCounter,context:"rangée "); [t] "fin déterminant"'],'Rule{determinant-simple{default{[t] "début déterminant"; [t] count(children/*);  [t] "par";[t] count(children/*[1]/children/*); [m] children/* (ctxtFunc:CTXFordinalCounter,context:"rangée",grammar:simpleDet); [t] "fin déterminant"{self::matrix{@role="determinant"{CQFdetIsSimple'.split("{"),["SpecializedRule","determinant-simple","default","sbrief",'[t] "déterminant"; [t] count(children/*);  [t] "par";[t] count(children/*[1]/children/*); [m] children/* (ctxtFunc:CTXFordinalCounter,context:"rangée",grammar:simpleDet); [t] "fin déterminant"'],'Rule{row-simple{default{[m] children/*;{self::row{@role="determinant"{contains(@grammar, "simpleDet")'.split("{"),["Rule","layout","default",'[t] "début tableau"; [m] children/* (ctxtFunc:CTXFordinalCounter,context:"rangée "); [t] "fin tableau"',"self::table"],["Rule","layout","sbrief",'[t] "tableau"; [m] children/* (ctxtFunc:CTXFordinalCounter,context:"rangée "); [t] "fin tableau"',"self::table"],'Rule,binomial,default,[t] "début binomiale"; [n] children/*[2]/children/*[1]; [t] "parmi"; [n] children/*[1]/children/*[1];  [t] "fin binomiale",self::vector,@role="binomial"'.split(","),'Rule,binomial,sbrief,[t] "binomiale"; [n] children/*[1]/children/*[1]; [t] "parmi"; [n] children/*[2]/children/*[1];  [t] "fin binomiale",self::vector,@role="binomial"'.split(","),["Rule","cases","default",'[t] "début tableau"; [n] content/*[1]; [t] "élargie";[m] children/* (ctxtFunc:CTXFordinalCounter,context:"rangée "); [t] "fin tableau"',"self::cases"],["Rule","cases","sbrief",'[t] "tableau"; [n] content/*[1]; [t] "élargie"; [m] children/* (ctxtFunc:CTXFordinalCounter,context:"rangée "); [t] "fin tableau"',"self::cases"],["Aliases","layout","self::multiline"],["Rule","line","default","[m] children/*","self::line"],'Rule,line-with-label,default,[t] "avec etiquette"; [n] content/*[1]; [t] "fin etiquette" (pause: 200); [m] children/*,self::line,content'.split(","),["SpecializedRule","line-with-label","default","brief",'[t] "etiquette"; [n] content/*[1] (pause: 200); [m] children/*'],["SpecializedRule","line-with-label","brief","sbrief"],'Rule,line-with-text-label,sbrief,[t] "etiquette"; [t] CSFRemoveParens; [m] children/*,self::line,content,name(content/cell/children/*[1])="text"'.split(","),'Rule;empty-line;default;[t] "vide";self::line;count(children/*)=0;not(content)'.split(";"),["SpecializedRule","empty-line","default","brief"],["SpecializedRule","empty-line","brief","sbrief"],'Rule,empty-line-with-label,default,[t] "avec etiquette"; [n] content/*[1]; [t] "fin etiquette" (pause: 200); [t] "vide",self::line,count(children/*)=0,content'.split(","),["SpecializedRule","empty-line-with-label","default","brief",'[t] "etiquette"; [n] content/*[1] (pause: 200); [t] "vide"'],["SpecializedRule","empty-line-with-label","brief","sbrief"],["Rule","enclose","default",'[t] "début enfermer en"; [t] @role (grammar:localEnclose); [n] children/*[1]; [t] "fin enfermer"',"self::enclose"],'Rule,overbar,default,[t] "début trait suscrit"; [n] children/*[1]; [t] "fin trait suscrit",self::enclose,@role="top"'.split(","),'Rule,underbar,default,[t] "début trait souscrit"; [n] children/*[1]; [t] "fin trait souscrit",self::enclose,@role="bottom"'.split(","),'Rule,leftbar,default,[t] "barre verticale"; [n] children/*[1],self::enclose,@role="left"'.split(","),'Rule,rightbar,default,[n] children/*[1]; [t] "barre verticale",self::enclose,@role="right"'.split(","),'Rule,crossout,default,[t] "début biffé"; [n] children/*[1]; [t] "fin biffé",self::enclose,@role="updiagonalstrike" or @role="downdiagonalstrike" or @role="horizontalstrike"'.split(","),'Rule,cancel,default,[t] "début biffé"; [n] children/*[1]/children/*[1]; [t] "avec"; [n] children/*[2]; [t] "fin biffé",self::overscore,@role="updiagonalstrike" or @role="downdiagonalstrike" or @role="horizontalstrike"'.split(","),["SpecializedRule","cancel","default","brief"],["SpecializedRule","cancel","default","sbrief"],["Aliases","cancel","self::underscore",'@role="updiagonalstrike" or @role="downdiagonalstrike" or @role="horizontalstrike"'],'Rule,cancel-reverse,default,[t] "début biffé"; [n] children/*[2]/children/*[1]; [t] "avec"; [n] children/*[1]; [t] "fin biffé",self::overscore,name(children/*[2])="enclose",children/*[2][@role="updiagonalstrike" or @role="downdiagonalstrike" or @role="horizontalstrike"]'.split(","),["SpecializedRule","cancel-reverse","default","brief"],["SpecializedRule","cancel-reverse","default","sbrief"],["Aliases","cancel-reverse","self::underscore",'name(children/*[2])="enclose"','children/*[2][@role="updiagonalstrike" or @role="downdiagonalstrike" or @role="horizontalstrike"]'],'Rule;end-punct;default;[m] children/*;self::punctuated;@role="endpunct"'.split(";"),'Rule,start-punct,default,[n] content/*[1]; [m] children/*[position()>1],self::punctuated,@role="startpunct"'.split(","),'Rule,integral-punct,default,[n] children/*[1]; [n] children/*[3],self::punctuated,@role="integral"'.split(","),["Rule","punctuated","default","[m] children/*","self::punctuated"],'Rule;unit;default;[t] text() (grammar:annotation="unit":translate);self::identifier;@role="unit"'.split(";"),'Rule,unit-square,default,[n] children/*[1]; [t] "carré",self::superscript,@role="unit",children/*[2][text()=2],name(children/*[1])="identifier"'.split(","),'Rule,unit-cubic,default,[n] children/*[1]; [t] "cubique",self::superscript,@role="unit",children/*[2][text()=3],name(children/*[1])="identifier"'.split(","),'Rule,reciprocal,default,[t] "réciproque"; [n] children/*[1],self::superscript,@role="unit",name(children/*[1])="identifier",name(children/*[2])="prefixop",children/*[2][@role="negative"],children/*[2]/children/*[1][text()=1],count(preceding-sibling::*)=0 or preceding-sibling::*[@role!="unit"]'.split(","),'Rule,reciprocal,default,[t] "par"; [n] children/*[1],self::superscript,@role="unit",name(children/*[1])="identifier",name(children/*[2])="prefixop",children/*[2][@role="negative"],children/*[2]/children/*[1][text()=1],preceding-sibling::*[@role="unit"]'.split(","),'Rule;unit-combine;default;[m] children/*;self::infixop;@role="unit"'.split(";"),'Rule,unit-divide,default,[n] children/*[1]; [t] "par"; [n] children/*[2],self::fraction,@role="unit"'.split(",")],initialize:[sre.MathspeakUtil.generateTensorRules]},sre.MathspeakGerman={locale:"de",domain:"mathspeak",functions:[["CQF","CQFspaceoutNumber",sre.MathspeakUtil.spaceoutNumber],["CQF","CQFspaceoutIdentifier",sre.MathspeakUtil.spaceoutIdentifier],["CSF","CSFspaceoutText",sre.MathspeakUtil.spaceoutText],["CSF","CSFopenFracVerbose",sre.MathspeakUtil.openingFractionVerbose],["CSF","CSFcloseFracVerbose",sre.MathspeakUtil.closingFractionVerbose],["CSF","CSFoverFracVerbose",sre.MathspeakUtil.overFractionVerbose],["CSF","CSFopenFracBrief",sre.MathspeakUtil.openingFractionBrief],["CSF","CSFcloseFracBrief",sre.MathspeakUtil.closingFractionBrief],["CSF","CSFopenFracSbrief",sre.MathspeakUtil.openingFractionSbrief],["CSF","CSFcloseFracSbrief",sre.MathspeakUtil.closingFractionSbrief],["CSF","CSFoverFracSbrief",sre.MathspeakUtil.overFractionSbrief],["CSF","CSFvulgarFraction",sre.NumbersUtil.vulgarFraction],["CQF","CQFvulgarFractionSmall",sre.MathspeakUtil.isSmallVulgarFraction],["CSF","CSFopenRadicalVerbose",sre.MathspeakUtil.openingRadicalVerbose],["CSF","CSFcloseRadicalVerbose",sre.MathspeakUtil.closingRadicalVerbose],["CSF","CSFindexRadicalVerbose",sre.MathspeakUtil.indexRadicalVerbose],["CSF","CSFopenRadicalBrief",sre.MathspeakUtil.openingRadicalBrief],["CSF","CSFcloseRadicalBrief",sre.MathspeakUtil.closingRadicalBrief],["CSF","CSFindexRadicalBrief",sre.MathspeakUtil.indexRadicalBrief],["CSF","CSFopenRadicalSbrief",sre.MathspeakUtil.openingRadicalSbrief],["CSF","CSFindexRadicalSbrief",sre.MathspeakUtil.indexRadicalSbrief],["CSF","CSFsuperscriptVerbose",sre.MathspeakUtil.superscriptVerbose],["CSF","CSFsuperscriptBrief",sre.MathspeakUtil.superscriptBrief],["CSF","CSFsubscriptVerbose",sre.MathspeakUtil.subscriptVerbose],["CSF","CSFsubscriptBrief",sre.MathspeakUtil.subscriptBrief],["CSF","CSFbaselineVerbose",sre.MathspeakUtil.baselineVerbose],["CSF","CSFbaselineBrief",sre.MathspeakUtil.baselineBrief],["CSF","CSFleftsuperscriptVerbose",sre.MathspeakUtil.superscriptVerbose],["CSF","CSFleftsubscriptVerbose",sre.MathspeakUtil.subscriptVerbose],["CSF","CSFrightsuperscriptVerbose",sre.MathspeakUtil.superscriptVerbose],["CSF","CSFrightsubscriptVerbose",sre.MathspeakUtil.subscriptVerbose],["CSF","CSFleftsuperscriptBrief",sre.MathspeakUtil.superscriptBrief],["CSF","CSFleftsubscriptBrief",sre.MathspeakUtil.subscriptBrief],["CSF","CSFrightsuperscriptBrief",sre.MathspeakUtil.superscriptBrief],["CSF","CSFrightsubscriptBrief",sre.MathspeakUtil.subscriptBrief],["CSF","CSFunderscript",sre.MathspeakUtil.nestedUnderscore],["CSF","CSFoverscript",sre.MathspeakUtil.nestedOverscore],["CTXF","CTXFordinalCounter",sre.NumbersUtil.ordinalCounter],["CTXF","CTXFcontentIterator",sre.StoreUtil.contentIterator],["CQF","CQFdetIsSimple",sre.MathspeakUtil.determinantIsSimple],["CSF","CSFRemoveParens",sre.MathspeakUtil.removeParens],["CQF","CQFresetNesting",sre.MathspeakUtil.resetNestingDepth]],rules:['Rule{collapsed{default{[n] . (engine:modality=summary,grammar:collapsed); [t] "kollabiert"{self::*{@alternative{not(contains(@grammar, "collapsed")){self::*{self::*{self::*{self::*{self::*'.split("{"),["SpecializedRule","collapsed","default","brief"],["SpecializedRule","collapsed","brief","sbrief"],"Rule;stree;default;[n] ./*[1];self::stree;CQFresetNesting".split(";"),["Rule","unknown","default","[n] text()","self::unknown"],'Rule;protected;default;[t] text();self::number;contains(@grammar, "protected")'.split(";"),["Rule","omit-empty","default","[p] (pause:100)","self::empty"],'Rule;blank-empty;default;[t] "leer";self::empty;count(../*)=1;name(../..)="cell" or name(../..)="line"'.split(";"),'Rule{font{default{[t] @font (grammar:localFont); [n] . (grammar:ignoreFont=@font){self::*{name(self::*)!="number"{@font{not(contains(@grammar, "ignoreFont")){@font!="normal"'.split("{"),'Rule{font-number{default{[t] @font (grammar:localFontNumber); [n] . (grammar:ignoreFont=@font){self::number{@font{not(contains(@grammar, "ignoreFont")){@font!="normal"'.split("{"),'Rule{font-identifier-short{default{[t] @font (grammar:localFont); [n] . (grammar:ignoreFont=@font){self::identifier{string-length(text())=1{@font{not(contains(@grammar, "ignoreFont")){@font="normal"{""=translate(text(), "abcdefghijklmnopqrstuvwxyzαβγδεζηθικλμνξοπρςστυφχψωABCDEFGHIJKLMNOPQRSTUVWXYZΑΒΓΔΕΖΗΘΙΚΛΜΝΞΟΠΡΣΣΤΥΦΧΨΩ", ""){@role!="unit"'.split("{"),'Rule{font-identifier{default{[t] @font (grammar:localFont); [n] . (grammar:ignoreFont=@font){self::identifier{string-length(text())=1 or string-length(text())=2{@font{@font="normal"{not(contains(@grammar, "ignoreFont")){@role!="unit"'.split("{"),'Rule;omit-font;default;[n] . (grammar:ignoreFont=@font);self::identifier;string-length(text())=1 or string-length(text())=2;@font;not(contains(@grammar, "ignoreFont"));@font="italic";self::*'.split(";"),'Rule{font-double-struck{default{[n] . (grammar:ignoreFont=@font); [t] @font (grammar:localFont){self::*{name(self::*)!="number"{string-length(text())=1 or string-length(text())=2{@font{not(contains(@grammar, "ignoreFont")){@font="double-struck"'.split("{"),'Rule{font-number-double-struck{default{[n] . (grammar:ignoreFont=@font); [t] @font (grammar:localFontNumber){self::number{string-length(text())=1 or string-length(text())=2{@font{not(contains(@grammar, "ignoreFont")){@font="double-struck"'.split("{"),["Rule","number","default","[n] text()","self::number"],'Rule,mixed-number,default,[n] children/*[1]; [n] children/*[2]; ,self::number,@role="mixed"'.split(","),'Rule{number-with-chars{default{[t] "Zahl"; [m] CQFspaceoutNumber (grammar:protected){self::number{@role="othernumber"{"" != translate(text(), "0123456789.,", ""){not(contains(@grammar, "protected"))'.split("{"),'Rule{number-as-upper-word{default{[t] "Wort groß"; [t] CSFspaceoutText{self::number{string-length(text())>1{text()=translate(text(), "abcdefghijklmnopqrstuvwxyzαβγδεζηθικλμνξοπρςστυφχψω", "ABCDEFGHIJKLMNOPQRSTUVWXYZΑΒΓΔΕΖΗΘΙΚΛΜΝΞΟΠΡΣΣΤΥΦΧΨΩ"){""=translate(text(), "ABCDEFGHIJKLMNOPQRSTUVWXYZΑΒΓΔΕΖΗΘΙΚΛΜΝΞΟΠΡΣΣΤΥΦΧΨΩ","")'.split("{"),["SpecializedRule","number-as-upper-word","default","brief"],["SpecializedRule","number-as-upper-word","default","sbrief"],'Rule{number-baseline{default{[t] "Grundlinie"; [n] . (grammar:baseline){self::number{not(contains(@grammar, "ignoreFont")){preceding-sibling::identifier{not(contains(@grammar, "baseline")){preceding-sibling::*[1][@role="latinletter" or @role="greekletter" or @role="otherletter"]{parent::*/parent::infixop[@role="implicit"]'.split("{"),["SpecializedRule","number-baseline","default","brief",'[t] "Grund"; [n] . (grammar:baseline)'],["SpecializedRule","number-baseline","brief","sbrief"],'Rule{number-baseline-font{default{[t] "Grundlinie"; [t] @font (grammar:localFont); [n] . (grammar:ignoreFont=@font){self::number{@font{not(contains(@grammar, "ignoreFont")){@font!="normal"{preceding-sibling::identifier{preceding-sibling::*[@role="latinletter" or @role="greekletter" or @role="otherletter"]{parent::*/parent::infixop[@role="implicit"]'.split("{"),["SpecializedRule","number-baseline-font","default","brief",'[t] "Grund"; [t] @font (grammar:localFont); [n] . (grammar:ignoreFont=@font)'],["SpecializedRule","number-baseline-font","brief","sbrief"],'Rule;identifier;default;[m] CQFspaceoutIdentifier;self::identifier;string-length(text())>1;@role!="unit";not(@font) or @font="normal" or contains(@grammar, "ignoreFont");text()!=translate(text(), "abcdefghijklmnopqrstuvwxyzαβγδεζηθικλμνξοπρςστυφχψωABCDEFGHIJKLMNOPQRSTUVWXYZΑΒΓΔΕΖΗΘΙΚΛΜΝΞΟΠΡΣΣΤΥΦΧΨΩ", "")'.split(";"),["Rule","identifier","default","[n] text()","self::identifier"],'Rule,negative,default,[t] "minus"; [n] children/*[1],self::prefixop,@role="negative",children/identifier'.split(","),["Aliases","negative","self::prefixop",'@role="negative"',"children/number"],["Aliases","negative","self::prefixop",'@role="negative"','children/fraction[@role="vulgar"]'],'Rule,negative,default,[t] "minus"; [n] children/*[1],self::prefixop,@role="negative"'.split(","),["Rule","prefix","default","[m] content/*; [n] children/*[1]","self::prefixop"],["Rule","postfix","default","[n] children/*[1]; [m] content/*","self::postfixop"],["Rule","binary-operation","default","[m] children/* (sepFunc:CTXFcontentIterator);","self::infixop"],'Rule;implicit;default;[m] children/*;self::infixop;@role="implicit"'.split(";"),["Aliases","implicit","self::infixop",'@role="leftsuper" or @role="leftsub" or @role="rightsuper" or @role="rightsub"'],'Rule,subtraction,default,[m] children/* (separator:"minus");,self::infixop,@role="subtraction"'.split(","),["Rule","function-unknown","default","[n] children/*[1]; [n] children/*[2]","self::appl"],'Rule,function-prefix,default,[n] children/*[1]; [n] children/*[2],self::appl,children/*[1][@role="prefix function"]'.split(","),'Rule,fences-open-close,default,[n] content/*[1]; [n] children/*[1]; [n] content/*[2],self::fenced,@role="leftright"'.split(","),'Rule,fences-neutral,default,[t] "Anfang Betrag"; [n] children/*[1]; [t] "Ende Betrag",self::fenced,@role="neutral",content/*[1][text()]="|" or content/*[1][text()]="❘" or content/*[1][text()]="｜"'.split(","),["SpecializedRule","fences-neutral","default","sbrief",'[t] "Betrag"; [n] children/*[1]; [t] "Ende Betrag"'],'Rule,fences-neutral,default,[n] content/*[1]; [n] children/*[1]; [n] content/*[2],self::fenced,@role="neutral"'.split(","),'Rule,fences-set,default,[t] "Anfang Menge"; [n] children/*[1]; [t] "Ende Menge",self::fenced,@role="set empty" or @role="set extended" or @role="set singleton" or @role="set collection",not(name(../..)="appl")'.split(","),["SpecializedRule","fences-set","default","sbrief",'[t] "Menge"; [n] children/*[1]; [t] "Ende Menge"'],["Rule","text","default","[n] text()","self::text"],'Rule;factorial;default;[t] "Fakultät";self::punctuation;text()="!";name(preceding-sibling::*[1])!="text"'.split(";"),'Rule;minus;default;[t] "minus";self::operator;text()="-"'.split(";"),'Rule;single-prime;default;[t] "Strich";self::punctuated;@role="prime";count(children/*)=1'.split(";"),'Rule;double-prime;default;[t] "zwei Strich";self::punctuated;@role="prime";count(children/*)=2'.split(";"),'Rule;triple-prime;default;[t] "drei Strich";self::punctuated;@role="prime";count(children/*)=3'.split(";"),'Rule;quadruple-prime;default;[t] "vier Strich";self::punctuated;@role="prime";count(children/*)=4'.split(";"),'Rule,counted-prime,default,[t] count(children/*); [t] "Strich",self::punctuated,@role="prime"'.split(","),["Rule","fraction","default","[t] CSFopenFracVerbose; [n] children/*[1]; [t] CSFoverFracVerbose; [n] children/*[2]; [t] CSFcloseFracVerbose","self::fraction"],["Rule","fraction","brief","[t] CSFopenFracBrief; [n] children/*[1]; [t] CSFoverFracVerbose; [n] children/*[2]; [t] CSFcloseFracBrief","self::fraction"],["Rule","fraction","sbrief","[t] CSFopenFracSbrief; [n] children/*[1]; [t] CSFoverFracSbrief; [n] children/*[2]; [t] CSFcloseFracSbrief","self::fraction"],'Rule;vulgar-fraction;default;[t] CSFvulgarFraction (grammar:correctOne);self::fraction;@role="vulgar";CQFvulgarFractionSmall'.split(";"),["SpecializedRule","vulgar-fraction","default","brief"],["SpecializedRule","vulgar-fraction","default","sbrief"],'Rule,continued-fraction-outer,default,[t] "Kettenbruch"; [n] children/*[1];[t] "durch"; [n] children/*[2],self::fraction,not(ancestor::fraction),children/*[2]/descendant-or-self::*[@role="ellipsis" and not(following-sibling::*)]'.split(","),'Rule,continued-fraction-inner,default,[t] "Anfang Bruch"; [n] children/*[1];[t] "durch"; [n] children/*[2],self::fraction,ancestor::fraction,children/*[2]/descendant-or-self::*[@role="ellipsis" and not(following-sibling::*)]'.split(","),["SpecializedRule","continued-fraction-inner","default","sbrief",'[t] "Bruch"; [n] children/*[1];[t] "durch"; [n] children/*[2]'],["Rule","sqrt","default","[t] CSFopenRadicalVerbose; [n] children/*[1]; [t] CSFcloseRadicalVerbose","self::sqrt"],["Rule","sqrt","brief","[t] CSFopenRadicalBrief; [n] children/*[1]; [t] CSFcloseRadicalBrief","self::sqrt"],["Rule","sqrt","sbrief","[t] CSFopenRadicalSbrief; [n] children/*[1]; [t] CSFcloseRadicalBrief","self::sqrt"],"Rule,root-small,default,[t] CSFopenRadicalVerbose; [n] children/*[2]; [t] CSFcloseRadicalVerbose,self::root,children/*[1][text()=3 or text()=2]".split(","),"Rule,root-small,brief,[t] CSFopenRadicalBrief; [n] children/*[2]; [t] CSFcloseRadicalBrief,self::root,children/*[1][text()=3 or text()=2]".split(","),"Rule,root-small,sbrief,[t] CSFopenRadicalSbrief; [n] children/*[2]; [t] CSFcloseRadicalBrief,self::root,children/*[1][text()=3 or text()=2]".split(","),["Rule","root","default","[t] CSFindexRadicalVerbose; [n] children/*[1];[t] CSFopenRadicalVerbose; [n] children/*[2]; [t] CSFcloseRadicalVerbose","self::root"],["Rule","root","brief","[t] CSFindexRadicalBrief; [n] children/*[1];[t] CSFopenRadicalBrief; [n] children/*[2]; [t] CSFcloseRadicalBrief","self::root"],["Rule","root","sbrief","[t] CSFindexRadicalSbrief; [n] children/*[1];[t] CSFopenRadicalSbrief; [n] children/*[2]; [t] CSFcloseRadicalBrief","self::root"],'Rule,limboth,default,[n] children/*[1]; [t] CSFunderscript; [n] children/*[2];[t] CSFoverscript; [n] children/*[3],self::limboth,name(../..)="underscore" or name(../..)="overscore",following-sibling::*[@role!="underaccent" and @role!="overaccent"]'.split(","),'Rule,limlower,default,[n] children/*[1]; [t] CSFunderscript; [n] children/*[2];,self::limlower,name(../..)="underscore" or name(../..)="overscore",following-sibling::*[@role!="underaccent" and @role!="overaccent"]'.split(","),'Rule,limupper,default,[n] children/*[1]; [t] CSFoverscript; [n] children/*[2];,self::limupper,name(../..)="underscore" or name(../..)="overscore",following-sibling::*[@role!="underaccent" and @role!="overaccent"]'.split(","),'Aliases;limlower;self::underscore;@role="limit function";name(../..)="underscore" or name(../..)="overscore";following-sibling::*[@role!="underaccent" and @role!="overaccent"]'.split(";"),'Aliases;limlower;self::underscore;children/*[2][@role!="underaccent"];name(../..)="underscore" or name(../..)="overscore";following-sibling::*[@role!="underaccent" and @role!="overaccent"]'.split(";"),'Aliases;limupper;self::overscore;children/*[2][@role!="overaccent"];name(../..)="underscore" or name(../..)="overscore";following-sibling::*[@role!="underaccent" and @role!="overaccent"]'.split(";"),["Rule","limboth-end","default",'[n] children/*[1]; [t] CSFunderscript; [n] children/*[2];[t] CSFoverscript; [n] children/*[3]; [t] "Ende Überschrift"',"self::limboth"],["Rule","limlower-end","default",'[n] children/*[1]; [t] CSFunderscript; [n] children/*[2]; [t] "Ende Unterschrift"',"self::limlower"],["Rule","limupper-end","default",'[n] children/*[1]; [t] CSFoverscript; [n] children/*[2]; [t] "Ende Überschrift"',"self::limupper"],["Aliases","limlower-end","self::underscore",'@role="limit function"'],["Aliases","limlower-end","self::underscore"],["Aliases","limupper-end","self::overscore"],["Rule","integral","default","[n] children/*[1]; [n] children/*[2]; [n] children/*[3];","self::integral"],'Rule,integral,default,[n] children/*[1]; [t] "Index"; [n] children/*[2];[t] "Hoch"; [n] children/*[3]; [t] "Grundlinie";,self::limboth,@role="integral"'.split(","),["SpecializedRule","integral","default","brief",'[n] children/*[1]; [t] "Index"; [n] children/*[2];[t] "Hoch"; [n] children/*[3]; [t] "Base";'],["SpecializedRule","integral","brief","sbrief"],["Rule","bigop","default","[n] children/*[1]; [n] children/*[2];","self::bigop"],["Rule","relseq","default","[m] children/* (sepFunc:CTXFcontentIterator)","self::relseq"],'Rule,equality,default,[n] children/*[1]; [n] content/*[1]; [n] children/*[2],self::relseq,@role="equality",count(./children/*)=2'.split(","),'Rule;multi-equality;default;[m] children/* (sepFunc:CTXFcontentIterator);self::relseq;@role="equality";count(./children/*)>2'.split(";"),["Rule","multrel","default","[m] children/* (sepFunc:CTXFcontentIterator)","self::multirel"],["Rule","subscript","default","[n] children/*[1]; [t] CSFsubscriptVerbose; [n] children/*[2]","self::subscript"],["Rule","subscript","brief","[n] children/*[1]; [t] CSFsubscriptBrief; [n] children/*[2]","self::subscript"],["SpecializedRule","subscript","brief","sbrief"],'Rule,subscript-simple,default,[n] children/*[1]; [n] children/*[2],self::subscript,name(./children/*[1])="identifier",name(./children/*[2])="number",./children/*[2][@role!="mixed"],./children/*[2][@role!="othernumber"]'.split(","),["SpecializedRule","subscript-simple","default","brief"],["SpecializedRule","subscript-simple","default","sbrief"],'Rule,subscript-baseline,default,[n] children/*[1]; [t] CSFsubscriptVerbose; [n] children/*[2]; [t] CSFbaselineVerbose,self::subscript,following-sibling::*,not(name(following-sibling::subscript/children/*[1])="empty" or (name(following-sibling::infixop[@role="implicit"]/children/*[1])="subscript" and name(following-sibling::*/children/*[1]/children/*[1])="empty")) and @role!="subsup",not(following-sibling::*[@role="rightsuper" or @role="rightsub" or @role="leftsub" or @role="leftsub"])'.split(","),["SpecializedRule","subscript-baseline","default","brief","[n] children/*[1]; [t] CSFsubscriptBrief; [n] children/*[2]; [t] CSFbaselineBrief"],["SpecializedRule","subscript-baseline","brief","sbrief"],'Aliases;subscript-baseline;self::subscript;not(following-sibling::*);ancestor::fenced|ancestor::root|ancestor::sqrt|ancestor::punctuated|ancestor::fraction;not(ancestor::punctuated[@role="leftsuper" or @role="rightsub" or @role="rightsuper" or @role="rightsub"])'.split(";"),["Aliases","subscript-baseline","self::subscript","not(following-sibling::*)","ancestor::relseq|ancestor::multirel",sre.MathspeakUtil.generateBaselineConstraint()],["Aliases","subscript-baseline","self::subscript","not(following-sibling::*)","@embellished"],'Rule,subscript-empty-sup,default,[n] children/*[1]; [n] children/*[2],self::subscript,name(children/*[2])="infixop",name(children/*[2][@role="implicit"]/children/*[1])="superscript",name(children/*[2]/children/*[1]/children/*[1])="empty"'.split(","),["SpecializedRule","subscript-empty-sup","default","brief"],["SpecializedRule","subscript-empty-sup","brief","sbrief"],["Aliases","subscript-empty-sup","self::subscript",'name(children/*[2])="superscript"','name(children/*[2]/children/*[1])="empty"'],["Rule","superscript","default","[n] children/*[1]; [t] CSFsuperscriptVerbose; [n] children/*[2]","self::superscript"],["SpecializedRule","superscript","default","brief","[n] children/*[1]; [t] CSFsuperscriptBrief; [n] children/*[2]"],["SpecializedRule","superscript","brief","sbrief"],'Rule,superscript-baseline,default,[n] children/*[1]; [t] CSFsuperscriptVerbose; [n] children/*[2];[t] CSFbaselineVerbose,self::superscript,following-sibling::*,not(name(following-sibling::superscript/children/*[1])="empty" or (name(following-sibling::infixop[@role="implicit"]/children/*[1])="superscript" and name(following-sibling::*/children/*[1]/children/*[1])="empty")) and not(following-sibling::*[@role="rightsuper" or @role="rightsub" or @role="leftsub" or @role="leftsub"])'.split(","),["SpecializedRule","superscript-baseline","default","brief","[n] children/*[1]; [t] CSFsuperscriptBrief; [n] children/*[2];[t] CSFbaselineBrief"],["SpecializedRule","superscript-baseline","brief","sbrief"],'Aliases;superscript-baseline;self::superscript;not(following-sibling::*);ancestor::punctuated;ancestor::*/following-sibling::* and not(ancestor::punctuated[@role="leftsuper" or @role="rightsub" or @role="rightsuper" or @role="rightsub"])'.split(";"),["Aliases","superscript-baseline","self::superscript","not(following-sibling::*)","ancestor::fraction|ancestor::fenced|ancestor::root|ancestor::sqrt"],["Aliases","superscript-baseline","self::superscript","not(following-sibling::*)","ancestor::relseq|ancestor::multirel","not(@embellished)",sre.MathspeakUtil.generateBaselineConstraint()],'Aliases superscript-baseline self::superscript not(following-sibling::*) @embellished not(children/*[2][@role="prime"])'.split(" "),'Rule,superscript-empty-sub,default,[n] children/*[1]; [n] children/*[2],self::superscript,name(children/*[2])="infixop",name(children/*[2][@role="implicit"]/children/*[1])="subscript",name(children/*[2]/children/*[1]/children/*[1])="empty"'.split(","),["SpecializedRule","superscript-empty-sub","default","brief"],["SpecializedRule","superscript-empty-sub","brief","sbrief"],["Aliases","superscript-empty-sub","self::superscript",'name(children/*[2])="subscript"','name(children/*[2]/children/*[1])="empty"'],'Rule,square,default,[n] children/*[1]; [t] "Quadrat",self::superscript,children/*[2],children/*[2][text()=2],name(children/*[1])!="text" or not(name(children/*[1])="text" and (name(../../../punctuated[@role="text"]/..)="stree" or name(..)="stree")),name(children/*[1])!="subscript" or (name(children/*[1])="subscript" and name(children/*[1]/children/*[1])="identifier" and name(children/*[1]/children/*[2])="number" and children/*[1]/children/*[2][@role!="mixed"] and children/*[1]/children/*[2][@role!="othernumber"]),not(@embellished)'.split(","),["SpecializedRule","square","default","brief"],["SpecializedRule","square","default","sbrief"],'Aliases;square;self::superscript;children/*[2];children/*[2][text()=2];@embellished;children/*[1][@role="prefix operator"]'.split(";"),'Rule,cube,default,[n] children/*[1]; [t] "Kubik",self::superscript,children/*[2],children/*[2][text()=3],name(children/*[1])!="text" or not(name(children/*[1])="text" and (name(../../../punctuated[@role="text"]/..)="stree" or name(..)="stree")),name(children/*[1])!="subscript" or (name(children/*[1])="subscript" and name(children/*[1]/children/*[1])="identifier" and name(children/*[1]/children/*[2])="number" and children/*[1]/children/*[2][@role!="mixed"] and children/*[1]/children/*[2][@role!="othernumber"]),not(@embellished)'.split(","),["SpecializedRule","cube","default","brief"],["SpecializedRule","cube","default","sbrief"],'Aliases;cube;self::superscript;children/*[2];children/*[2][text()=3];@embellished;children/*[1][@role="prefix operator"]'.split(";"),'Rule,prime,default,[n] children/*[1]; [n] children/*[2],self::superscript,children/*[2],children/*[2][@role="prime"]'.split(","),["SpecializedRule","prime","default","brief"],["SpecializedRule","prime","default","sbrief"],'Rule,prime-subscript,default,[n] children/*[1]/children/*[1]; [n] children/*[2]; [t] CSFsubscriptVerbose; [n] children/*[1]/children/*[2],self::superscript,children/*[2][@role="prime"],name(children/*[1])="subscript",not(following-sibling::*)'.split(","),["SpecializedRule","prime-subscript","default","brief","[n] children/*[1]/children/*[1]; [n] children/*[2]; [t] CSFsubscriptBrief; [n] children/*[1]/children/*[2]"],["SpecializedRule","prime-subscript","brief","sbrief"],'Rule,prime-subscript-baseline,default,[n] children/*[1]/children/*[1]; [n] children/*[2]; [t] CSFsubscriptVerbose; [n] children/*[1]/children/*[2]; [t] CSFbaselineVerbose,self::superscript,children/*[2][@role="prime"],name(children/*[1])="subscript",following-sibling::*'.split(","),["SpecializedRule","prime-subscript-baseline","default","brief","[n] children/*[1]/children/*[1]; [n] children/*[2]; [t] CSFsubscriptBrief; [n] children/*[1]/children/*[2]; [t] CSFbaselineBrief"],["SpecializedRule","prime-subscript-baseline","brief","sbrief"],'Aliases prime-subscript-baseline self::superscript children/*[2][@role="prime"] name(children/*[1])="subscript" not(following-sibling::*) @embellished'.split(" "),'Rule,prime-subscript-simple,default,[n] children/*[1]/children/*[1]; [n] children/*[2];[n] children/*[1]/children/*[2],self::superscript,children/*[2][@role="prime"],name(children/*[1])="subscript",name(children/*[1]/children/*[1])="identifier",name(children/*[1]/children/*[2])="number",children/*[1]/children/*[2][@role!="mixed"],children/*[1]/children/*[2][@role!="othernumber"]'.split(","),["SpecializedRule","prime-subscript-simple","default","brief"],["SpecializedRule","prime-subscript-simple","default","sbrief"],'Rule,overscore,default,[t] "modifiziert oben"; [n] children/*[1]; [t] "mit"; [n] children/*[2],self::overscore,children/*[2][@role="overaccent"]'.split(","),["SpecializedRule","overscore","default","brief",'[t] "mod oben"; [n] children/*[1]; [t] "mit"; [n] children/*[2]'],["SpecializedRule","overscore","brief","sbrief"],'Rule,double-overscore,default,[t] "modifiziert oben oben"; [n] children/*[1]; [t] "mit"; [n] children/*[2],self::overscore,children/*[2][@role="overaccent"],name(children/*[1])="overscore",children/*[1]/children/*[2][@role="overaccent"]'.split(","),["SpecializedRule","double-overscore","default","brief",'[t] "mod oben oben"; [n] children/*[1]; [t] "mit"; [n] children/*[2]'],["SpecializedRule","double-overscore","brief","sbrief"],'Rule,underscore,default,[t] "modifiziert unten"; [n] children/*[1]; [t] "mit"; [n] children/*[2],self::underscore,children/*[2][@role="underaccent"]'.split(","),["SpecializedRule","underscore","default","brief",'[t] "mod unten"; [n] children/*[1]; [t] "mit"; [n] children/*[2]'],["SpecializedRule","underscore","brief","sbrief"],'Rule,double-underscore,default,[t] "modifiziert unten unten"; [n] children/*[1]; [t] "mit"; [n] children/*[2],self::underscore,children/*[2][@role="underaccent"],name(children/*[1])="underscore",children/*[1]/children/*[2][@role="underaccent"]'.split(","),["SpecializedRule","double-underscore","default","brief",'[t] "mod unten unten"; [n] children/*[1]; [t] "mit"; [n] children/*[2]'],["SpecializedRule","double-underscore","brief","sbrief"],'Rule,overbar,default,[n] children/*[1]; [t] "Überstrich",self::overscore,@role="latinletter" or @role="greekletter" or @role="otherletter",children/*[2][@role="overaccent"],children/*[2][text()="¯" or text()="￣" or text()="＿" or text()="_" or text()="‾"]'.split(","),'Rule,underbar,default,[n] children/*[1]; [t] "Unterstrich",self::underscore,@role="latinletter" or @role="greekletter" or @role="otherletter",children/*[2][@role="underaccent"],children/*[2][text()="¯" or text()="￣" or text()="＿" or text()="_" or text()="‾"]'.split(","),'Rule,overtilde,default,[n] children/*[1]; [t] "Tilde oben",self::overscore,children/*[2][@role="overaccent"],@role="latinletter" or @role="greekletter" or @role="otherletter",children/*[2][text()="~" or text()="˜" or text()="∼" or text()="～"]'.split(","),'Rule,undertilde,default,[n] children/*[1]; [t] "Tilde unten",self::underscore,@role="latinletter" or @role="greekletter" or @role="otherletter",children/*[2][@role="underaccent"],children/*[2][text()="~" or text()="˜" or text()="∼" or text()="～"]'.split(","),'Rule,matrix-fence,default,[n] children/*[1];,self::fenced,count(children/*)=1,name(children/*[1])="matrix"'.split(","),["Rule","matrix","default",'[t] "Anfang"; [t] count(children/*);  [t] "mal";[t] count(children/*[1]/children/*); [t] "Matrize"; [m] children/* (ctxtFunc:CTXFordinalCounter,context:"Zeile "); [t] "Ende Matrize"',"self::matrix"],["Rule","matrix","sbrief",'[t] count(children/*);  [t] "mal";[t] count(children/*[1]/children/*); [t] "Matrize"; [m] children/* (ctxtFunc:CTXFordinalCounter,context:"Zeile "); [t] "Ende Matrize"',"self::matrix"],["Aliases","matrix","self::vector"],["Rule","matrix-row","default",'[m] children/* (ctxtFunc:CTXFordinalCounter,context:"Spalte");[p] (pause: 200)',"self::row"],'Rule{row-with-label{default{[t] "mit Bezeichner"; [n] content/*[1]; [t] "Ende Bezeichner"(pause: 200); [m] children/* (ctxtFunc:CTXFordinalCounter,context:"Spalte"){self::row{content'.split("{"),'Rule{row-with-label{brief{[t] "Bezeichner"; [n] content/*[1]; [m] children/* (ctxtFunc:CTXFordinalCounter,context:"Spalte"){self::row{content'.split("{"),["SpecializedRule","row-with-label","brief","sbrief"],'Rule{row-with-text-label{sbrief{[t] "Bezeichner"; [t] CSFRemoveParens;[m] children/* (ctxtFunc:CTXFordinalCounter,context:"Spalte"){self::row{content{name(content/cell/children/*[1])="text"'.split("{"),'Rule;empty-row;default;[t] "Blank";self::row;count(children/*)=0'.split(";"),["Rule","matrix-cell","default","[n] children/*[1]; [p] (pause: 300)","self::cell"],'Rule,empty-cell,default,[t] "leer"; [p] (pause: 300),self::cell,count(children/*)=0'.split(","),'Rule{determinant{default{[t] "Anfang"; [t] count(children/*);  [t] "mal";[t] count(children/*[1]/children/*); [t] "Determinante"; [m] children/* (ctxtFunc:CTXFordinalCounter,context:"Zeile "); [t] "Ende Determinante"{self::matrix{@role="determinant"'.split("{"),["SpecializedRule","determinant","default","sbrief",'[t] count(children/*);  [t] "mal";[t] count(children/*[1]/children/*); [t] "Determinante"; [m] children/* (ctxtFunc:CTXFordinalCounter,context:"Zeile "); [t] "Ende Determinante"'],'Rule{determinant-simple{default{[t] "Anfang"; [t] count(children/*);  [t] "mal";[t] count(children/*[1]/children/*); [t] "Determinante"; [m] children/* (ctxtFunc:CTXFordinalCounter,context:"Zeile",grammar:simpleDet); [t] "Ende Determinante"{self::matrix{@role="determinant"{CQFdetIsSimple'.split("{"),["SpecializedRule","determinant-simple","default","sbrief",'[t] count(children/*);  [t] "mal";[t] count(children/*[1]/children/*); [t] "Determinante"; [m] children/* (ctxtFunc:CTXFordinalCounter,context:"Zeile",grammar:simpleDet); [t] "Ende Determinante"'],'Rule{row-simple{default{[m] children/*;{self::row{@role="determinant"{contains(@grammar, "simpleDet")'.split("{"),["Rule","layout","default",'[t] "Anfang Anordnung"; [m] children/* (ctxtFunc:CTXFordinalCounter,context:"Zeile "); [t] "Ende Anordnung"',"self::table"],["Rule","layout","sbrief",'[t] "Anordnung"; [m] children/* (ctxtFunc:CTXFordinalCounter,context:"Zeile "); [t] "Ende Anordnung"',"self::table"],'Rule,binomial,default,[t] "Anfang Binomialkoeffizient"; [n] children/*[2]/children/*[1]; [t] "aus";  [n] children/*[1]/children/*[1]; [t] "Ende Binomialkoeffizient",self::vector,@role="binomial"'.split(","),'Rule,binomial,brief,[t] "Anfang Binomial"; [n] children/*[2]/children/*[1]; [t] "aus";  [n] children/*[1]/children/*[1]; [t] "Ende Binomial",self::vector,@role="binomial"'.split(","),'Rule,binomial,sbrief,[t] "Binomial"; [n] children/*[2]/children/*[1]; [t] "aus";  [n] children/*[1]/children/*[1]; [t] "Ende Binomial",self::vector,@role="binomial"'.split(","),["Rule","cases","default",'[t] "Anfang Fallunterscheidung"; [t] "große"; [n] content/*[1];[m] children/* (ctxtFunc:CTXFordinalCounter,context:"Zeile "); [t] "Ende Fallunterscheidung"',"self::cases"],["Rule","cases","brief",'[t] "Anfang Fälle"; [t] "große"; [n] content/*[1];[m] children/* (ctxtFunc:CTXFordinalCounter,context:"Zeile "); [t] "Ende Fälle"',"self::cases"],["Rule","cases","sbrief",'[t] "Fälle"; [t] "große"; [n] content/*[1];[m] children/* (ctxtFunc:CTXFordinalCounter,context:"Zeile "); [t] "Ende Fälle"',"self::cases"],["Aliases","layout","self::multiline"],["Rule","line","default","[m] children/*","self::line"],'Rule,line-with-label,default,[t] "mit Bezeichner"; [n] content/*[1]; [t] "Ende Bezeichner" (pause: 200); [m] children/*,self::line,content'.split(","),["SpecializedRule","line-with-label","default","brief",'[t] "Bezeichner"; [n] content/*[1] (pause: 200); [m] children/*'],["SpecializedRule","line-with-label","brief","sbrief"],'Rule,line-with-text-label,sbrief,[t] "Bezeichner"; [t] CSFRemoveParens; [m] children/*,self::line,content,name(content/cell/children/*[1])="text"'.split(","),'Rule;empty-line;default;[t] "leer";self::line;count(children/*)=0;not(content)'.split(";"),["SpecializedRule","empty-line","default","brief"],["SpecializedRule","empty-line","brief","sbrief"],'Rule,empty-line-with-label,default,[t] "mit Bezeichner"; [n] content/*[1]; [t] "Ende Bezeichner"(pause: 200); [t] "leer",self::line,count(children/*)=0,content'.split(","),["SpecializedRule","empty-line-with-label","default","brief",'[t] "Bezeichner"; [n] content/*[1] (pause: 200); [t] "leer"'],["SpecializedRule","empty-line-with-label","brief","sbrief"],["Rule","enclose","default",'[t] "Anfang Umschließung"; [t] @role (grammar:localEnclose); [n] children/*[1]; [t] "Ende Umschließung"',"self::enclose"],["Aliases","overbar","self::enclose",'@role="top"'],["Aliases","underbar","self::enclose",'@role="bottom"'],'Rule,leftbar,default,[t] "senkrechter Strich"; [n] children/*[1],self::enclose,@role="left"'.split(","),'Rule,rightbar,default,[n] children/*[1]; [t] "senkrechter Strich",self::enclose,@role="right"'.split(","),'Rule,crossout,default,[t] "durchgestrichen"; [n] children/*[1]; [t] "Ende duchgestrichen",self::enclose,@role="updiagonalstrike" or @role="downdiagonalstrike" or @role="horizontalstrike"'.split(","),'Rule,cancel,default,[t] "durchgestrichen"; [n] children/*[1]/children/*[1]; [t] "mit"; [n] children/*[2]; [t] "Ende duchgestrichen",self::overscore,@role="updiagonalstrike" or @role="downdiagonalstrike" or @role="horizontalstrike"'.split(","),["SpecializedRule","cancel","default","brief"],["SpecializedRule","cancel","default","sbrief"],["Aliases","cancel","self::underscore",'@role="updiagonalstrike" or @role="downdiagonalstrike" or @role="horizontalstrike"'],'Rule,cancel-reverse,default,[t] "durchgestrichen"; [n] children/*[2]/children/*[1]; [t] "mit"; [n] children/*[1]; [t] "Ende duchgestrichen",self::overscore,name(children/*[2])="enclose",children/*[2][@role="updiagonalstrike" or @role="downdiagonalstrike" or @role="horizontalstrike"]'.split(","),["SpecializedRule","cancel-reverse","default","brief"],["SpecializedRule","cancel-reverse","default","sbrief"],["Aliases","cancel-reverse","self::underscore",'name(children/*[2])="enclose"','children/*[2][@role="updiagonalstrike" or @role="downdiagonalstrike" or @role="horizontalstrike"]'],'Rule;end-punct;default;[m] children/*;self::punctuated;@role="endpunct"'.split(";"),'Rule,start-punct,default,[n] content/*[1]; [m] children/*[position()>1],self::punctuated,@role="startpunct"'.split(","),'Rule,integral-punct,default,[n] children/*[1]; [n] children/*[3],self::punctuated,@role="integral"'.split(","),["Rule","punctuated","default","[m] children/*","self::punctuated"],'Rule;unit;default;[t] text() (grammar:annotation="unit":translate:plural);self::identifier;@role="unit"'.split(";"),'Rule,unit-square,default,[t] "Quadrat"; [n] children/*[1],self::superscript,@role="unit",children/*[2][text()=2],name(children/*[1])="identifier"'.split(","),'Rule,unit-cubic,default,[t] "Kubik"; [n] children/*[1],self::superscript,@role="unit",children/*[2][text()=3],name(children/*[1])="identifier"'.split(","),'Rule,reciprocal,default,[n] children/*[1]; [t] "invers",self::superscript,@role="unit",name(children/*[1])="identifier",name(children/*[2])="prefixop",children/*[2][@role="negative"],children/*[2]/children/*[1][text()=1],count(preceding-sibling::*)=0 or preceding-sibling::*[@role!="unit"]'.split(","),'Rule,reciprocal,default,[t] "pro"; [n] children/*[1],self::superscript,@role="unit",name(children/*[1])="identifier",name(children/*[2])="prefixop",children/*[2][@role="negative"],children/*[2]/children/*[1][text()=1],preceding-sibling::*[@role="unit"]'.split(","),'Rule;unit-combine;default;[m] children/*;self::infixop;@role="unit"'.split(";"),'Rule,unit-divide,default,[n] children/*[1]; [t] "pro"; [n] children/*[2],self::fraction,@role="unit"'.split(","),["Rule","inference","default",'[t] "Schlussregel"; [m] content/*; [t] "mit Folgerung"; [n] children/*[1]; [t] "aus"; [t] count(children/*[2]/children/*); [t] "Prämissen"',"self::inference"],'Rule,inference,default,[t] "Schlussregel"; ; [m] content/*; [t] "mit Folgerung"; [n] children/*[1]; [t] "aus"; [t] count(children/*[2]/children/*); [t] "Prämisse",self::inference,count(children/*[2]/children/*)<2'.split(","),["Rule","premise","default",'[m] children/* (ctxtFunc:CTXFordinalCounter,context:"Prämisse ");',"self::premises"],["Rule","conclusion","default","[n] children/*[1]","self::conclusion"],["Rule","label","default",'[t] "Regel"; [n] children/*[1]',"self::rulelabel"],'Rule,axiom,default,[t] "Axiom"; [m] children/*[1];,self::inference,@role="axiom"'.split(","),'Rule,axiom,default,[t] "leeres Axiom";,self::empty,@role="axiom"'.split(",")],initialize:[sre.MathspeakUtil.generateTensorRules]},sre.MathspeakRules={domain:"mathspeak",functions:[["CQF","CQFspaceoutNumber",sre.MathspeakUtil.spaceoutNumber],["CQF","CQFspaceoutIdentifier",sre.MathspeakUtil.spaceoutIdentifier],["CSF","CSFspaceoutText",sre.MathspeakUtil.spaceoutText],["CSF","CSFopenFracVerbose",sre.MathspeakUtil.openingFractionVerbose],["CSF","CSFcloseFracVerbose",sre.MathspeakUtil.closingFractionVerbose],["CSF","CSFoverFracVerbose",sre.MathspeakUtil.overFractionVerbose],["CSF","CSFopenFracBrief",sre.MathspeakUtil.openingFractionBrief],["CSF","CSFcloseFracBrief",sre.MathspeakUtil.closingFractionBrief],["CSF","CSFopenFracSbrief",sre.MathspeakUtil.openingFractionSbrief],["CSF","CSFcloseFracSbrief",sre.MathspeakUtil.closingFractionSbrief],["CSF","CSFoverFracSbrief",sre.MathspeakUtil.overFractionSbrief],["CSF","CSFvulgarFraction",sre.NumbersUtil.vulgarFraction],["CQF","CQFvulgarFractionSmall",sre.MathspeakUtil.isSmallVulgarFraction],["CSF","CSFopenRadicalVerbose",sre.MathspeakUtil.openingRadicalVerbose],["CSF","CSFcloseRadicalVerbose",sre.MathspeakUtil.closingRadicalVerbose],["CSF","CSFindexRadicalVerbose",sre.MathspeakUtil.indexRadicalVerbose],["CSF","CSFopenRadicalBrief",sre.MathspeakUtil.openingRadicalBrief],["CSF","CSFcloseRadicalBrief",sre.MathspeakUtil.closingRadicalBrief],["CSF","CSFindexRadicalBrief",sre.MathspeakUtil.indexRadicalBrief],["CSF","CSFopenRadicalSbrief",sre.MathspeakUtil.openingRadicalSbrief],["CSF","CSFindexRadicalSbrief",sre.MathspeakUtil.indexRadicalSbrief],["CSF","CSFsuperscriptVerbose",sre.MathspeakUtil.superscriptVerbose],["CSF","CSFsuperscriptBrief",sre.MathspeakUtil.superscriptBrief],["CSF","CSFsubscriptVerbose",sre.MathspeakUtil.subscriptVerbose],["CSF","CSFsubscriptBrief",sre.MathspeakUtil.subscriptBrief],["CSF","CSFbaselineVerbose",sre.MathspeakUtil.baselineVerbose],["CSF","CSFbaselineBrief",sre.MathspeakUtil.baselineBrief],["CSF","CSFleftsuperscriptVerbose",sre.MathspeakUtil.superscriptVerbose],["CSF","CSFleftsubscriptVerbose",sre.MathspeakUtil.subscriptVerbose],["CSF","CSFrightsuperscriptVerbose",sre.MathspeakUtil.superscriptVerbose],["CSF","CSFrightsubscriptVerbose",sre.MathspeakUtil.subscriptVerbose],["CSF","CSFleftsuperscriptBrief",sre.MathspeakUtil.superscriptBrief],["CSF","CSFleftsubscriptBrief",sre.MathspeakUtil.subscriptBrief],["CSF","CSFrightsuperscriptBrief",sre.MathspeakUtil.superscriptBrief],["CSF","CSFrightsubscriptBrief",sre.MathspeakUtil.subscriptBrief],["CSF","CSFunderscript",sre.MathspeakUtil.nestedUnderscore],["CSF","CSFoverscript",sre.MathspeakUtil.nestedOverscore],["CTXF","CTXFordinalCounter",sre.NumbersUtil.ordinalCounter],["CTXF","CTXFcontentIterator",sre.StoreUtil.contentIterator],["CQF","CQFdetIsSimple",sre.MathspeakUtil.determinantIsSimple],["CSF","CSFRemoveParens",sre.MathspeakUtil.removeParens],["CQF","CQFresetNesting",sre.MathspeakUtil.resetNestingDepth]],rules:['Rule{collapsed{default{[t] "collapsed"; [n] . (engine:modality=summary,grammar:collapsed){self::*[@alternative]{not(contains(@grammar, "collapsed"))'.split("{"),["SpecializedRule","collapsed","default","brief"],["SpecializedRule","collapsed","brief","sbrief"],["Rule","direct-speech","default","[t] @ext-speech","self::*[@ext-speech]"],"Rule;stree;default;[n] ./*[1];self::stree;CQFresetNesting".split(";"),["Rule","unknown","default","[n] text()","self::unknown"],'Rule;protected;default;[t] text();self::number;contains(@grammar, "protected")'.split(";"),["Rule","omit-empty","default","[p] (pause:100)","self::empty"],'Rule;blank-empty;default;[t] "Blank";self::empty;count(../*)=1;name(../..)="cell" or name(../..)="line"'.split(";"),'Rule{font{default{[t] @font (grammar:localFont); [n] . (grammar:ignoreFont=@font){self::*{@font{not(contains(@grammar, "ignoreFont")){@font!="normal"'.split("{"),'Rule{font-identifier-short{default{[t] @font (grammar:localFont); [n] . (grammar:ignoreFont=@font){self::identifier{string-length(text())=1{@font{not(contains(@grammar, "ignoreFont")){@font="normal"{""=translate(text(), "abcdefghijklmnopqrstuvwxyzαβγδεζηθικλμνξοπρςστυφχψωABCDEFGHIJKLMNOPQRSTUVWXYZΑΒΓΔΕΖΗΘΙΚΛΜΝΞΟΠΡΣΣΤΥΦΧΨΩ", ""){@role!="unit"'.split("{"),'Rule{font-identifier{default{[t] @font (grammar:localFont); [n] . (grammar:ignoreFont=@font){self::identifier{string-length(text())=1{@font{@font="normal"{not(contains(@grammar, "ignoreFont")){@role!="unit"'.split("{"),'Rule;omit-font;default;[n] . (grammar:ignoreFont=@font);self::identifier;string-length(text())=1;@font;not(contains(@grammar, "ignoreFont"));@font="italic"'.split(";"),'Rule{german-font{default{[t] "German"; [n] . (grammar:ignoreFont=@font){self::*{@font{not(contains(@grammar, "ignoreFont")){@font="fraktur"'.split("{"),'Rule{german-font{default{[t] "bold German"; [n] . (grammar:ignoreFont=@font){self::*{@font{not(contains(@grammar, "ignoreFont")){@font="bold-fraktur"'.split("{"),["Rule","number","default","[n] text()","self::number"],'Rule,mixed-number,default,[n] children/*[1]; [t] "and"; [n] children/*[2]; ,self::number,@role="mixed"'.split(","),'Rule{number-with-chars{default{[t] "Number"; [m] CQFspaceoutNumber (grammar:protected){self::number{@role="othernumber"{"" != translate(text(), "0123456789.,", ""){not(contains(@grammar, "protected"))'.split("{"),["SpecializedRule","number-with-chars","default","brief",'[t] "Num"; [m] CQFspaceoutNumber (grammar:protected)'],["SpecializedRule","number-with-chars","brief","sbrief"],'Rule{number-as-upper-word{default{[t] "UpperWord"; [t] CSFspaceoutText{self::number{string-length(text())>1{text()=translate(text(), "abcdefghijklmnopqrstuvwxyzαβγδεζηθικλμνξοπρςστυφχψω", "ABCDEFGHIJKLMNOPQRSTUVWXYZΑΒΓΔΕΖΗΘΙΚΛΜΝΞΟΠΡΣΣΤΥΦΧΨΩ"){""=translate(text(), "ABCDEFGHIJKLMNOPQRSTUVWXYZΑΒΓΔΕΖΗΘΙΚΛΜΝΞΟΠΡΣΣΤΥΦΧΨΩ","")'.split("{"),["SpecializedRule","number-as-upper-word","default","brief"],["SpecializedRule","number-as-upper-word","default","sbrief"],'Rule{number-baseline{default{[t] "Baseline"; [n] . (grammar:baseline){self::number{not(contains(@grammar, "ignoreFont")){preceding-sibling::identifier{not(contains(@grammar, "baseline")){preceding-sibling::*[1][@role="latinletter" or @role="greekletter" or @role="otherletter"]{parent::*/parent::infixop[@role="implicit"]'.split("{"),["SpecializedRule","number-baseline","default","brief",'[t] "Base"; [n] . (grammar:baseline)'],["SpecializedRule","number-baseline","brief","sbrief"],'Rule{number-baseline-font{default{[t] "Baseline"; [t] @font; [n] . (grammar:ignoreFont=@font){self::number{@font{not(contains(@grammar, "ignoreFont")){@font!="normal"{preceding-sibling::identifier{preceding-sibling::*[@role="latinletter" or @role="greekletter" or @role="otherletter"]{parent::*/parent::infixop[@role="implicit"]'.split("{"),["SpecializedRule","number-baseline-font","default","brief",'[t] "Base"; [t] @font; [n] . (grammar:ignoreFont=@font)'],["SpecializedRule","number-baseline-font","brief","sbrief"],'Rule;identifier;default;[m] CQFspaceoutIdentifier;self::identifier;string-length(text())>1;@role!="unit";not(@font) or @font="normal" or contains(@grammar, "ignoreFont");text()!=translate(text(), "abcdefghijklmnopqrstuvwxyzαβγδεζηθικλμνξοπρςστυφχψωABCDEFGHIJKLMNOPQRSTUVWXYZΑΒΓΔΕΖΗΘΙΚΛΜΝΞΟΠΡΣΣΤΥΦΧΨΩ", "")'.split(";"),["Rule","identifier","default","[n] text()","self::identifier"],'Rule,negative,default,[t] "negative"; [n] children/*[1],self::prefixop,@role="negative",children/identifier'.split(","),["Aliases","negative","self::prefixop",'@role="negative"',"children/number"],["Aliases","negative","self::prefixop",'@role="negative"','children/fraction[@role="vulgar"]'],'Rule,negative,default,[t] "minus"; [n] children/*[1],self::prefixop,@role="negative"'.split(","),["Rule","prefix","default","[m] content/*; [n] children/*[1]","self::prefixop"],["Rule","postfix","default","[n] children/*[1]; [m] content/*","self::postfixop"],["Rule","binary-operation","default","[m] children/* (sepFunc:CTXFcontentIterator);","self::infixop"],'Rule;implicit;default;[m] children/*;self::infixop;@role="implicit"'.split(";"),["Aliases","implicit","self::infixop",'@role="leftsuper" or @role="leftsub" or @role="rightsuper" or @role="rightsub"'],'Rule,subtraction,default,[m] children/* (separator:"minus");,self::infixop,@role="subtraction"'.split(","),["Rule","function-unknown","default","[n] children/*[1]; [n] children/*[2]","self::appl"],'Rule,function-prefix,default,[n] children/*[1]; [n] children/*[2],self::appl,children/*[1][@role="prefix function"]'.split(","),'Rule,fences-open-close,default,[n] content/*[1]; [n] children/*[1]; [n] content/*[2],self::fenced,@role="leftright"'.split(","),'Rule,fences-neutral,default,[t] "StartAbsoluteValue"; [n] children/*[1]; [t] "EndAbsoluteValue",self::fenced,@role="neutral",content/*[1][text()]="|" or content/*[1][text()]="❘" or content/*[1][text()]="｜"'.split(","),["SpecializedRule","fences-neutral","default","sbrief",'[t] "AbsoluteValue"; [n] children/*[1]; [t] "EndAbsoluteValue"'],'Rule,fences-neutral,default,[n] content/*[1]; [n] children/*[1]; [n] content/*[2],self::fenced,@role="neutral"'.split(","),'Rule,fences-set,default,[t] "StartSet"; [n] children/*[1]; [t] "EndSet",self::fenced,@role="set empty" or @role="set extended" or @role="set singleton" or @role="set collection",not(name(../..)="appl")'.split(","),["SpecializedRule","fences-set","default","sbrief",'[t] "Set"; [n] children/*[1]; [t] "EndSet"'],["Rule","text","default","[n] text()","self::text"],'Rule;factorial;default;[t] "factorial";self::punctuation;text()="!";name(preceding-sibling::*[1])!="text"'.split(";"),'Rule;minus;default;[t] "minus";self::operator;text()="-"'.split(";"),'Rule;single-prime;default;[t] "prime";self::punctuated;@role="prime";count(children/*)=1'.split(";"),'Rule;double-prime;default;[t] "double prime";self::punctuated;@role="prime";count(children/*)=2'.split(";"),'Rule;triple-prime;default;[t] "triple prime";self::punctuated;@role="prime";count(children/*)=3'.split(";"),'Rule;quadruple-prime;default;[t] "quadruple prime";self::punctuated;@role="prime";count(children/*)=4'.split(";"),'Rule,counted-prime,default,[t] count(children/*); [t] "prime",self::punctuated,@role="prime"'.split(","),["Rule","fraction","default","[t] CSFopenFracVerbose; [n] children/*[1]; [t] CSFoverFracVerbose; [n] children/*[2]; [t] CSFcloseFracVerbose","self::fraction"],["Rule","fraction","brief","[t] CSFopenFracBrief; [n] children/*[1]; [t] CSFoverFracVerbose; [n] children/*[2]; [t] CSFcloseFracBrief","self::fraction"],["Rule","fraction","sbrief","[t] CSFopenFracSbrief; [n] children/*[1]; [t] CSFoverFracSbrief; [n] children/*[2]; [t] CSFcloseFracSbrief","self::fraction"],'Rule;vulgar-fraction;default;[t] CSFvulgarFraction;self::fraction;@role="vulgar";CQFvulgarFractionSmall'.split(";"),["SpecializedRule","vulgar-fraction","default","brief"],["SpecializedRule","vulgar-fraction","default","sbrief"],'Rule,continued-fraction-outer,default,[t] "ContinuedFraction"; [n] children/*[1];[t] "Over"; [n] children/*[2],self::fraction,not(ancestor::fraction),children/*[2]/descendant-or-self::*[@role="ellipsis" and not(following-sibling::*)]'.split(","),["SpecializedRule","continued-fraction-outer","default","brief",'[t] "ContinuedFrac"; [n] children/*[1];[t] "Over"; [n] children/*[2]'],["SpecializedRule","continued-fraction-outer","brief","sbrief"],'Rule,continued-fraction-inner,default,[t] "StartFraction"; [n] children/*[1];[t] "Over"; [n] children/*[2],self::fraction,ancestor::fraction,children/*[2]/descendant-or-self::*[@role="ellipsis" and not(following-sibling::*)]'.split(","),["SpecializedRule","continued-fraction-inner","default","brief",'[t] "StartFrac"; [n] children/*[1];[t] "Over"; [n] children/*[2]'],["SpecializedRule","continued-fraction-inner","brief","sbrief",'[t] "Frac"; [n] children/*[1];[t] "Over"; [n] children/*[2]'],["Rule","sqrt","default","[t] CSFopenRadicalVerbose; [n] children/*[1]; [t] CSFcloseRadicalVerbose","self::sqrt"],["Rule","sqrt","brief","[t] CSFopenRadicalBrief; [n] children/*[1]; [t] CSFcloseRadicalBrief","self::sqrt"],["Rule","sqrt","sbrief","[t] CSFopenRadicalSbrief; [n] children/*[1]; [t] CSFcloseRadicalBrief","self::sqrt"],["Rule","root","default","[t] CSFindexRadicalVerbose; [n] children/*[1];[t] CSFopenRadicalVerbose; [n] children/*[2]; [t] CSFcloseRadicalVerbose","self::root"],["Rule","root","brief","[t] CSFindexRadicalBrief; [n] children/*[1];[t] CSFopenRadicalBrief; [n] children/*[2]; [t] CSFcloseRadicalBrief","self::root"],["Rule","root","sbrief","[t] CSFindexRadicalSbrief; [n] children/*[1];[t] CSFopenRadicalSbrief; [n] children/*[2]; [t] CSFcloseRadicalBrief","self::root"],'Rule,limboth,default,[n] children/*[1]; [t] CSFunderscript; [n] children/*[2];[t] CSFoverscript; [n] children/*[3],self::limboth,name(../..)="underscore" or name(../..)="overscore",following-sibling::*[@role!="underaccent" and @role!="overaccent"]'.split(","),'Rule,limlower,default,[n] children/*[1]; [t] CSFunderscript; [n] children/*[2];,self::limlower,name(../..)="underscore" or name(../..)="overscore",following-sibling::*[@role!="underaccent" and @role!="overaccent"]'.split(","),'Rule,limupper,default,[n] children/*[1]; [t] CSFoverscript; [n] children/*[2];,self::limupper,name(../..)="underscore" or name(../..)="overscore",following-sibling::*[@role!="underaccent" and @role!="overaccent"]'.split(","),'Aliases;limlower;self::underscore;@role="limit function";name(../..)="underscore" or name(../..)="overscore";following-sibling::*[@role!="underaccent" and @role!="overaccent"]'.split(";"),'Aliases;limlower;self::underscore;children/*[2][@role!="underaccent"];name(../..)="underscore" or name(../..)="overscore";following-sibling::*[@role!="underaccent" and @role!="overaccent"]'.split(";"),'Aliases;limupper;self::overscore;children/*[2][@role!="overaccent"];name(../..)="underscore" or name(../..)="overscore";following-sibling::*[@role!="underaccent" and @role!="overaccent"]'.split(";"),["Rule","limboth-end","default",'[n] children/*[1]; [t] CSFunderscript; [n] children/*[2];[t] CSFoverscript; [n] children/*[3]; [t] "Endscripts"',"self::limboth"],["Rule","limlower-end","default",'[n] children/*[1]; [t] CSFunderscript; [n] children/*[2]; [t] "Endscripts"',"self::limlower"],["Rule","limupper-end","default",'[n] children/*[1]; [t] CSFoverscript; [n] children/*[2]; [t] "Endscripts"',"self::limupper"],["Aliases","limlower-end","self::underscore",'@role="limit function"'],["Aliases","limlower-end","self::underscore"],["Aliases","limupper-end","self::overscore"],["Rule","integral","default","[n] children/*[1]; [n] children/*[2]; [n] children/*[3];","self::integral"],'Rule,integral,default,[n] children/*[1]; [t] "Subscript"; [n] children/*[2];[t] "Superscript"; [n] children/*[3]; [t] "Baseline";,self::limboth,@role="integral"'.split(","),["SpecializedRule","integral","default","brief",'[n] children/*[1]; [t] "Sub"; [n] children/*[2];[t] "Sup"; [n] children/*[3]; [t] "Base";'],["SpecializedRule","integral","brief","sbrief"],["Rule","bigop","default","[n] children/*[1]; [n] children/*[2];","self::bigop"],["Rule","relseq","default","[m] children/* (sepFunc:CTXFcontentIterator)","self::relseq"],'Rule,equality,default,[n] children/*[1]; [n] content/*[1]; [n] children/*[2],self::relseq,@role="equality",count(./children/*)=2'.split(","),'Rule;multi-equality;default;[m] children/* (sepFunc:CTXFcontentIterator);self::relseq;@role="equality";count(./children/*)>2'.split(";"),["Rule","multrel","default","[m] children/* (sepFunc:CTXFcontentIterator)","self::multirel"],["Rule","subscript","default","[n] children/*[1]; [t] CSFsubscriptVerbose; [n] children/*[2]","self::subscript"],["Rule","subscript","brief","[n] children/*[1]; [t] CSFsubscriptBrief; [n] children/*[2]","self::subscript"],["SpecializedRule","subscript","brief","sbrief"],'Rule,subscript-simple,default,[n] children/*[1]; [n] children/*[2],self::subscript,name(./children/*[1])="identifier",name(./children/*[2])="number",./children/*[2][@role!="mixed"],./children/*[2][@role!="othernumber"]'.split(","),["SpecializedRule","subscript-simple","default","brief"],["SpecializedRule","subscript-simple","default","sbrief"],'Rule,subscript-baseline,default,[n] children/*[1]; [t] CSFsubscriptVerbose; [n] children/*[2]; [t] CSFbaselineVerbose,self::subscript,following-sibling::*,not(name(following-sibling::subscript/children/*[1])="empty" or (name(following-sibling::infixop[@role="implicit"]/children/*[1])="subscript" and name(following-sibling::*/children/*[1]/children/*[1])="empty")) and @role!="subsup",not(following-sibling::*[@role="rightsuper" or @role="rightsub" or @role="leftsub" or @role="leftsub"])'.split(","),["SpecializedRule","subscript-baseline","default","brief","[n] children/*[1]; [t] CSFsubscriptBrief; [n] children/*[2]; [t] CSFbaselineBrief"],["SpecializedRule","subscript-baseline","brief","sbrief"],'Aliases;subscript-baseline;self::subscript;not(following-sibling::*);ancestor::fenced|ancestor::root|ancestor::sqrt|ancestor::punctuated|ancestor::fraction;not(ancestor::punctuated[@role="leftsuper" or @role="rightsub" or @role="rightsuper" or @role="rightsub"])'.split(";"),["Aliases","subscript-baseline","self::subscript","not(following-sibling::*)","ancestor::relseq|ancestor::multirel",sre.MathspeakUtil.generateBaselineConstraint()],["Aliases","subscript-baseline","self::subscript","not(following-sibling::*)","@embellished"],'Rule,subscript-empty-sup,default,[n] children/*[1]; [n] children/*[2],self::subscript,name(children/*[2])="infixop",name(children/*[2][@role="implicit"]/children/*[1])="superscript",name(children/*[2]/children/*[1]/children/*[1])="empty"'.split(","),["SpecializedRule","subscript-empty-sup","default","brief"],["SpecializedRule","subscript-empty-sup","brief","sbrief"],["Aliases","subscript-empty-sup","self::subscript",'name(children/*[2])="superscript"','name(children/*[2]/children/*[1])="empty"'],["Rule","superscript","default","[n] children/*[1]; [t] CSFsuperscriptVerbose; [n] children/*[2]","self::superscript"],["SpecializedRule","superscript","default","brief","[n] children/*[1]; [t] CSFsuperscriptBrief; [n] children/*[2]"],["SpecializedRule","superscript","brief","sbrief"],'Rule,superscript-baseline,default,[n] children/*[1]; [t] CSFsuperscriptVerbose; [n] children/*[2];[t] CSFbaselineVerbose,self::superscript,following-sibling::*,not(name(following-sibling::superscript/children/*[1])="empty" or (name(following-sibling::infixop[@role="implicit"]/children/*[1])="superscript" and name(following-sibling::*/children/*[1]/children/*[1])="empty")) and not(following-sibling::*[@role="rightsuper" or @role="rightsub" or @role="leftsub" or @role="leftsub"])'.split(","),["SpecializedRule","superscript-baseline","default","brief","[n] children/*[1]; [t] CSFsuperscriptBrief; [n] children/*[2];[t] CSFbaselineBrief"],["SpecializedRule","superscript-baseline","brief","sbrief"],'Aliases;superscript-baseline;self::superscript;not(following-sibling::*);ancestor::punctuated;ancestor::*/following-sibling::* and not(ancestor::punctuated[@role="leftsuper" or @role="rightsub" or @role="rightsuper" or @role="rightsub"])'.split(";"),["Aliases","superscript-baseline","self::superscript","not(following-sibling::*)","ancestor::fraction|ancestor::fenced|ancestor::root|ancestor::sqrt"],["Aliases","superscript-baseline","self::superscript","not(following-sibling::*)","ancestor::relseq|ancestor::multirel","not(@embellished)",sre.MathspeakUtil.generateBaselineConstraint()],'Aliases superscript-baseline self::superscript not(following-sibling::*) @embellished not(children/*[2][@role="prime"])'.split(" "),'Rule,superscript-empty-sub,default,[n] children/*[1]; [n] children/*[2],self::superscript,name(children/*[2])="infixop",name(children/*[2][@role="implicit"]/children/*[1])="subscript",name(children/*[2]/children/*[1]/children/*[1])="empty"'.split(","),["SpecializedRule","superscript-empty-sub","default","brief"],["SpecializedRule","superscript-empty-sub","brief","sbrief"],["Aliases","superscript-empty-sub","self::superscript",'name(children/*[2])="subscript"','name(children/*[2]/children/*[1])="empty"'],'Rule,square,default,[n] children/*[1]; [t] "squared",self::superscript,children/*[2],children/*[2][text()=2],name(children/*[1])!="text" or not(name(children/*[1])="text" and (name(../../../punctuated[@role="text"]/..)="stree" or name(..)="stree")),name(children/*[1])!="subscript" or (name(children/*[1])="subscript" and name(children/*[1]/children/*[1])="identifier" and name(children/*[1]/children/*[2])="number" and children/*[1]/children/*[2][@role!="mixed"] and children/*[1]/children/*[2][@role!="othernumber"]),not(@embellished)'.split(","),["SpecializedRule","square","default","brief"],["SpecializedRule","square","default","sbrief"],'Aliases;square;self::superscript;children/*[2];children/*[2][text()=2];@embellished;children/*[1][@role="prefix operator"]'.split(";"),'Rule,cube,default,[n] children/*[1]; [t] "cubed",self::superscript,children/*[2],children/*[2][text()=3],name(children/*[1])!="text" or not(name(children/*[1])="text" and (name(../../../punctuated[@role="text"]/..)="stree" or name(..)="stree")),name(children/*[1])!="subscript" or (name(children/*[1])="subscript" and name(children/*[1]/children/*[1])="identifier" and name(children/*[1]/children/*[2])="number" and children/*[1]/children/*[2][@role!="mixed"] and children/*[1]/children/*[2][@role!="othernumber"]),not(@embellished)'.split(","),["SpecializedRule","cube","default","brief"],["SpecializedRule","cube","default","sbrief"],'Aliases;cube;self::superscript;children/*[2];children/*[2][text()=3];@embellished;children/*[1][@role="prefix operator"]'.split(";"),'Rule,prime,default,[n] children/*[1]; [n] children/*[2],self::superscript,children/*[2],children/*[2][@role="prime"]'.split(","),["SpecializedRule","prime","default","brief"],["SpecializedRule","prime","default","sbrief"],'Rule,prime-subscript,default,[n] children/*[1]/children/*[1]; [n] children/*[2]; [t] CSFsubscriptVerbose; [n] children/*[1]/children/*[2],self::superscript,children/*[2][@role="prime"],name(children/*[1])="subscript",not(following-sibling::*)'.split(","),["SpecializedRule","prime-subscript","default","brief","[n] children/*[1]/children/*[1]; [n] children/*[2]; [t] CSFsubscriptBrief; [n] children/*[1]/children/*[2]"],["SpecializedRule","prime-subscript","brief","sbrief"],'Rule,prime-subscript-baseline,default,[n] children/*[1]/children/*[1]; [n] children/*[2]; [t] CSFsubscriptVerbose; [n] children/*[1]/children/*[2]; [t] CSFbaselineVerbose,self::superscript,children/*[2][@role="prime"],name(children/*[1])="subscript",following-sibling::*'.split(","),["SpecializedRule","prime-subscript-baseline","default","brief","[n] children/*[1]/children/*[1]; [n] children/*[2]; [t] CSFsubscriptBrief; [n] children/*[1]/children/*[2]; [t] CSFbaselineBrief"],["SpecializedRule","prime-subscript-baseline","brief","sbrief"],'Aliases prime-subscript-baseline self::superscript children/*[2][@role="prime"] name(children/*[1])="subscript" not(following-sibling::*) @embellished'.split(" "),'Rule,prime-subscript-simple,default,[n] children/*[1]/children/*[1]; [n] children/*[2];[n] children/*[1]/children/*[2],self::superscript,children/*[2][@role="prime"],name(children/*[1])="subscript",name(children/*[1]/children/*[1])="identifier",name(children/*[1]/children/*[2])="number",children/*[1]/children/*[2][@role!="mixed"],children/*[1]/children/*[2][@role!="othernumber"]'.split(","),["SpecializedRule","prime-subscript-simple","default","brief"],["SpecializedRule","prime-subscript-simple","default","sbrief"],'Rule,overscore,default,[t] "ModifyingAbove"; [n] children/*[1]; [t] "With"; [n] children/*[2],self::overscore,children/*[2][@role="overaccent"]'.split(","),["SpecializedRule","overscore","default","brief",'[t] "ModAbove"; [n] children/*[1]; [t] "With"; [n] children/*[2]'],["SpecializedRule","overscore","brief","sbrief"],'Rule,double-overscore,default,[t] "ModifyingAbove Above"; [n] children/*[1]; [t] "With"; [n] children/*[2],self::overscore,children/*[2][@role="overaccent"],name(children/*[1])="overscore",children/*[1]/children/*[2][@role="overaccent"]'.split(","),["SpecializedRule","double-overscore","default","brief",'[t] "ModAbove Above"; [n] children/*[1]; [t] "With"; [n] children/*[2]'],["SpecializedRule","double-overscore","brief","sbrief"],'Rule,underscore,default,[t] "ModifyingBelow"; [n] children/*[1]; [t] "With"; [n] children/*[2],self::underscore,children/*[2][@role="underaccent"]'.split(","),["SpecializedRule","underscore","default","brief",'[t] "ModBelow"; [n] children/*[1]; [t] "With"; [n] children/*[2]'],["SpecializedRule","underscore","brief","sbrief"],'Rule,double-underscore,default,[t] "ModifyingBelow Below"; [n] children/*[1]; [t] "With"; [n] children/*[2],self::underscore,children/*[2][@role="underaccent"],name(children/*[1])="underscore",children/*[1]/children/*[2][@role="underaccent"]'.split(","),["SpecializedRule","double-underscore","default","brief",'[t] "ModBelow Below"; [n] children/*[1]; [t] "With"; [n] children/*[2]'],["SpecializedRule","double-underscore","brief","sbrief"],'Rule,overbar,default,[n] children/*[1]; [t] "overbar",self::overscore,@role="latinletter" or @role="greekletter" or @role="otherletter",children/*[2][@role="overaccent"],children/*[2][text()="¯" or text()="￣" or text()="＿" or text()="_" or text()="‾"]'.split(","),["SpecializedRule","overbar","default","brief",'[n] children/*[1]; [t] "overBar"'],["SpecializedRule","overbar","brief","sbrief"],'Rule,underbar,default,[n] children/*[1]; [t] "underbar",self::underscore,@role="latinletter" or @role="greekletter" or @role="otherletter",children/*[2][@role="underaccent"],children/*[2][text()="¯" or text()="￣" or text()="＿" or text()="_" or text()="‾"]'.split(","),["SpecializedRule","underbar","default","brief",'[n] children/*[1]; [t] "underBar"'],["SpecializedRule","underbar","brief","sbrief"],'Rule,overtilde,default,[n] children/*[1]; [t] "overTilde",self::overscore,children/*[2][@role="overaccent"],@role="latinletter" or @role="greekletter" or @role="otherletter",children/*[2][text()="~" or text()="˜" or text()="∼" or text()="～"]'.split(","),["SpecializedRule","overtilde","default","brief",'[n] children/*[1]; [t] "overtilde"'],["SpecializedRule","overtilde","brief","sbrief"],'Rule,undertilde,default,[n] children/*[1]; [t] "underTilde",self::underscore,@role="latinletter" or @role="greekletter" or @role="otherletter",children/*[2][@role="underaccent"],children/*[2][text()="~" or text()="˜" or text()="∼" or text()="～"]'.split(","),["SpecializedRule","undertilde","default","brief",'[n] children/*[1]; [t] "undertilde"'],["SpecializedRule","undertilde","brief","sbrief"],'Rule,matrix-fence,default,[n] children/*[1];,self::fenced,count(children/*)=1,name(children/*[1])="matrix"'.split(","),["Rule","matrix","default",'[t] "Start"; [t] count(children/*);  [t] "By";[t] count(children/*[1]/children/*); [t] "Matrix"; [m] children/* (ctxtFunc:CTXFordinalCounter,context:"Row "); [t] "EndMatrix"',"self::matrix"],["Rule","matrix","sbrief",'[t] count(children/*);  [t] "By";[t] count(children/*[1]/children/*); [t] "Matrix"; [m] children/* (ctxtFunc:CTXFordinalCounter,context:"Row "); [t] "EndMatrix"',"self::matrix"],["Aliases","matrix","self::vector"],["Rule","matrix-row","default",'[m] children/* (ctxtFunc:CTXFordinalCounter,context:"Column");[p] (pause: 200)',"self::row"],'Rule{row-with-label{default{[t] "with Label"; [n] content/*[1]; [t] "EndLabel"(pause: 200); [m] children/* (ctxtFunc:CTXFordinalCounter,context:"Column"){self::row{content'.split("{"),'Rule{row-with-label{brief{[t] "Label"; [n] content/*[1]; [m] children/* (ctxtFunc:CTXFordinalCounter,context:"Column"){self::row{content'.split("{"),["SpecializedRule","row-with-label","brief","sbrief"],'Rule{row-with-text-label{sbrief{[t] "Label"; [t] CSFRemoveParens;[m] children/* (ctxtFunc:CTXFordinalCounter,context:"Column"){self::row{content{name(content/cell/children/*[1])="text"'.split("{"),'Rule;empty-row;default;[t] "Blank";self::row;count(children/*)=0'.split(";"),["Rule","matrix-cell","default","[n] children/*[1]; [p] (pause: 300)","self::cell"],'Rule,empty-cell,default,[t] "Blank"; [p] (pause: 300),self::cell,count(children/*)=0'.split(","),'Rule{determinant{default{[t] "Start"; [t] count(children/*);  [t] "By";[t] count(children/*[1]/children/*); [t] "Determinant"; [m] children/* (ctxtFunc:CTXFordinalCounter,context:"Row "); [t] "EndDeterminant"{self::matrix{@role="determinant"'.split("{"),["SpecializedRule","determinant","default","sbrief",'[t] count(children/*);  [t] "By";[t] count(children/*[1]/children/*); [t] "Determinant"; [m] children/* (ctxtFunc:CTXFordinalCounter,context:"Row "); [t] "EndDeterminant"'],'Rule{determinant-simple{default{[t] "Start"; [t] count(children/*);  [t] "By";[t] count(children/*[1]/children/*); [t] "Determinant"; [m] children/* (ctxtFunc:CTXFordinalCounter,context:"Row",grammar:simpleDet); [t] "EndDeterminant"{self::matrix{@role="determinant"{CQFdetIsSimple'.split("{"),["SpecializedRule","determinant-simple","default","sbrief",'[t] count(children/*);  [t] "By";[t] count(children/*[1]/children/*); [t] "Determinant"; [m] children/* (ctxtFunc:CTXFordinalCounter,context:"Row",grammar:simpleDet); [t] "EndDeterminant"'],'Rule{row-simple{default{[m] children/*;{self::row{@role="determinant"{contains(@grammar, "simpleDet")'.split("{"),["Rule","layout","default",'[t] "StartLayout"; [m] children/* (ctxtFunc:CTXFordinalCounter,context:"Row "); [t] "EndLayout"',"self::table"],["Rule","layout","sbrief",'[t] "Layout"; [m] children/* (ctxtFunc:CTXFordinalCounter,context:"Row "); [t] "EndLayout"',"self::table"],'Rule,binomial,default,[t] "StartBinomialOrMatrix"; [n] children/*[1]/children/*[1]; [t] "Choose"; [n] children/*[2]/children/*[1];  [t] "EndBinomialOrMatrix",self::vector,@role="binomial"'.split(","),'Rule,binomial,sbrief,[t] "BinomialOrMatrix"; [n] children/*[1]/children/*[1]; [t] "Choose"; [n] children/*[2]/children/*[1];  [t] "EndBinomialOrMatrix",self::vector,@role="binomial"'.split(","),["Rule","cases","default",'[t] "StartLayout"; [t] "Enlarged"; [n] content/*[1];[m] children/* (ctxtFunc:CTXFordinalCounter,context:"Row "); [t] "EndLayout"',"self::cases"],["Rule","cases","sbrief",'[t] "Layout"; [t] "Enlarged"; [n] content/*[1];[m] children/* (ctxtFunc:CTXFordinalCounter,context:"Row "); [t] "EndLayout"',"self::cases"],["Aliases","layout","self::multiline"],["Rule","line","default","[m] children/*","self::line"],'Rule,line-with-label,default,[t] "with Label"; [n] content/*[1]; [t] "EndLabel" (pause: 200); [m] children/*,self::line,content'.split(","),["SpecializedRule","line-with-label","default","brief",'[t] "Label"; [n] content/*[1] (pause: 200); [m] children/*'],["SpecializedRule","line-with-label","brief","sbrief"],'Rule,line-with-text-label,sbrief,[t] "Label"; [t] CSFRemoveParens; [m] children/*,self::line,content,name(content/cell/children/*[1])="text"'.split(","),'Rule;empty-line;default;[t] "Blank";self::line;count(children/*)=0;not(content)'.split(";"),["SpecializedRule","empty-line","default","brief"],["SpecializedRule","empty-line","brief","sbrief"],'Rule,empty-line-with-label,default,[t] "with Label"; [n] content/*[1]; [t] "EndLabel"(pause: 200); [t] "Blank",self::line,count(children/*)=0,content'.split(","),["SpecializedRule","empty-line-with-label","default","brief",'[t] "Label"; [n] content/*[1] (pause: 200); [t] "Blank"'],["SpecializedRule","empty-line-with-label","brief","sbrief"],["Rule","enclose","default",'[t] "StartEnclose"; [t] @role (grammar:localEnclose); [n] children/*[1]; [t] "EndEnclose"',"self::enclose"],["Aliases","overbar","self::enclose",'@role="top"'],["Aliases","underbar","self::enclose",'@role="bottom"'],'Rule,leftbar,default,[t] "vertical bar"; [n] children/*[1],self::enclose,@role="left"'.split(","),'Rule,rightbar,default,[n] children/*[1]; [t] "vertical bar",self::enclose,@role="right"'.split(","),'Rule,crossout,default,[t] "CrossOut"; [n] children/*[1]; [t] "EndCrossOut",self::enclose,@role="updiagonalstrike" or @role="downdiagonalstrike" or @role="horizontalstrike"'.split(","),'Rule,cancel,default,[t] "CrossOut"; [n] children/*[1]/children/*[1]; [t] "With"; [n] children/*[2]; [t] "EndCrossOut",self::overscore,@role="updiagonalstrike" or @role="downdiagonalstrike" or @role="horizontalstrike"'.split(","),["SpecializedRule","cancel","default","brief"],["SpecializedRule","cancel","default","sbrief"],["Aliases","cancel","self::underscore",'@role="updiagonalstrike" or @role="downdiagonalstrike" or @role="horizontalstrike"'],'Rule,cancel-reverse,default,[t] "CrossOut"; [n] children/*[2]/children/*[1]; [t] "With"; [n] children/*[1]; [t] "EndCrossOut",self::overscore,name(children/*[2])="enclose",children/*[2][@role="updiagonalstrike" or @role="downdiagonalstrike" or @role="horizontalstrike"]'.split(","),["SpecializedRule","cancel-reverse","default","brief"],["SpecializedRule","cancel-reverse","default","sbrief"],["Aliases","cancel-reverse","self::underscore",'name(children/*[2])="enclose"','children/*[2][@role="updiagonalstrike" or @role="downdiagonalstrike" or @role="horizontalstrike"]'],'Rule;end-punct;default;[m] children/*;self::punctuated;@role="endpunct"'.split(";"),'Rule,start-punct,default,[n] content/*[1]; [m] children/*[position()>1],self::punctuated,@role="startpunct"'.split(","),'Rule,integral-punct,default,[n] children/*[1]; [n] children/*[3],self::punctuated,@role="integral"'.split(","),["Rule","punctuated","default","[m] children/*","self::punctuated"],'Rule;unit;default;[t] text() (grammar:annotation="unit":translate:plural);self::identifier;@role="unit"'.split(";"),'Rule;unit-combine;default;[m] children/*;self::infixop;@role="unit"'.split(";"),'Rule,unit-divide,default,[n] children/*[1]; [t] "per"; [n] children/*[2],self::fraction,@role="unit"'.split(","),["Rule","inference","default",'[t] "inference rule"; [m] content/*; [t] "with conclusion"; [n] children/*[1]; [t] "and"; [t] count(children/*[2]/children/*); [t] "premises"',"self::inference"],'Rule,inference,default,[t] "inference rule"; ; [m] content/*; [t] "with conclusion"; [n] children/*[1]; [t] "and"; [t] count(children/*[2]/children/*); [t] "premise",self::inference,count(children/*[2]/children/*)<2'.split(","),["Rule","premise","default",'[m] children/* (ctxtFunc:CTXFordinalCounter,context:"premise ");',"self::premises"],["Rule","conclusion","default","[n] children/*[1]","self::conclusion"],["Rule","label","default",'[t] "label"; [n] children/*[1]',"self::rulelabel"],'Rule,axiom,default,[t] "axiom"; [m] children/*[1];,self::inference,@role="axiom"'.split(","),'Rule,axiom,default,[t] "empty axiom";,self::empty,@role="axiom"'.split(",")],initialize:[sre.MathspeakUtil.generateTensorRules]},sre.MathspeakSpanishUtil={},sre.MathspeakSpanishUtil.ordinalCounter=function(e,t){var n=0;return function(){return sre.Messages.NUMBERS.numberToOrdinal(++n,!1)+" "+t}},sre.MathspeakSpanishUtil.smallRoot=function(e){if(!e.childNodes||0===e.childNodes.length||!e.childNodes[0].childNodes)return[];var t=e.childNodes[0].childNodes[0].textContent;return/^\d+$/.test(t)?(t=parseInt(t,10),1<t&&10>=t?[e]:[]):[]},sre.UnitUtil={},sre.UnitUtil.unitMultipliers=function(e){var t=0;return function(){var n=sre.AuditoryDescription.create({text:sre.UnitUtil.rightMostUnit(e[t])&&sre.UnitUtil.leftMostUnit(e[t+1])?sre.Messages.UNIT_TIMES:""},{});return t++,[n]}},sre.UnitUtil.SCRIPT_ELEMENTS=[sre.SemanticAttr.Type.SUPERSCRIPT,sre.SemanticAttr.Type.SUBSCRIPT,sre.SemanticAttr.Type.OVERSCORE,sre.SemanticAttr.Type.UNDERSCORE],sre.UnitUtil.rightMostUnit=function(e){for(;e;){if("unit"===e.getAttribute("role"))return!0;var t=e.tagName;e=sre.XpathUtil.evalXPath("children/*",e),e=-1!==sre.UnitUtil.SCRIPT_ELEMENTS.indexOf(t)?e[0]:e[e.length-1]}return!1},sre.UnitUtil.leftMostUnit=function(e){for(;e;){if("unit"===e.getAttribute("role"))return!0;e=sre.XpathUtil.evalXPath("children/*",e)[0]}return!1},sre.UnitUtil.oneLeft=function(e){for(;e;){if("number"===e.tagName&&"1"===e.textContent)return[e];if("infixop"!==e.tagName||"multiplication"!==e.getAttribute("role")&&"implicit"!==e.getAttribute("role"))break;e=sre.XpathUtil.evalXPath("children/*",e)[0]}return[]},sre.MathspeakSpanish={locale:"es",domain:"mathspeak",functions:[["CQF","CQFspaceoutNumber",sre.MathspeakUtil.spaceoutNumber],["CQF","CQFspaceoutIdentifier",sre.MathspeakUtil.spaceoutIdentifier],["CSF","CSFspaceoutText",sre.MathspeakUtil.spaceoutText],["CSF","CSFopenFracVerbose",sre.MathspeakUtil.openingFractionVerbose],["CSF","CSFcloseFracVerbose",sre.MathspeakUtil.closingFractionVerbose],["CSF","CSFoverFracVerbose",sre.MathspeakUtil.overFractionVerbose],["CSF","CSFopenFracBrief",sre.MathspeakUtil.openingFractionBrief],["CSF","CSFcloseFracBrief",sre.MathspeakUtil.closingFractionBrief],["CSF","CSFopenFracSbrief",sre.MathspeakUtil.openingFractionSbrief],["CSF","CSFcloseFracSbrief",sre.MathspeakUtil.closingFractionSbrief],["CSF","CSFoverFracSbrief",sre.MathspeakUtil.overFractionSbrief],["CSF","CSFopenRadicalVerbose",sre.MathspeakUtil.openingRadicalVerbose],["CSF","CSFcloseRadicalVerbose",sre.MathspeakUtil.closingRadicalVerbose],["CSF","CSFindexRadicalVerbose",sre.MathspeakUtil.indexRadicalVerbose],["CSF","CSFopenRadicalBrief",sre.MathspeakUtil.openingRadicalBrief],["CSF","CSFcloseRadicalBrief",sre.MathspeakUtil.closingRadicalBrief],["CSF","CSFindexRadicalBrief",sre.MathspeakUtil.indexRadicalBrief],["CSF","CSFopenRadicalSbrief",sre.MathspeakUtil.openingRadicalSbrief],["CSF","CSFindexRadicalSbrief",sre.MathspeakUtil.indexRadicalSbrief],["CQF","CQFisSmallRoot",sre.MathspeakSpanishUtil.smallRoot],["CSF","CSFsuperscriptVerbose",sre.MathspeakUtil.superscriptVerbose],["CSF","CSFsuperscriptBrief",sre.MathspeakUtil.superscriptBrief],["CSF","CSFsubscriptVerbose",sre.MathspeakUtil.subscriptVerbose],["CSF","CSFsubscriptBrief",sre.MathspeakUtil.subscriptBrief],["CSF","CSFbaselineVerbose",sre.MathspeakUtil.baselineVerbose],["CSF","CSFbaselineBrief",sre.MathspeakUtil.baselineBrief],["CSF","CSFleftsuperscriptVerbose",sre.MathspeakUtil.superscriptVerbose],["CSF","CSFleftsubscriptVerbose",sre.MathspeakUtil.subscriptVerbose],["CSF","CSFrightsuperscriptVerbose",sre.MathspeakUtil.superscriptVerbose],["CSF","CSFrightsubscriptVerbose",sre.MathspeakUtil.subscriptVerbose],["CSF","CSFleftsuperscriptBrief",sre.MathspeakUtil.superscriptBrief],["CSF","CSFleftsubscriptBrief",sre.MathspeakUtil.subscriptBrief],["CSF","CSFrightsuperscriptBrief",sre.MathspeakUtil.superscriptBrief],["CSF","CSFrightsubscriptBrief",sre.MathspeakUtil.subscriptBrief],["CSF","CSFunderscript",sre.MathspeakUtil.nestedUnderscore],["CSF","CSFoverscript",sre.MathspeakUtil.nestedOverscore],["CTXF","CTXFordinalCounter",sre.MathspeakSpanishUtil.ordinalCounter],["CTXF","CTXFcontentIterator",sre.StoreUtil.contentIterator],["CTXF","CTXFunitMultipliers",sre.UnitUtil.unitMultipliers],["CQF","CQFdetIsSimple",sre.MathspeakUtil.determinantIsSimple],["CSF","CSFRemoveParens",sre.MathspeakUtil.removeParens],["CQF","CQFoneLeft",sre.UnitUtil.oneLeft],["CQF","CQFresetNesting",sre.MathspeakUtil.resetNestingDepth]],rules:['Rule{collapsed{default{[n] . (engine:modality=summary,grammar:collapsed); [t] "plegado";{self::*{@alternative{not(contains(@grammar, "collapsed")){self::*{self::*{self::*{self::*{self::*'.split("{"),["SpecializedRule","collapsed","default","brief"],["SpecializedRule","collapsed","brief","sbrief"],"Rule;stree;default;[n] ./*[1];self::stree;CQFresetNesting".split(";"),["Rule","unknown","default","[n] text()","self::unknown"],'Rule;protected;default;[t] text();self::number;contains(@grammar, "protected")'.split(";"),["Rule","omit-empty","default","[p] (pause:100)","self::empty"],'Rule;blank-empty;default;[t] "espacio";self::empty;count(../*)=1;name(../..)="cell" or name(../..)="line"'.split(";"),'Rule{font{default{[t] @font (grammar:localFont); [n] . (grammar:ignoreFont=@font){self::*{@font{not(contains(@grammar, "ignoreFont")){@font!="normal"'.split("{"),'Rule{font-identifier-short{default{[t] @font (grammar:localFont); [n] . (grammar:ignoreFont=@font){self::identifier{string-length(text())=1{@font{not(contains(@grammar, "ignoreFont")){@font="normal"{""=translate(text(), "abcdefghijklmnopqrstuvwxyzαβγδεζηθικλμνξοπρςστυφχψωABCDEFGHIJKLMNOPQRSTUVWXYZΑΒΓΔΕΖΗΘΙΚΛΜΝΞΟΠΡΣΣΤΥΦΧΨΩ", ""){@role!="unit"'.split("{"),'Rule{font-identifier{default{[t] @font (grammar:localFont); [n] . (grammar:ignoreFont=@font){self::identifier{string-length(text())=1{@font{@font="normal"{not(contains(@grammar, "ignoreFont")){@role!="unit"'.split("{"),'Rule;omit-font;default;[n] . (grammar:ignoreFont=@font);self::identifier;string-length(text())=1;@font;not(contains(@grammar, "ignoreFont"));@font="italic"'.split(";"),["Rule","number","default","[n] text()","self::number"],'Rule,mixed-number,default,[n] children/*[1]; [t] "más"; [n] children/*[2]; ,self::number,@role="mixed"'.split(","),'Rule{number-with-chars{default{[t] "número"; [m] CQFspaceoutNumber (grammar:protected){self::number{@role="othernumber"{"" != translate(text(), "0123456789.,", ""){not(contains(@grammar, "protected"))'.split("{"),["SpecializedRule","number-with-chars","default","brief",'[t] "núm"; [m] CQFspaceoutNumber (grammar:protected)'],["SpecializedRule","number-with-chars","brief","sbrief"],'Rule{number-as-upper-word{default{[t] "mayúscula"; [t] CSFspaceoutText{self::number{string-length(text())>1{text()=translate(text(), "abcdefghijklmnopqrstuvwxyzαβγδεζηθικλμνξοπρςστυφχψω", "ABCDEFGHIJKLMNOPQRSTUVWXYZΑΒΓΔΕΖΗΘΙΚΛΜΝΞΟΠΡΣΣΤΥΦΧΨΩ"){""=translate(text(), "ABCDEFGHIJKLMNOPQRSTUVWXYZΑΒΓΔΕΖΗΘΙΚΛΜΝΞΟΠΡΣΣΤΥΦΧΨΩ","")'.split("{"),["SpecializedRule","number-as-upper-word","default","brief"],["SpecializedRule","number-as-upper-word","default","sbrief"],'Rule{number-baseline{default{[t] "línea base"; [n] . (grammar:baseline){self::number{not(contains(@grammar, "ignoreFont")){preceding-sibling::identifier{not(contains(@grammar, "baseline")){preceding-sibling::*[1][@role="latinletter" or @role="greekletter" or @role="otherletter"]{parent::*/parent::infixop[@role="implicit"]'.split("{"),["SpecializedRule","number-baseline","default","brief",'[t] "base"; [n] text()'],["SpecializedRule","number-baseline","brief","sbrief"],'Rule{number-baseline-font{default{[t] "línea base"; [t] @font (grammar:localFont); [n] . (grammar:ignoreFont=@font){self::number{@font{not(contains(@grammar, "ignoreFont")){@font!="normal"{preceding-sibling::identifier{preceding-sibling::*[@role="latinletter" or @role="greekletter" or @role="otherletter"]{parent::*/parent::infixop[@role="implicit"]'.split("{"),["SpecializedRule","number-baseline-font","default","brief",'[t] "base"; [t] @font (grammar:localFont); [n] . (grammar:ignoreFont=@font)'],["SpecializedRule","number-baseline-font","brief","sbrief"],'Rule;identifier;default;[m] CQFspaceoutIdentifier;self::identifier;string-length(text())>1;@role!="unit";not(@font) or @font="normal" or contains(@grammar, "ignoreFont");text()!=translate(text(), "abcdefghijklmnopqrstuvwxyzαβγδεζηθικλμνξοπρςστυφχψωABCDEFGHIJKLMNOPQRSTUVWXYZΑΒΓΔΕΖΗΘΙΚΛΜΝΞΟΠΡΣΣΤΥΦΧΨΩ", "")'.split(";"),["Rule","identifier","default","[n] text()","self::identifier"],'Rule,negative,default,[t] "menos"; [n] children/*[1],self::prefixop,@role="negative",children/identifier'.split(","),["Aliases","negative","self::prefixop",'@role="negative"',"children/number"],["Aliases","negative","self::prefixop",'@role="negative"','children/fraction[@role="vulgar"]'],'Rule,negative,default,[t] "menos"; [n] children/*[1],self::prefixop,@role="negative"'.split(","),["Rule","prefix","default","[m] content/*; [n] children/*[1]","self::prefixop"],["Rule","postfix","default","[n] children/*[1]; [m] content/*","self::postfixop"],["Rule","binary-operation","default","[m] children/* (sepFunc:CTXFcontentIterator);","self::infixop"],'Rule;implicit;default;[m] children/*;self::infixop;@role="implicit"'.split(";"),["Aliases","implicit","self::infixop",'@role="leftsuper" or @role="leftsub" or @role="rightsuper" or @role="rightsub"'],'Rule,subtraction,default,[m] children/* (separator:"menos");,self::infixop,@role="subtraction"'.split(","),["Rule","function-unknown","default","[n] children/*[1]; [n] children/*[2]","self::appl"],'Rule,function-prefix,default,[n] children/*[1]; [n] children/*[2],self::appl,children/*[1][@role="prefix function"]'.split(","),'Rule,fences-open-close,default,[n] content/*[1]; [n] children/*[1]; [n] content/*[2],self::fenced,@role="leftright"'.split(","),'Rule,fences-neutral,default,[t] "empezar valor absoluto"; [n] children/*[1]; [t] "finalizar valor absoluto",self::fenced,@role="neutral",content/*[1][text()]="|" or content/*[1][text()]="❘" or content/*[1][text()]="｜"'.split(","),["SpecializedRule","fences-neutral","default","sbrief",'[t] "valor absoluto"; [n] children/*[1]; [t] "finalizar valor absoluto"'],'Rule,fences-neutral,default,[n] content/*[1]; [n] children/*[1]; [n] content/*[2],self::fenced,@role="neutral"'.split(","),'Rule,fences-set,default,[t] "empezar llave"; [n] children/*[1]; [t] "finalizar llave",self::fenced,@role="set empty" or @role="set extended" or @role="set singleton" or @role="set collection",not(name(../..)="appl")'.split(","),["SpecializedRule","fences-set","default","sbrief",'[t] "llave"; [n] children/*[1]; [t] "finalizar llave"'],["Rule","text","default","[n] text() (grammar:noTranslateText)","self::text"],'Rule;factorial;default;[t] "factorial";self::punctuation;text()="!";name(preceding-sibling::*[1])!="text"'.split(";"),'Rule;minus;default;[t] "menos";self::operator;text()="-"'.split(";"),'Rule;single-prime;default;[t] "prima";self::punctuated;@role="prime";count(children/*)=1'.split(";"),'Rule;double-prime;default;[t] "doble prima";self::punctuated;@role="prime";count(children/*)=2'.split(";"),'Rule;triple-prime;default;[t] "triple prima";self::punctuated;@role="prime";count(children/*)=3'.split(";"),'Rule;quadruple-prime;default;[t] "cuadruplicar prima";self::punctuated;@role="prime";count(children/*)=4'.split(";"),'Rule,counted-prime,default,[t] count(children/*); [t] "prime",self::punctuated,@role="prime"'.split(","),["Rule","fraction","default","[t] CSFopenFracVerbose; [n] children/*[1]; [t] CSFoverFracVerbose; [n] children/*[2]; [t] CSFcloseFracVerbose","self::fraction"],["Rule","fraction","brief","[t] CSFopenFracBrief; [n] children/*[1]; [t] CSFoverFracVerbose; [n] children/*[2]; [t] CSFcloseFracBrief","self::fraction"],["Rule","fraction","sbrief","[t] CSFopenFracSbrief; [n] children/*[1]; [t] CSFoverFracSbrief; [n] children/*[2]; [t] CSFcloseFracSbrief","self::fraction"],'Rule,continued-fraction-outer,default,[t] "fracción continua"; [n] children/*[1];[t] "entre"; [n] children/*[2],self::fraction,not(ancestor::fraction),children/*[2]/descendant-or-self::*[@role="ellipsis" and not(following-sibling::*)]'.split(","),["SpecializedRule","continued-fraction-outer","default","brief",'[t] "frac continua"; [n] children/*[1];[t] "entre"; [n] children/*[2]'],["SpecializedRule","continued-fraction-outer","brief","sbrief"],'Rule,continued-fraction-inner,default,[t] "empezar fracción"; [n] children/*[1];[t] "entre"; [n] children/*[2],self::fraction,ancestor::fraction,children/*[2]/descendant-or-self::*[@role="ellipsis" and not(following-sibling::*)]'.split(","),["SpecializedRule","continued-fraction-inner","default","brief",'[t] "empezar frac"; [n] children/*[1];[t] "entre"; [n] children/*[2]'],["SpecializedRule","continued-fraction-inner","brief","sbrief",'[t] "frac"; [n] children/*[1];[t] "entre"; [n] children/*[2]'],["Rule","sqrt","default","[t] CSFopenRadicalVerbose; [n] children/*[1]; [t] CSFcloseRadicalVerbose","self::sqrt"],["Rule","sqrt","brief","[t] CSFopenRadicalBrief; [n] children/*[1]; [t] CSFcloseRadicalBrief","self::sqrt"],["Rule","sqrt","sbrief","[t] CSFopenRadicalSbrief; [n] children/*[1]; [t] CSFcloseRadicalBrief","self::sqrt"],"Rule,root-small,default,[t] CSFopenRadicalVerbose; [n] children/*[2]; [t] CSFcloseRadicalVerbose,self::root,CQFisSmallRoot".split(","),"Rule,root-small,brief,[t] CSFopenRadicalBrief; [n] children/*[2]; [t] CSFcloseRadicalBrief,self::root,CQFisSmallRoot".split(","),"Rule,root-small,sbrief,[t] CSFopenRadicalSbrief; [n] children/*[2]; [t] CSFcloseRadicalBrief,self::root,CQFisSmallRoot".split(","),["Rule","root","default","[t] CSFindexRadicalVerbose; [n] children/*[1];[t] CSFopenRadicalVerbose; [n] children/*[2]; [t] CSFcloseRadicalVerbose","self::root"],["Rule","root","brief","[t] CSFindexRadicalBrief; [n] children/*[1];[t] CSFopenRadicalBrief; [n] children/*[2]; [t] CSFcloseRadicalBrief","self::root"],["Rule","root","sbrief","[t] CSFindexRadicalSbrief; [n] children/*[1];[t] CSFopenRadicalSbrief; [n] children/*[2]; [t] CSFcloseRadicalBrief","self::root"],'Rule,limboth,default,[n] children/*[1]; [t] CSFunderscript; [n] children/*[2];[t] CSFoverscript; [n] children/*[3],self::limboth,name(../..)="underscore" or name(../..)="overscore",following-sibling::*[@role!="underaccent" and @role!="overaccent"]'.split(","),'Rule,limlower,default,[n] children/*[1]; [t] CSFunderscript; [n] children/*[2];,self::limlower,name(../..)="underscore" or name(../..)="overscore",following-sibling::*[@role!="underaccent" and @role!="overaccent"]'.split(","),'Rule,limupper,default,[n] children/*[1]; [t] CSFoverscript; [n] children/*[2];,self::limupper,name(../..)="underscore" or name(../..)="overscore",following-sibling::*[@role!="underaccent" and @role!="overaccent"]'.split(","),'Aliases;limlower;self::underscore;@role="limit function";name(../..)="underscore" or name(../..)="overscore";following-sibling::*[@role!="underaccent" and @role!="overaccent"]'.split(";"),'Aliases;limlower;self::underscore;children/*[2][@role!="underaccent"];name(../..)="underscore" or name(../..)="overscore";following-sibling::*[@role!="underaccent" and @role!="overaccent"]'.split(";"),'Aliases;limupper;self::overscore;children/*[2][@role!="overaccent"];name(../..)="underscore" or name(../..)="overscore";following-sibling::*[@role!="underaccent" and @role!="overaccent"]'.split(";"),["Rule","limboth-end","default",'[n] children/*[1]; [t] CSFunderscript; [n] children/*[2];[t] CSFoverscript; [n] children/*[3]; [t] "finalizar índices"',"self::limboth"],["Rule","limlower-end","default",'[n] children/*[1]; [t] CSFunderscript; [n] children/*[2]; [t] "finalizar índices"',"self::limlower"],["Rule","limupper-end","default",'[n] children/*[1]; [t] CSFoverscript; [n] children/*[2]; [t] "finalizar índices"',"self::limupper"],["Aliases","limlower-end","self::underscore",'@role="limit function"'],["Aliases","limlower-end","self::underscore"],["Aliases","limupper-end","self::overscore"],["Rule","integral","default","[n] children/*[1]; [n] children/*[2]; [n] children/*[3];","self::integral"],'Rule,integral,default,[n] children/*[1]; [t] "definida"; [t] "subíndice"; [n] children/*[2];[t] "superíndice"; [n] children/*[3]; [t] "línea base";,self::limboth,@role="integral"'.split(","),["SpecializedRule","integral","default","brief",'[n] children/*[1]; [t] "Sub"; [n] children/*[2];[t] "Sup"; [n] children/*[3]; [t] "Base";'],["SpecializedRule","integral","brief","sbrief"],["Rule","bigop","default","[n] children/*[1]; [n] children/*[2];","self::bigop"],["Rule","relseq","default","[m] children/* (sepFunc:CTXFcontentIterator)","self::relseq"],'Rule,equality,default,[n] children/*[1]; [n] content/*[1]; [n] children/*[2],self::relseq,@role="equality",count(./children/*)=2'.split(","),'Rule;multi-equality;default;[m] children/* (sepFunc:CTXFcontentIterator);self::relseq;@role="equality";count(./children/*)>2'.split(";"),["Rule","multrel","default","[m] children/* (sepFunc:CTXFcontentIterator)","self::multirel"],["Rule","subscript","default","[n] children/*[1]; [t] CSFsubscriptVerbose; [n] children/*[2]","self::subscript"],["Rule","subscript","brief","[n] children/*[1]; [t] CSFsubscriptBrief; [n] children/*[2]","self::subscript"],["SpecializedRule","subscript","brief","sbrief"],'Rule,subscript-baseline,default,[n] children/*[1]; [t] CSFsubscriptVerbose; [n] children/*[2]; [t] CSFbaselineVerbose,self::subscript,following-sibling::*,not(name(following-sibling::subscript/children/*[1])="empty" or (name(following-sibling::infixop[@role="implicit"]/children/*[1])="subscript" and name(following-sibling::*/children/*[1]/children/*[1])="empty")) and @role!="subsup",not(following-sibling::*[@role="rightsuper" or @role="rightsub" or @role="leftsub" or @role="leftsub"])'.split(","),["SpecializedRule","subscript-baseline","default","brief","[n] children/*[1]; [t] CSFsubscriptBrief; [n] children/*[2]; [t] CSFbaselineBriefS"],["SpecializedRule","subscript-baseline","brief","sbrief"],'Aliases;subscript-baseline;self::subscript;not(following-sibling::*);ancestor::fenced|ancestor::root|ancestor::sqrt|ancestor::punctuated|ancestor::fraction;not(ancestor::punctuated[@role="leftsuper" or @role="rightsub" or @role="rightsuper" or @role="rightsub"])'.split(";"),["Aliases","subscript-baseline","self::subscript","not(following-sibling::*)","ancestor::relseq|ancestor::multirel",sre.MathspeakUtil.generateBaselineConstraint()],["Aliases","subscript-baseline","self::subscript","not(following-sibling::*)","@embellished"],'Rule,subscript-empty-sup,default,[n] children/*[1]; [n] children/*[2],self::subscript,name(children/*[2])="infixop",name(children/*[2][@role="implicit"]/children/*[1])="superscript",name(children/*[2]/children/*[1]/children/*[1])="empty"'.split(","),["SpecializedRule","subscript-empty-sup","default","brief"],["SpecializedRule","subscript-empty-sup","brief","sbrief"],["Aliases","subscript-empty-sup","self::subscript",'name(children/*[2])="superscript"','name(children/*[2]/children/*[1])="empty"'],["Rule","superscript","default","[n] children/*[1]; [t] CSFsuperscriptVerbose; [n] children/*[2]","self::superscript"],["SpecializedRule","superscript","default","brief","[n] children/*[1]; [t] CSFsuperscriptBrief; [n] children/*[2]"],["SpecializedRule","superscript","brief","sbrief"],'Rule,superscript-baseline,default,[n] children/*[1]; [t] CSFsuperscriptVerbose; [n] children/*[2];[t] CSFbaselineVerbose,self::superscript,following-sibling::*,not(name(following-sibling::superscript/children/*[1])="empty" or (name(following-sibling::infixop[@role="implicit"]/children/*[1])="superscript" and name(following-sibling::*/children/*[1]/children/*[1])="empty")) and not(following-sibling::*[@role="rightsuper" or @role="rightsub" or @role="leftsub" or @role="leftsub"])'.split(","),["SpecializedRule","superscript-baseline","default","brief","[n] children/*[1]; [t] CSFsuperscriptBrief; [n] children/*[2];[t] CSFbaselineBriefS"],["SpecializedRule","superscript-baseline","brief","sbrief"],'Aliases;superscript-baseline;self::superscript;not(following-sibling::*);ancestor::punctuated;ancestor::*/following-sibling::* and not(ancestor::punctuated[@role="leftsuper" or @role="rightsub" or @role="rightsuper" or @role="rightsub"])'.split(";"),["Aliases","superscript-baseline","self::superscript","not(following-sibling::*)","ancestor::fraction|ancestor::fenced|ancestor::root|ancestor::sqrt"],["Aliases","superscript-baseline","self::superscript","not(following-sibling::*)","ancestor::relseq|ancestor::multirel","not(@embellished)",sre.MathspeakUtil.generateBaselineConstraint()],'Aliases superscript-baseline self::superscript not(following-sibling::*) @embellished not(children/*[2][@role="prime"])'.split(" "),'Rule,superscript-empty-sub,default,[n] children/*[1]; [n] children/*[2],self::superscript,name(children/*[2])="infixop",name(children/*[2][@role="implicit"]/children/*[1])="subscript",name(children/*[2]/children/*[1]/children/*[1])="empty"'.split(","),["SpecializedRule","superscript-empty-sub","default","brief"],["SpecializedRule","superscript-empty-sub","brief","sbrief"],["Aliases","superscript-empty-sub","self::superscript",'name(children/*[2])="subscript"','name(children/*[2]/children/*[1])="empty"'],'Rule,square,default,[n] children/*[1]; [t] "al cuadrado",self::superscript,children/*[2],children/*[2][text()=2],name(children/*[1])!="text" or not(name(children/*[1])="text" and (name(../../../punctuated[@role="text"]/..)="stree" or name(..)="stree")),name(children/*[1])!="subscript" or (name(children/*[1])="subscript" and name(children/*[1]/children/*[1])="identifier" and name(children/*[1]/children/*[2])="number" and children/*[1]/children/*[2][@role!="mixed"] and children/*[1]/children/*[2][@role!="othernumber"]),not(@embellished)'.split(","),["SpecializedRule","square","default","brief"],["SpecializedRule","square","default","sbrief"],'Aliases;square;self::superscript;children/*[2];children/*[2][text()=2];@embellished;children/*[1][@role="prefix operator"]'.split(";"),'Rule,cube,default,[n] children/*[1]; [t] "al cubo",self::superscript,children/*[2],children/*[2][text()=3],name(children/*[1])!="text" or not(name(children/*[1])="text" and (name(../../../punctuated[@role="text"]/..)="stree" or name(..)="stree")),name(children/*[1])!="subscript" or (name(children/*[1])="subscript" and name(children/*[1]/children/*[1])="identifier" and name(children/*[1]/children/*[2])="number" and children/*[1]/children/*[2][@role!="mixed"] and children/*[1]/children/*[2][@role!="othernumber"]),not(@embellished)'.split(","),["SpecializedRule","cube","default","brief"],["SpecializedRule","cube","default","sbrief"],'Aliases;cube;self::superscript;children/*[2];children/*[2][text()=3];@embellished;children/*[1][@role="prefix operator"]'.split(";"),'Rule,prime,default,[n] children/*[1]; [n] children/*[2],self::superscript,children/*[2],children/*[2][@role="prime"]'.split(","),["SpecializedRule","prime","default","brief"],["SpecializedRule","prime","default","sbrief"],'Rule,prime-subscript,default,[n] children/*[1]/children/*[1]; [n] children/*[2]; [t] CSFsubscriptVerbose; [n] children/*[1]/children/*[2],self::superscript,children/*[2][@role="prime"],name(children/*[1])="subscript",not(following-sibling::*)'.split(","),["SpecializedRule","prime-subscript","default","brief","[n] children/*[1]/children/*[1]; [n] children/*[2]; [t] CSFsubscriptBrief; [n] children/*[1]/children/*[2]"],["SpecializedRule","prime-subscript","brief","sbrief"],'Rule,prime-subscript-baseline,default,[n] children/*[1]/children/*[1]; [n] children/*[2]; [t] CSFsubscriptVerbose; [n] children/*[1]/children/*[2]; [t] CSFbaselineVerbose,self::superscript,children/*[2][@role="prime"],name(children/*[1])="subscript",following-sibling::*'.split(","),["SpecializedRule","prime-subscript-baseline","default","brief","[n] children/*[1]/children/*[1]; [n] children/*[2]; [t] CSFsubscriptBrief; [n] children/*[1]/children/*[2]; [t] CSFbaselineBriefS"],["SpecializedRule","prime-subscript-baseline","brief","sbrief"],'Aliases prime-subscript-baseline self::superscript children/*[2][@role="prime"] name(children/*[1])="subscript" not(following-sibling::*) @embellished'.split(" "),'Rule,overscore,default,[t] "modificando superior"; [n] children/*[1]; [t] "con"; [n] children/*[2],self::overscore,children/*[2][@role="overaccent"]'.split(","),["SpecializedRule","overscore","default","brief",'[t] "mod superior"; [n] children/*[1]; [t] "con"; [n] children/*[2]'],["SpecializedRule","overscore","brief","sbrief"],'Rule,double-overscore,default,[t] "modificando superior superior"; [n] children/*[1]; [t] "con"; [n] children/*[2],self::overscore,children/*[2][@role="overaccent"],name(children/*[1])="overscore",children/*[1]/children/*[2][@role="overaccent"]'.split(","),["SpecializedRule","double-overscore","default","brief",'[t] "mod superior superior"; [n] children/*[1]; [t] "con"; [n] children/*[2]'],["SpecializedRule","double-overscore","brief","sbrief"],'Rule,underscore,default,[t] "modificando inferior"; [n] children/*[1]; [t] "con"; [n] children/*[2],self::underscore,children/*[2][@role="underaccent"]'.split(","),["SpecializedRule","underscore","default","brief",'[t] "mod inferior"; [n] children/*[1]; [t] "con"; [n] children/*[2]'],["SpecializedRule","underscore","brief","sbrief"],'Rule,double-underscore,default,[t] "modificando inferior inferior"; [n] children/*[1]; [t] "con"; [n] children/*[2],self::underscore,children/*[2][@role="underaccent"],name(children/*[1])="underscore",children/*[1]/children/*[2][@role="underaccent"]'.split(","),["SpecializedRule","double-underscore","default","brief",'[t] "mod inferior inferior"; [n] children/*[1]; [t] "con"; [n] children/*[2]'],["SpecializedRule","double-underscore","brief","sbrief"],'Rule,overbar,default,[n] children/*[1]; [t] "barra",self::overscore,@role="latinletter" or @role="greekletter" or @role="otherletter",children/*[2][@role="overaccent"],children/*[2][text()="¯" or text()="￣" or text()="＿" or text()="_" or text()="‾"]'.split(","),["SpecializedRule","overbar","default","brief",'[n] children/*[1]; [t] "barra"'],["SpecializedRule","overbar","brief","sbrief"],'Rule,underbar,default,[n] children/*[1]; [t] "subbarra",self::underscore,@role="latinletter" or @role="greekletter" or @role="otherletter",children/*[2][@role="underaccent"],children/*[2][text()="¯" or text()="￣" or text()="＿" or text()="_" or text()="‾"]'.split(","),["SpecializedRule","underbar","default","brief",'[n] children/*[1]; [t] "subbarra"'],["SpecializedRule","underbar","brief","sbrief"],'Rule,overtilde,default,[n] children/*[1]; [t] "tilde",self::overscore,children/*[2][@role="overaccent"],@role="latinletter" or @role="greekletter" or @role="otherletter",children/*[2][text()="~" or text()="˜" or text()="∼" or text()="～"]'.split(","),["SpecializedRule","overtilde","default","brief",'[n] children/*[1]; [t] "tilde"'],["SpecializedRule","overtilde","brief","sbrief"],'Rule,undertilde,default,[n] children/*[1]; [t] "subtilde",self::underscore,@role="latinletter" or @role="greekletter" or @role="otherletter",children/*[2][@role="underaccent"],children/*[2][text()="~" or text()="˜" or text()="∼" or text()="～"]'.split(","),["SpecializedRule","undertilde","default","brief",'[n] children/*[1]; [t] "subtilde"'],["SpecializedRule","undertilde","brief","sbrief"],'Rule,matrix-fence,default,[n] children/*[1];,self::fenced,count(children/*)=1,name(children/*[1])="matrix"'.split(","),["Rule","matrix","default",'[t] "empezar matriz"; [t] count(children/*);  [t] "por";[t] count(children/*[1]/children/*); [m] children/* (ctxtFunc:CTXFordinalCounter,context:"fila "); [t] "finalizar matriz"',"self::matrix"],["Rule","matrix","sbrief",'[t] "matriz"; [t] count(children/*);  [t] "por";[t] count(children/*[1]/children/*); [m] children/* (ctxtFunc:CTXFordinalCounter,context:" "); [t] "finalizar matriz"',"self::matrix"],["Aliases","matrix","self::vector"],["Rule","matrix-row","default",'[m] children/* (ctxtFunc:CTXFordinalCounter,context:"columna");[p] (pause: 200)',"self::row"],'Rule{row-with-label{default{[t] "con etiqueta"; [n] content/*[1]; [t] "finalizar etiqueta" (pause: 200); [m] children/* (ctxtFunc:CTXFordinalCounter,context:"columna"){self::row{content'.split("{"),'Rule{row-with-label{brief{[t] "etiqueta"; [n] content/*[1]; [m] children/* (ctxtFunc:CTXFordinalCounter,context:"columna"){self::row{content'.split("{"),["SpecializedRule","row-with-label","brief","sbrief"],'Rule{row-with-text-label{sbrief{[t] "etiqueta"; [t] CSFRemoveParens;[m] children/* (ctxtFunc:CTXFordinalCounter,context:"columna"){self::row{content{name(content/cell/children/*[1])="text"'.split("{"),'Rule;empty-row;default;[t] "espacio";self::row;count(children/*)=0'.split(";"),["Rule","matrix-cell","default","[n] children/*[1]; [p] (pause: 300)","self::cell"],'Rule,empty-cell,default,[t] "espacio"; [p] (pause: 300),self::cell,count(children/*)=0'.split(","),'Rule{determinant{default{[t] "empezar determinante"; [t] count(children/*);  [t] "por";[t] count(children/*[1]/children/*); [m] children/* (ctxtFunc:CTXFordinalCounter,context:"fila "); [t] "finalizar determinante"{self::matrix{@role="determinant"'.split("{"),["SpecializedRule","determinant","default","sbrief",'[t] "determinante"; [t] count(children/*);  [t] "por";[t] count(children/*[1]/children/*); [m] children/* (ctxtFunc:CTXFordinalCounter,context:"fila "); [t] "finalizar determinante"'],'Rule{determinant-simple{default{[t] "empezar determinante"; [t] count(children/*);  [t] "por";[t] count(children/*[1]/children/*); [m] children/* (ctxtFunc:CTXFordinalCounter,context:"fila",grammar:simpleDet); [t] "finalizar determinante"{self::matrix{@role="determinant"{CQFdetIsSimple'.split("{"),["SpecializedRule","determinant-simple","default","sbrief",'[t] "determinante"; [t] count(children/*);  [t] "por";[t] count(children/*[1]/children/*); [m] children/* (ctxtFunc:CTXFordinalCounter,context:"fila",grammar:simpleDet); [t] "finalizar determinante"'],'Rule{row-simple{default{[m] children/*;{self::row{@role="determinant"{contains(@grammar, "simpleDet")'.split("{"),["Rule","layout","default",'[t] "empezar esquema"; [m] children/* (ctxtFunc:CTXFordinalCounter,context:"fila "); [t] "finalizar esquema"',"self::table"],["Rule","layout","sbrief",'[t] "esquema"; [m] children/* (ctxtFunc:CTXFordinalCounter,context:"fila "); [t] "finalizar esquema"',"self::table"],'Rule,binomial,default,[t] "empezar binomial"; [n] children/*[1]/children/*[1]; [t] "en"; [n] children/*[2]/children/*[1];  [t] "finalizar binomial",self::vector,@role="binomial"'.split(","),'Rule,binomial,sbrief,[t] "binomial"; [n] children/*[1]/children/*[1]; [t] "en"; [n] children/*[2]/children/*[1];  [t] "finalizar binomial",self::vector,@role="binomial"'.split(","),["Rule","cases","default",'[t] "empezar esquema"; [n] content/*[1]; [t] "alargada"; [m] children/* (ctxtFunc:CTXFordinalCounter,context:"fila "); [t] "finalizar esquema"',"self::cases"],["Rule","cases","sbrief",'[t] "esquema"; [n] content/*[1]; [t] "alargada"; [m] children/* (ctxtFunc:CTXFordinalCounter,context:"fila "); [t] "finalizar esquema"',"self::cases"],["Aliases","layout","self::multiline"],["Rule","line","default","[m] children/*","self::line"],'Rule,line-with-label,default,[t] "con etiqueta"; [n] content/*[1]; [t] "finalizar etiqueta" (pause: 200); [m] children/*,self::line,content'.split(","),["SpecializedRule","line-with-label","default","brief",'[t] "etiqueta"; [n] content/*[1] (pause: 200); [m] children/*'],["SpecializedRule","line-with-label","brief","sbrief"],'Rule,line-with-text-label,sbrief,[t] "etiqueta"; [t] CSFRemoveParens; [m] children/*,self::line,content,name(content/cell/children/*[1])="text"'.split(","),'Rule;empty-line;default;[t] "espacio";self::line;count(children/*)=0;not(content)'.split(";"),["SpecializedRule","empty-line","default","brief"],["SpecializedRule","empty-line","brief","sbrief"],'Rule,empty-line-with-label,default,[t] "con etiqueta"; [n] content/*[1]; [t] "finalizar etiqueta" (pause: 200); [t] "espacio",self::line,count(children/*)=0,content'.split(","),["SpecializedRule","empty-line-with-label","default","brief",'[t] "etiqueta"; [n] content/*[1] (pause: 200); [t] "espacio"'],["SpecializedRule","empty-line-with-label","brief","sbrief"],["Rule","enclose","default",'[t] "empezar rodear"; [t] @role (grammar:localEnclose); [n] children/*[1]; [t] "finalizar rodear"',"self::enclose"],["Aliases","overbar","self::enclose",'@role="top"'],["Aliases","underbar","self::enclose",'@role="bottom"'],'Rule,leftbar,default,[t] "barra vertical"; [n] children/*[1],self::enclose,@role="left"'.split(","),'Rule,rightbar,default,[n] children/*[1]; [t] "barra vertical",self::enclose,@role="right"'.split(","),'Rule,crossout,default,[t] "tachado"; [n] children/*[1]; [t] "finalizar tachado",self::enclose,@role="updiagonalstrike" or @role="downdiagonalstrike" or @role="horizontalstrike"'.split(","),'Rule,cancel,default,[t] "tachado"; [n] children/*[1]/children/*[1]; [t] "con"; [n] children/*[2]; [t] "finalizar tachado",self::overscore,@role="updiagonalstrike" or @role="downdiagonalstrike" or @role="horizontalstrike"'.split(","),["SpecializedRule","cancel","default","brief"],["SpecializedRule","cancel","default","sbrief"],["Aliases","cancel","self::underscore",'@role="updiagonalstrike" or @role="downdiagonalstrike" or @role="horizontalstrike"'],'Rule,cancel-reverse,default,[t] "tachado"; [n] children/*[2]/children/*[1]; [t] "con"; [n] children/*[1]; [t] "finalizar tachado",self::overscore,name(children/*[2])="enclose",children/*[2][@role="updiagonalstrike" or @role="downdiagonalstrike" or @role="horizontalstrike"]'.split(","),["SpecializedRule","cancel-reverse","default","brief"],["SpecializedRule","cancel-reverse","default","sbrief"],["Aliases","cancel-reverse","self::underscore",'name(children/*[2])="enclose"','children/*[2][@role="updiagonalstrike" or @role="downdiagonalstrike" or @role="horizontalstrike"]'],'Rule;end-punct;default;[m] children/*;self::punctuated;@role="endpunct"'.split(";"),'Rule,start-punct,default,[n] content/*[1]; [m] children/*[position()>1],self::punctuated,@role="startpunct"'.split(","),'Rule,integral-punct,default,[n] children/*[1]; [n] children/*[3],self::punctuated,@role="integral"'.split(","),["Rule","punctuated","default","[m] children/*","self::punctuated"],'Rule;unit-singular;default;[t] text() (grammar:annotation="unit":translate);self::identifier;@role="unit"'.split(";"),'Rule;unit-plural;default;[t] text() (grammar:annotation="unit":translate:plural);self::identifier;@role="unit";not(contains(@grammar, "singularUnit"))'.split(";"),'Rule,unit-square,default,[n] children/*[1]; [t] "cuadrado",self::superscript,@role="unit",children/*[2][text()=2],name(children/*[1])="identifier"'.split(","),'Rule,unit-cubic,default,[n] children/*[1]; [t] "cúbico",self::superscript,@role="unit",children/*[2][text()=3],name(children/*[1])="identifier"'.split(","),'Rule,reciprocal,default,[t] "recíproco"; [n] children/*[1],self::superscript,@role="unit",name(children/*[1])="identifier",name(children/*[2])="prefixop",children/*[2][@role="negative"],children/*[2]/children/*[1][text()=1],count(preceding-sibling::*)=0 or preceding-sibling::*[@role!="unit"]'.split(","),'Rule,reciprocal,default,[t] "por"; [n] children/*[1],self::superscript,@role="unit",name(children/*[1])="identifier",name(children/*[2])="prefixop",children/*[2][@role="negative"],children/*[2]/children/*[1][text()=1],preceding-sibling::*[@role="unit"]'.split(","),'Rule;unit-combine;default;[m] children/* (sepFunc:CTXFunitMultipliers);self::infixop;@role="unit"'.split(";"),'Rule,unit-combine-mult,default,[m] children/* (sepFunc:CTXFunitMultipliers);,self::infixop,@role="multiplication" or @role="implicit",children/*[@role="unit"]'.split(","),'Rule{unit-combiner-singular{default{[n] children/*[1]; [t] "por"; [m] children/*[position()>1] (grammar:!singularUnit, sepFunc:CTXFunitMultipliers){self::infixop{@role="unit"{name(children/*[1])!="number"{contains(@grammar, "singularUnit"){count(children/*)>1'.split("{"),'Rule,unit-combine-singular-first,default,[n] children/*[1]; [n] children/*[2] (grammar:singularUnit); [t] "por"; [m] children/*[position()>2] (sepFunc:CTXFunitMultipliers),self::infixop,@role="unit",name(children/*[1])="number",children/*[1][text()=1]'.split(","),'Rule,unit-combine-singular-first,default,[n] children/*[1]; [n] children/*[2] (grammar:singularUnit); ,self::infixop,@role="unit",name(children/*[1])="number",children/*[1][text()=1],count(children/*)=2'.split(","),'Rule,unit-divide,default,[n] children/*[1]; [t] "por"; [n] children/*[2] (grammar:singularUnit),self::fraction,@role="unit"'.split(",")],initialize:[sre.MathspeakUtil.generateTensorRules]},sre.NemethUtil={},sre.NemethUtil.openingFraction=function(e){return e=sre.MathspeakUtil.fractionNestingDepth(e),Array(e).join(sre.Messages.MS.FRACTION_REPEAT)+sre.Messages.MS.FRACTION_START},sre.NemethUtil.closingFraction=function(e){return e=sre.MathspeakUtil.fractionNestingDepth(e),Array(e).join(sre.Messages.MS.FRACTION_REPEAT)+sre.Messages.MS.FRACTION_END},sre.NemethUtil.overFraction=function(e){return e=sre.MathspeakUtil.fractionNestingDepth(e),Array(e).join(sre.Messages.MS.FRACTION_REPEAT)+sre.Messages.MS.FRACTION_OVER},sre.NemethUtil.overBevelledFraction=function(e){return e=sre.MathspeakUtil.fractionNestingDepth(e),Array(e).join(sre.Messages.MS.FRACTION_REPEAT)+"⠸"+sre.Messages.MS.FRACTION_OVER},sre.NemethUtil.nestedRadical=function(e,t){return e=sre.NemethUtil.radicalNestingDepth(e),1===e?t:Array(e).join(sre.Messages.MS.NESTED)+t},sre.NemethUtil.radicalNestingDepth=function(e,t){return t=t||0,e.parentNode?sre.NemethUtil.radicalNestingDepth(e.parentNode,"root"===e.tagName||"sqrt"===e.tagName?t+1:t):t},sre.NemethUtil.openingRadical=function(e){return sre.NemethUtil.nestedRadical(e,sre.Messages.MS.STARTROOT)},sre.NemethUtil.closingRadical=function(e){return sre.NemethUtil.nestedRadical(e,sre.Messages.MS.ENDROOT)},sre.NemethUtil.indexRadical=function(e){return sre.NemethUtil.nestedRadical(e,sre.Messages.MS.ROOTINDEX)},sre.NemethUtil.enlargeFence=function(e){if(1===e.length)return"⠠"+e;var t=e.split("");return t.every(function(e){return"⠳"===e})?"⠠"+t.join("⠠"):e.slice(0,1)+"⠠"+e.slice(1)},sre.Grammar.getInstance().setCorrection("enlargeFence",sre.NemethUtil.enlargeFence),sre.NemethUtil.NUMBER_PROPAGATORS_=[sre.SemanticAttr.Type.MULTIREL,sre.SemanticAttr.Type.RELSEQ,sre.SemanticAttr.Type.PUNCTUATED,sre.SemanticAttr.Type.APPL],sre.NemethUtil.checkParent_=function(e){if(e=e.parent,!e)return!1;var t=e.type;return-1!==sre.NemethUtil.NUMBER_PROPAGATORS_.indexOf(t)||t===sre.SemanticAttr.Type.PREFIXOP&&e.role===sre.SemanticAttr.Role.NEGATIVE},sre.NemethUtil.propagateNumber=function(e,t){return e.childNodes.length?(sre.NemethUtil.checkParent_(e)&&(t.number=!0),["",t]):(sre.NemethUtil.checkParent_(e)&&(t.number=!0),[t.number?"number":"",{number:!1}])},sre.NemethUtil.numberIndicator=function(){return new sre.SemanticVisitor("nemeth",sre.NemethUtil.propagateNumber,{number:!0})},sre.NemethUtil.addAnnotators=function(){sre.SemanticAnnotations.getInstance().register(sre.NemethUtil.numberIndicator())},sre.NemethUtil.componentString_={2:"CSFbaseline",1:"CSFsubscript",0:"CSFsuperscript"},sre.NemethUtil.childNumber_={4:2,3:3,2:1,1:4,0:5},sre.NemethUtil.generateTensorRuleStrings_=function(e){var t,n,s=[],o="";e=parseInt(e,2);for(t=0;5>t;t++)n="children/*["+sre.NemethUtil.childNumber_[t]+"]",e&1?o="[t] "+sre.NemethUtil.componentString_[t%3]+"Verbose; [n] "+n+";"+o:s.unshift("name("+n+')="empty"'),e>>=1;return s.push(o),s},sre.NemethUtil.generateTensorRules=function(e){i=goog.bind(e.defineRule,e),e=goog.bind(e.defineRulesAlias,e);for(var t,n,s,o,i,r="11111 11110 11101 11100 10111 10110 10101 10100 01111 01110 01101 01100".split(" "),a=0;t=r[a];a++)n="tensor"+t,t=sre.NemethUtil.generateTensorRuleStrings_(t),s=t.pop(),o=[n,"default",s,"self::tensor"].concat(t),i.apply(null,o),s+="; [t]"+sre.NemethUtil.componentString_[2]+"Verbose",n+="-baseline",o=[n,"default",s,"self::tensor","following-sibling::*"].concat(t),i.apply(null,o),n=[n,"self::tensor","not(following-sibling::*)","ancestor::fraction|ancestor::punctuated|ancestor::fenced|ancestor::root|ancestor::sqrt|ancestor::relseq|ancestor::multirel|@embellished"].concat(t),e.apply(null,n)},sre.NemethRules={locale:"nemeth",modality:"braille",domain:"default",functions:[["CQF","CQFspaceoutNumber",sre.MathspeakUtil.spaceoutNumber],["CQF","CQFspaceoutIdentifier",sre.MathspeakUtil.spaceoutIdentifier],["CSF","CSFspaceoutText",sre.MathspeakUtil.spaceoutText],["CSF","CSFopenFraction",sre.NemethUtil.openingFraction],["CSF","CSFcloseFraction",sre.NemethUtil.closingFraction],["CSF","CSFoverFraction",sre.NemethUtil.overFraction],["CSF","CSFoverBevFraction",sre.NemethUtil.overBevelledFraction],["CSF","CSFopenRadicalVerbose",sre.NemethUtil.openingRadical],["CSF","CSFcloseRadicalVerbose",sre.NemethUtil.closingRadical],["CSF","CSFindexRadicalVerbose",sre.NemethUtil.indexRadical],["CSF","CSFsuperscriptVerbose",sre.MathspeakUtil.superscriptVerbose],["CSF","CSFsubscriptVerbose",sre.MathspeakUtil.subscriptVerbose],["CSF","CSFbaselineVerbose",sre.MathspeakUtil.baselineVerbose],["CSF","CSFunderscript",sre.MathspeakUtil.nestedUnderscore],["CSF","CSFoverscript",sre.MathspeakUtil.nestedOverscore],["CTXF","CTXFordinalCounter",sre.NumbersUtil.ordinalCounter],["CTXF","CTXFcontentIterator",sre.StoreUtil.contentIterator],["CQF","CQFdetIsSimple",sre.MathspeakUtil.determinantIsSimple],["CSF","CSFRemoveParens",sre.MathspeakUtil.removeParens],["CQF","CQFresetNesting",sre.MathspeakUtil.resetNestingDepth]],rules:["Rule;stree;default;[n] ./*[1];self::stree;CQFresetNesting".split(";"),["Rule","unknown","default","[n] text()","self::unknown"],'Rule;protected;default;[t] text();self::*;@role="protected"'.split(";"),["Rule","omit-empty","default","[p] (pause:100)","self::empty"],'Rule;blank-empty;default;[t] "⠀";self::empty;count(../*)=1;name(../..)="cell" or name(../..)="line"'.split(";"),'Rule{font{default{[t] @font (grammar:localFont); [n] . (grammar:ignoreFont=@font){self::*{@font{not(contains(@grammar, "ignoreFont")){@font!="normal"'.split("{"),'Rule{font-identifier-short{default{[t] @font (grammar:localFont); [n] . (grammar:ignoreFont=@font){self::identifier{string-length(text())=1{@font{not(contains(@grammar, "ignoreFont")){@font="normal"{""=translate(text(), "abcdefghijklmnopqrstuvwxyzαβγδεζηθικλμνξοπρςστυφχψωABCDEFGHIJKLMNOPQRSTUVWXYZΑΒΓΔΕΖΗΘΙΚΛΜΝΞΟΠΡΣΣΤΥΦΧΨΩ", ""){@role!="unit"'.split("{"),'Rule{font-identifier{default{[t] @font (grammar:localFont); [n] . (grammar:ignoreFont=@font){self::identifier{string-length(text())=1{@font{@font="normal"{not(contains(@grammar, "ignoreFont")){@role!="unit"'.split("{"),'Rule;omit-font;default;[n] . (grammar:ignoreFont=@font);self::identifier;string-length(text())=1;@font;@role!="greekletter";not(contains(@grammar, "ignoreFont"));@font="italic"'.split(";"),'Rule{number-indicator{default{[t] "⠼"; [n] text() (pause:10){self::number{contains(@annotation, "nemeth:number"){not(ancestor::sqrt){not(ancestor::root){not(ancestor::fraction)'.split("{"),["Rule","number","default","[n] text()","self::number"],'Rule,mixed-number,default,[n] children/*[1]; [t] "⠸⠹"; [n] children/*[2]/children/*[1]; [t] "⠌"; [n] children/*[2]/children/*[2]; [t] "⠸⠼",self::number,@role="mixed"'.split(","),'Rule{number-with-chars{default{[t] "⠼"; [m] CQFspaceoutNumber{self::number{"" != translate(text(), "0123456789.,", ""){text() != translate(text(), "0123456789.,", "")'.split("{"),'Rule{number-as-upper-word{default{[t] "UpperWord"; [t] CSFspaceoutText{self::number{string-length(text())>1{text()=translate(text(), "abcdefghijklmnopqrstuvwxyzαβγδεζηθικλμνξοπρςστυφχψω", "ABCDEFGHIJKLMNOPQRSTUVWXYZΑΒΓΔΕΖΗΘΙΚΛΜΝΞΟΠΡΣΣΤΥΦΧΨΩ"){""=translate(text(), "ABCDEFGHIJKLMNOPQRSTUVWXYZΑΒΓΔΕΖΗΘΙΚΛΜΝΞΟΠΡΣΣΤΥΦΧΨΩ","")'.split("{"),'Rule{number-baseline{default{[t] "⠐"; [n] text(){self::number{not(contains(@grammar, "ignoreFont")){preceding-sibling::identifier{preceding-sibling::*[1][@role="latinletter" or @role="greekletter" or @role="otherletter"]{parent::*/parent::infixop[@role="implicit"]'.split("{"),'Rule{number-baseline-font{default{[t] "⠐"; [t] @font; [n] . (grammar:ignoreFont=@font){self::number{@font{not(contains(@grammar, "ignoreFont")){@font!="normal"{preceding-sibling::identifier{preceding-sibling::*[@role="latinletter" or @role="greekletter" or @role="otherletter"]{parent::*/parent::infixop[@role="implicit"]'.split("{"),'Rule;identifier;default;[n] text();self::identifier;@role="protected"'.split(";"),'Rule,negative,default,[t] "⠤"; [n] children/*[1],self::prefixop,@role="negative"'.split(","),["Rule","prefix","default","[n] text(); [n] children/*[1]","self::prefixop"],["Rule","postfix","default","[n] children/*[1]; [n] text()","self::postfixop"],["Rule","binary-operation","default","[m] children/* (sepFunc:CTXFcontentIterator);","self::infixop"],'Rule;implicit;default;[m] children/*;self::infixop;@role="implicit"'.split(";"),["Aliases","implicit","self::infixop",'@role="leftsuper" or @role="leftsub" or @role="rightsuper" or @role="rightsub"'],["Rule","function-named","default",'[n] children/*[1]; [t] "⠀"; [n] children/*[2]',"self::appl"],'Rule,function-prefix,default,[n] content/*[1]; [t] "⠀"; [n] children/*[1],self::prefixop,content/*[1][@role="infix function"]'.split(","),'Rule,function-infix,default,[n] children/*[1]; [n] content/*[1]; [t] "⠀"; [n] children/*[2],self::infixop,@role="infix function"'.split(","),'Rule,function-simple,default,[n] children/*[1]; [n] children/*[2],self::appl,children/*[1][@role="simple function"]'.split(","),["Rule","fences-open-close","default","[n] content/*[1]; [n] children/*[1]; [n] content/*[2]","self::fenced"],'Rule,fences-neutral,default,[n] content/*[1]; [n] children/*[1]; [n] content/*[2],self::fenced,@role="neutral"'.split(","),["Rule","text","default","[n] text()","self::text"],'Rule;factorial;default;[t] "⠯";self::punctuation;text()="!";name(preceding-sibling::*[1])!="text"'.split(";"),'Rule;single-prime;default;[t] "⠄";self::punctuated;@role="prime";count(children/*)=1'.split(";"),'Rule;double-prime;default;[t] "⠄⠄";self::punctuated;@role="prime";count(children/*)=2'.split(";"),'Rule;triple-prime;default;[t] "⠄⠄⠄";self::punctuated;@role="prime";count(children/*)=3'.split(";"),'Rule;quadruple-prime;default;[t] "⠄⠄⠄⠄";self::punctuated;@role="prime";count(children/*)=4'.split(";"),["Rule","fraction","default","[t] CSFopenFraction; [n] children/*[1]; [t] CSFoverFraction; [n] children/*[2]; [t] CSFcloseFraction","self::fraction"],'Rule{bevelled-fraction{default{[t] CSFopenFraction; [n] children/*[1]; [t] CSFoverBevFraction; [n] children/*[2]; [t] CSFcloseFraction{self::fraction{contains(@annotation, "general:bevelled")'.split("{"),["Rule","sqrt","default","[t] CSFopenRadicalVerbose; [n] children/*[1]; [t] CSFcloseRadicalVerbose","self::sqrt"],["Rule","root","default",'[t] CSFindexRadicalVerbose; [n] children/*[1];[t] "⠜"; [n] children/*[2]; [t] CSFcloseRadicalVerbose',"self::root"],'Rule,limboth,default,[t] "⠐"; [n] children/*[1]; [t] CSFunderscript; [n] children/*[2];[t] CSFoverscript; [n] children/*[3],self::limboth,name(../..)="underscore" or name(../..)="overscore",following-sibling::*[@role!="underaccent" and @role!="overaccent"]'.split(","),'Rule,limlower,default,[t] "⠐"; [n] children/*[1]; [t] CSFunderscript; [n] children/*[2];,self::limlower,name(../..)="underscore" or name(../..)="overscore",following-sibling::*[@role!="underaccent" and @role!="overaccent"]'.split(","),'Rule,limupper,default,[t] "⠐"; [n] children/*[1]; [t] CSFoverscript; [n] children/*[2];,self::limupper,name(../..)="underscore" or name(../..)="overscore",following-sibling::*[@role!="underaccent" and @role!="overaccent"]'.split(","),'Aliases;limlower;self::underscore;@role="limit function";name(../..)="underscore" or name(../..)="overscore";following-sibling::*[@role!="underaccent" and @role!="overaccent"]'.split(";"),'Aliases;limlower;self::underscore;children/*[2][@role!="underaccent"];name(../..)="underscore" or name(../..)="overscore";following-sibling::*[@role!="underaccent" and @role!="overaccent"]'.split(";"),'Aliases;limupper;self::overscore;children/*[2][@role!="overaccent"];name(../..)="underscore" or name(../..)="overscore";following-sibling::*[@role!="underaccent" and @role!="overaccent"]'.split(";"),["Rule","limboth-end","default",'[t] "⠐"; [n] children/*[1]; [t] CSFunderscript; [n] children/*[2];[t] CSFoverscript; [n] children/*[3]; [t] "⠻"',"self::limboth"],["Rule","limlower-end","default",'[t] "⠐"; [n] children/*[1]; [t] CSFunderscript; [n] children/*[2]; [t] "⠻"',"self::limlower"],["Rule","limupper-end","default",'[t] "⠐"; [n] children/*[1]; [t] CSFoverscript; [n] children/*[2]; [t] "⠻"',"self::limupper"],["Aliases","limlower-end","self::underscore",'@role="limit function"'],["Aliases","limlower-end","self::underscore"],["Aliases","limupper-end","self::overscore"],["Rule","integral","default","[n] children/*[1]; [n] children/*[2]; [n] children/*[3];","self::integral"],'Rule,integral,default,[n] children/*[1]; [t] "⠰"; [n] children/*[2];[t] "⠘"; [n] children/*[3]; [t] "⠐",self::limboth,@role="integral"'.split(","),["Rule","bigop","default","[n] children/*[1]; [n] children/*[2];","self::bigop"],["Rule","relseq","default","[m] children/* (sepFunc:CTXFcontentIterator)","self::relseq"],'Rule,equality,default,[n] children/*[1]; [n] content/*[1]; [n] children/*[2],self::relseq,@role="equality",count(./children/*)=2'.split(","),'Rule;multi-equality;default;[m] children/* (sepFunc:CTXFcontentIterator);self::relseq;@role="equality";count(./children/*)>2'.split(";"),["Rule","multrel","default","[m] children/* (sepFunc:CTXFcontentIterator)","self::multirel"],["Rule","subscript","default","[n] children/*[1]; [t] CSFsubscriptVerbose; [n] children/*[2]","self::subscript"],'Rule,subscript-simple,default,[n] children/*[1]; [n] children/*[2],self::subscript,name(./children/*[1])="identifier",name(./children/*[2])="number",./children/*[2][@role!="mixed"],./children/*[2][@role!="othernumber"],self::*'.split(","),'Rule,subscript-baseline,default,[n] children/*[1]; [t] CSFsubscriptVerbose; [n] children/*[2]; [t] CSFbaselineVerbose,self::subscript,following-sibling::*,@role!="prefix function",not(name(following-sibling::subscript/children/*[1])="empty" or (name(following-sibling::infixop[@role="implicit"]/children/*[1])="subscript" and name(following-sibling::*/children/*[1]/children/*[1])="empty")) and @role!="subsup",not(following-sibling::*[@role="rightsuper" or @role="rightsub" or @role="leftsub" or @role="leftsub"])'.split(","),'Aliases;subscript-baseline;self::subscript;not(following-sibling::*);ancestor::fenced|ancestor::root|ancestor::sqrt|ancestor::punctuated|ancestor::fraction;not(ancestor::punctuated[@role="leftsuper" or @role="rightsub" or @role="rightsuper" or @role="rightsub"])'.split(";"),["Aliases","subscript-baseline","self::subscript","not(following-sibling::*)","ancestor::relseq|ancestor::multirel",sre.MathspeakUtil.generateBaselineConstraint()],["Aliases","subscript-baseline","self::subscript","not(following-sibling::*)","@embellished"],'Rule,subscript-empty-sup,default,[n] children/*[1]; [n] children/*[2],self::subscript,name(children/*[2])="infixop",name(children/*[2][@role="implicit"]/children/*[1])="superscript",name(children/*[2]/children/*[1]/children/*[1])="empty"'.split(","),["Aliases","subscript-empty-sup","self::subscript",'name(children/*[2])="superscript"','name(children/*[2]/children/*[1])="empty"'],["Rule","superscript","default","[n] children/*[1]; [t] CSFsuperscriptVerbose; [n] children/*[2]","self::superscript"],'Rule,superscript-baseline,default,[n] children/*[1]; [t] CSFsuperscriptVerbose; [n] children/*[2];[t] CSFbaselineVerbose,self::superscript,following-sibling::*,@role!="prefix function",not(name(following-sibling::superscript/children/*[1])="empty" or (name(following-sibling::infixop[@role="implicit"]/children/*[1])="superscript" and name(following-sibling::*/children/*[1]/children/*[1])="empty")) and not(following-sibling::*[@role="rightsuper" or @role="rightsub" or @role="leftsub" or @role="leftsub"])'.split(","),'Aliases;superscript-baseline;self::superscript;not(following-sibling::*);ancestor::punctuated;ancestor::*/following-sibling::* and not(ancestor::punctuated[@role="leftsuper" or @role="rightsub" or @role="rightsuper" or @role="rightsub"])'.split(";"),["Aliases","superscript-baseline","self::superscript","not(following-sibling::*)","ancestor::fraction|ancestor::fenced|ancestor::root|ancestor::sqrt"],["Aliases","superscript-baseline","self::superscript","not(following-sibling::*)","ancestor::relseq|ancestor::multirel","not(@embellished)",sre.MathspeakUtil.generateBaselineConstraint()],'Aliases superscript-baseline self::superscript not(following-sibling::*) @embellished not(children/*[2][@role="prime"])'.split(" "),'Rule,superscript-empty-sub,default,[n] children/*[1]; [n] children/*[2],self::superscript,name(children/*[2])="infixop",name(children/*[2][@role="implicit"]/children/*[1])="subscript",name(children/*[2]/children/*[1]/children/*[1])="empty"'.split(","),["Aliases","superscript-empty-sub","self::superscript",'name(children/*[2])="subscript"','name(children/*[2]/children/*[1])="empty"'],'Rule,prime,default,[n] children/*[1]; [n] children/*[2],self::superscript,children/*[2],children/*[2][@role="prime"]'.split(","),'Rule,prime-subscript,default,[n] children/*[1]/children/*[1]; [n] children/*[2]; [t] CSFsubscriptVerbose; [n] children/*[1]/children/*[2],self::superscript,children/*[2][@role="prime"],name(children/*[1])="subscript",not(following-sibling::*)'.split(","),'Rule,prime-subscript-baseline,default,[n] children/*[1]/children/*[1]; [n] children/*[2]; [t] CSFsubscriptVerbose; [n] children/*[1]/children/*[2]; [t] CSFbaselineVerbose,self::superscript,children/*[2][@role="prime"],name(children/*[1])="subscript",following-sibling::*'.split(","),'Aliases prime-subscript-baseline self::superscript children/*[2][@role="prime"] name(children/*[1])="subscript" not(following-sibling::*) @embellished'.split(" "),'Rule,prime-subscript-simple,default,[n] children/*[1]/children/*[1]; [n] children/*[2];[n] children/*[1]/children/*[2],self::superscript,children/*[2][@role="prime"],name(children/*[1])="subscript",name(children/*[1]/children/*[1])="identifier",name(children/*[1]/children/*[2])="number",children/*[1]/children/*[2][@role!="mixed"],children/*[1]/children/*[2][@role!="othernumber"]'.split(","),'Rule,overscore,default,[t] "⠐"; [n] children/*[1]; [t] "⠣"; [n] children/*[2]; [t] "⠻",self::overscore,children/*[2][@role="overaccent"]'.split(","),'Rule{overscore{default{[n] children/*[1]; [t] "⠣"; [n] children/*[2]{self::overscore{children/*[2][@role="overaccent"]{contains(@grammar, "modified")'.split("{"),'Rule,double-overscore,default,[t] "⠐"; [n] children/*[1] (grammar:"modified"); [t] "⠣"; [n] children/*[2]; [t] "⠻",self::overscore,children/*[2][@role="overaccent"],name(children/*[1])="overscore",children/*[1]/children/*[2][@role="overaccent"]'.split(","),'Rule,underscore,default,[t] "⠐"; [n] children/*[1]; [t] "⠩"; [n] children/*[2]; [t] "⠻",self::underscore,children/*[2][@role="underaccent"]'.split(","),'Rule{underscore{default{[n] children/*[1]; [t] "⠩"; [n] children/*[2]{self::underscore{children/*[2][@role="underaccent"]{contains(@grammar, "modified")'.split("{"),'Rule,double-underscore,default,[t] "⠐"; [n] children/*[1] (grammar:"modified"); [t] "⠩"; [n] children/*[2]; [t] "⠻",self::underscore,children/*[2][@role="underaccent"],name(children/*[1])="underscore",children/*[1]/children/*[2][@role="underaccent"]'.split(","),'Rule,matrix-fence,default,[n] children/*[1];,self::fenced,count(children/*)=1,name(children/*[1])="matrix"'.split(","),["Rule","matrix","default",'[m] children/* (separator:"⠀", join:"");',"self::matrix"],["Aliases","matrix","self::vector"],["Rule","matrix-row","default",'[n] ../../content/*[1] (grammar:enlargeFence); [m] children/* (separator:"⠀"); [n] ../../content/*[2] (grammar:enlargeFence); ',"self::row"],["Aliases","matrix-row","self::line",'@role="vector"'],["Aliases","matrix-row","self::line",'@role="binomial"'],'Rule{row-with-label{default{[t] "with Label"; [n] content/*[1]; [t] "EndLabel"(pause: 200); [m] children/* (ctxtFunc:CTXFordinalCounter,context:"Column"){self::row{content'.split("{"),'Rule;empty-row;default;[t] "⠀" (pause:300);self::row;count(children/*)=0'.split(";"),["Rule","matrix-cell","default","[n] children/*[1]","self::cell"],'Rule;empty-cell;default;[t] "⠀" (pause: 300);self::cell;count(children/*)=0'.split(";"),["Rule","layout","default",'[m] children/* (separator:"⠀", join:"");',"self::table"],["Rule","cases","default",'[n] ../../content/*[1] (grammar:enlargeFence); [m] children/* (separator:"⠀"); [t] "⠐"',"self::cases"],["Aliases","layout","self::multiline"],["Rule","line","default","[m] children/*","self::line"],'Rule,line-with-label,default,[t] "with Label"; [n] content/*[1]; [t] "EndLabel" (pause: 200); [m] children/*,self::line,content'.split(","),'Rule;empty-line;default;[t] "⠀";self::line;count(children/*)=0;not(content)'.split(";"),'Rule,empty-line-with-label,default,[t] "with Label"; [n] content/*[1]; [t] "EndLabel"(pause: 200); [t] "Blank",self::line,count(children/*)=0,content'.split(","),["Rule","enclose","default",'[t] "StartEnclose"; [t] @role (grammar:localEnclose); [n] children/*[1]; [t] "EndEnclose"',"self::enclose"],'Rule,overbar,default,[t] "⠐"; [n] children/*[1]; [t] "⠣⠱⠻",self::enclose,@role="top"'.split(","),'Rule,underbar,default,[t] "⠐"; [n] children/*[1]; [t] "⠩⠱⠻",self::enclose,@role="bottom"'.split(","),'Rule,leftbar,default,[t] "⠳"; [n] children/*[1],self::enclose,@role="left"'.split(","),'Rule,rightbar,default,[n] children/*[1]; [t] "⠳",self::enclose,@role="right"'.split(","),'Rule,crossout,default,[t] "⠪"; [n] children/*[1]; [t] "⠻",self::enclose,@role="updiagonalstrike" or @role="downdiagonalstrike" or @role="horizontalstrike"'.split(","),'Rule,cancel,default,[t] "⠪"; [n] children/*[1]/children/*[1]; [t] "⠪"; [n] children/*[2]; [t] "⠻",self::overscore,@role="updiagonalstrike" or @role="downdiagonalstrike" or @role="horizontalstrike"'.split(","),["Aliases","cancel","self::underscore",'@role="updiagonalstrike" or @role="downdiagonalstrike" or @role="horizontalstrike"'],'Rule,cancel-reverse,default,[t] "⠪"; [n] children/*[2]/children/*[1]; [t] "⠪"; [n] children/*[1]; [t] "⠻",self::overscore,name(children/*[2])="enclose",children/*[2][@role="updiagonalstrike" or @role="downdiagonalstrike" or @role="horizontalstrike"]'.split(","),["Aliases","cancel-reverse","self::underscore",'name(children/*[2])="enclose"','children/*[2][@role="updiagonalstrike" or @role="downdiagonalstrike" or @role="horizontalstrike"]'],'Rule;end-punct;default;[m] children/*;self::punctuated;@role="endpunct"'.split(";"),'Rule,start-punct,default,[n] content/*[1]; [m] children/*[position()>1],self::punctuated,@role="startpunct"'.split(","),'Rule{punctuation{default{[n] text(); [t] "⠐"{self::punctuation{@role="fullstop"{contains(@annotation, "nemeth:number")'.split("{"),'Rule,integral-punct,default,[n] children/*[1]; [n] children/*[3],self::punctuated,@role="integral"'.split(","),["Rule","punctuated","default","[m] children/*","self::punctuated"],'Rule,punctuation-comma,default,[n] text(); [t] "⠀",self::punctuation,parent::*/parent::punctuated,following-sibling::*,@role!="fullstop",@role!="vbar"'.split(","),'Rule,punctuation-ellipses,default,[t] "⠀"; [n] text(); [t] "⠀",self::punctuation,parent::*/parent::punctuated,following-sibling::*,@role="ellipsis",name(preceding-sibling::*[1])!="punctuation"'.split(","),'Rule,punctuation-ellipses,default,[t] "⠀"; [n] text();,self::punctuation,parent::*/parent::punctuated,@role="ellipsis",name(preceding-sibling::*[1])!="punctuation"'.split(","),'Rule,reference-sign,default,[n] children/*[1]; [n] children/*[2],self::superscript,name(children/*[1])="text" or (name(children/*[1])="punctuated" and children/*[1][@role="text"]),name(children/*[2])="operator" or name(children/*[2])="punctuation"'.split(","),'Rule,reference-number,default,[n] children/*[1]; [t] "⠈⠻"; [n] children/*[2]; [t] "⠐",self::superscript,name(children/*[1])="text" or (name(children/*[1])="punctuated" and children/*[1][@role="text"]),name(children/*[2])="number",children/*[2][@role="integer"]'.split(",")],initialize:[sre.NemethUtil.generateTensorRules,sre.NemethUtil.addAnnotators]},sre.PrefixFrench={locale:"fr",modality:"prefix",domain:"default",functions:[["CSF","CSFordinalPosition",sre.NumbersUtil.ordinalPosition]],rules:['Rule,numerator,default,[t] "numérateur"; [p] (pause:200),self::*,name(../..)="fraction",count(preceding-sibling::*)=0'.split(","),'Rule,denominator,default,[t] "dénominateur"; [p] (pause:200),self::*,name(../..)="fraction",count(preceding-sibling::*)=1'.split(","),'Rule,base,default,[t] "base"; [p] (pause:200),self::*,name(../..)="superscript" or name(../..)="subscript" or name(../..)="overscore" or name(../..)="underscore" or name(../..)="tensor" or name(../..)="limlower" or name(../..)="limupper",count(preceding-sibling::*)=0'.split(","),'Rule,base-limit,default,[t] "base"; [p] (pause:200),self::*,name(../..)="limboth"'.split(","),'Rule,exponent,default,[t] "exposant"; [p] (pause:200),self::*,name(../..)="superscript",count(preceding-sibling::*)=1'.split(","),'Rule,subscript,default,[t] "indice"; [p] (pause:200),self::*,name(../..)="subscript",count(preceding-sibling::*)=1'.split(","),'Rule,overscript,default,[t] "indice suscrit"; [p] (pause:200),self::*,name(../..)="overscore" or name(../..)="limupper" or name(../..)="limboth",count(preceding-sibling::*)=1 or count(preceding-sibling::*)=2'.split(","),'Rule,underscript,default,[t] "indice souscrit"; [p] (pause:200),self::*,name(../..)="underscore" or name(../..)="limlower" or name(../..)="limboth",count(preceding-sibling::*)=1'.split(","),'Rule,radicand,default,[t] "radicande"; [p] (pause:200),self::*,name(../..)="sqrt"'.split(","),'Rule,radicand,default,[t] "radicande"; [p] (pause:200),self::*,name(../..)="root",count(preceding-sibling::*)=1'.split(","),'Rule,index,default,[t] "indice"; [p] (pause:200),self::*,name(../..)="root",count(preceding-sibling::*)=0'.split(","),'Rule,leftsub,default,[t] "indice inférieur gauche"; [p] (pause:200),self::*,name(../..)="tensor",@role="leftsub"'.split(","),'Rule,leftsub,default,[t] CSFordinalPosition (grammar:gender="male"); [t] "indice inférieur gauche"; [p] (pause:200),self::*,name(../..)="punctuated",name(../../../..)="tensor",../../@role="leftsub"'.split(","),'Rule,leftsuper,default,[t] "indice supérieur gauche"; [p] (pause:200),self::*,name(../..)="tensor",@role="leftsuper"'.split(","),'Rule,leftsuper,default,[t] CSFordinalPosition (grammar:gender="male"); [t] "indice supérieur gauche"; [p] (pause:200),self::*,name(../..)="punctuated",name(../../../..)="tensor",../../@role="leftsuper"'.split(","),'Rule,rightsub,default,[t] "indice inférieur droite"; [p] (pause:200),self::*,name(../..)="tensor",@role="rightsub"'.split(","),'Rule,rightsub,default,[t] CSFordinalPosition (grammar:gender="male"); [t] "indice inférieur droite"; [p] (pause:200),self::*,name(../..)="punctuated",name(../../../..)="tensor",../../@role="rightsub"'.split(","),'Rule,rightsuper,default,[t] "indice supérieur droite"; [p] (pause:200),self::*,name(../..)="tensor",@role="rightsuper"'.split(","),'Rule,rightsuper,default,[t] CSFordinalPosition (grammar:gender="male"); [t] "indice supérieur droite"; [p] (pause:200),self::*,name(../..)="punctuated",name(../../../..)="tensor",../../@role="rightsuper"'.split(","),`Rule,choice,default,[t] "nombre d'éléments choisis"; [p] (pause:200),self::line,@role="binomial",parent::*/parent::vector,count(preceding-sibling::*)=1`.split(","),`Rule,select,default,[t] "nombre d'éléments disponibles"; [p] (pause:200),self::line,@role="binomial",parent::*/parent::vector,count(preceding-sibling::*)=0`.split(","),["Rule","row","default",'[t] CSFordinalPosition (grammar:gender="female"); [t] "rangée"; [p] (pause:200)',"self::row"],["Aliases","row","self::line"],'Rule{cell{default{[n] ../..; [t] CSFordinalPosition (grammar:gender="female"); [t] "colonne"; [p] (pause:200){self::cell{contains(@grammar,"depth")'.split("{"),["Rule","cell","default",'[t] CSFordinalPosition (grammar:gender="female"); [t] "colonne"; [p] (pause:200)',"self::cell"]]},sre.PrefixGerman={modality:"prefix",locale:"de",domain:"default",functions:[["CSF","CSFordinalPosition",sre.NumbersUtil.ordinalPosition]],rules:['Rule,numerator,default,[t] "Zähler"; [p] (pause:200),self::*,name(../..)="fraction",count(preceding-sibling::*)=0'.split(","),'Rule,denominator,default,[t] "Nenner"; [p] (pause:200),self::*,name(../..)="fraction",count(preceding-sibling::*)=1'.split(","),'Rule,base,default,[t] "Basis"; [p] (pause:200),self::*,name(../..)="superscript" or name(../..)="subscript" or name(../..)="overscore" or name(../..)="underscore" or name(../..)="tensor",count(preceding-sibling::*)=0'.split(","),'Rule,exponent,default,[t] "Exponent"; [p] (pause:200),self::*,name(../..)="superscript",count(preceding-sibling::*)=1'.split(","),'Rule,subscript,default,[t] "Index"; [p] (pause:200),self::*,name(../..)="subscript",count(preceding-sibling::*)=1'.split(","),'Rule,overscript,default,[t] "Oberer Grenzwert"; [p] (pause:200),self::*,name(../..)="overscore",count(preceding-sibling::*)=1'.split(","),'Rule,underscript,default,[t] "Unterer Grenzwert"; [p] (pause:200),self::*,name(../..)="underscore",count(preceding-sibling::*)=1'.split(","),'Rule,radicand,default,[t] "Radikand"; [p] (pause:200),self::*,name(../..)="sqrt"'.split(","),'Rule,radicand,default,[t] "Radikand"; [p] (pause:200),self::*,name(../..)="root",count(preceding-sibling::*)=1'.split(","),'Rule,index,default,[t] "Wurzelexponent"; [p] (pause:200),self::*,name(../..)="root",count(preceding-sibling::*)=0'.split(","),'Rule,leftsub,default,[t] "linker unterer Index"; [p] (pause:200),self::*,name(../..)="tensor",@role="leftsub"'.split(","),'Rule,leftsub,default,[t] CSFordinalPosition; [t] "linker unterer Index"; [p] (pause:200),self::*,name(../..)="punctuated",name(../../../..)="tensor",../../@role="leftsub"'.split(","),'Rule,leftsuper,default,[t] "linker oberer Index"; [p] (pause:200),self::*,name(../..)="tensor",@role="leftsuper"'.split(","),'Rule,leftsuper,default,[t] CSFordinalPosition; [t] "linker oberer Index"; [p] (pause:200),self::*,name(../..)="punctuated",name(../../../..)="tensor",../../@role="leftsuper"'.split(","),'Rule,rightsub,default,[t] "rechter unterer Index"; [p] (pause:200),self::*,name(../..)="tensor",@role="rightsub"'.split(","),'Rule,rightsub,default,[t] CSFordinalPosition; [t] "rechter unterer Index"; [p] (pause:200),self::*,name(../..)="punctuated",name(../../../..)="tensor",../../@role="rightsub"'.split(","),'Rule,rightsuper,default,[t] "rechter oberer Index"; [p] (pause:200),self::*,name(../..)="tensor",@role="rightsuper"'.split(","),'Rule,rightsuper,default,[t] CSFordinalPosition; [t] "rechter oberer Index"; [p] (pause:200),self::*,name(../..)="punctuated",name(../../../..)="tensor",../../@role="rightsuper"'.split(","),'Rule,choice,default,[t] "Grundgesamtheit"; [p] (pause:200),self::line,@role="binomial",parent::*/parent::vector,count(preceding-sibling::*)=0'.split(","),'Rule,select,default,[t] "Stichprobengröße"; [p] (pause:200),self::line,@role="binomial",parent::*/parent::vector,count(preceding-sibling::*)=1'.split(","),["Rule","row","default",'[t] CSFordinalPosition; [t] "Zeile"; [p] (pause:200)',"self::row"],["Aliases","row","self::line"],'Rule{cell{default{[n] ../..; [t] CSFordinalPosition; [t] "Spalte"; [p] (pause:200){self::cell{contains(@grammar,"depth")'.split("{"),["Rule","cell","default",'[t] CSFordinalPosition; [t] "Spalte"; [p] (pause:200)',"self::cell"]]},sre.PrefixRules={modality:"prefix",domain:"default",functions:[["CSF","CSFordinalPosition",sre.NumbersUtil.ordinalPosition]],rules:['Rule,numerator,default,[t] "Numerator"; [p] (pause:200),self::*,name(../..)="fraction",count(preceding-sibling::*)=0'.split(","),'Rule,denominator,default,[t] "Denominator"; [p] (pause:200),self::*,name(../..)="fraction",count(preceding-sibling::*)=1'.split(","),'Rule,base,default,[t] "Base"; [p] (pause:200),self::*,name(../..)="superscript" or name(../..)="subscript" or name(../..)="overscore" or name(../..)="underscore" or name(../..)="tensor",count(preceding-sibling::*)=0'.split(","),'Rule,exponent,default,[t] "Exponent"; [p] (pause:200),self::*,name(../..)="superscript",count(preceding-sibling::*)=1'.split(","),'Rule,subscript,default,[t] "Subscript"; [p] (pause:200),self::*,name(../..)="subscript",count(preceding-sibling::*)=1'.split(","),'Rule,overscript,default,[t] "Overscript"; [p] (pause:200),self::*,name(../..)="overscore",count(preceding-sibling::*)=1'.split(","),'Rule,underscript,default,[t] "Underscript"; [p] (pause:200),self::*,name(../..)="underscore",count(preceding-sibling::*)=1'.split(","),'Rule,radicand,default,[t] "Radicand"; [p] (pause:200),self::*,name(../..)="sqrt"'.split(","),'Rule,radicand,default,[t] "Radicand"; [p] (pause:200),self::*,name(../..)="root",count(preceding-sibling::*)=1'.split(","),'Rule,index,default,[t] "Index"; [p] (pause:200),self::*,name(../..)="root",count(preceding-sibling::*)=0'.split(","),'Rule,leftsub,default,[t] "Left Subscript"; [p] (pause:200),self::*,name(../..)="tensor",@role="leftsub"'.split(","),'Rule,leftsub,default,[t] CSFordinalPosition; [t] "Left Subscript"; [p] (pause:200),self::*,name(../..)="punctuated",name(../../../..)="tensor",../../@role="leftsub"'.split(","),'Rule,leftsuper,default,[t] "Left Superscript"; [p] (pause:200),self::*,name(../..)="tensor",@role="leftsuper"'.split(","),'Rule,leftsuper,default,[t] CSFordinalPosition; [t] "Left Superscript"; [p] (pause:200),self::*,name(../..)="punctuated",name(../../../..)="tensor",../../@role="leftsuper"'.split(","),'Rule,rightsub,default,[t] "Right Subscript"; [p] (pause:200),self::*,name(../..)="tensor",@role="rightsub"'.split(","),'Rule,rightsub,default,[t] CSFordinalPosition; [t] "Right Subscript"; [p] (pause:200),self::*,name(../..)="punctuated",name(../../../..)="tensor",../../@role="rightsub"'.split(","),'Rule,rightsuper,default,[t] "Right Superscript"; [p] (pause:200),self::*,name(../..)="tensor",@role="rightsuper"'.split(","),'Rule,rightsuper,default,[t] CSFordinalPosition; [t] "Right Superscript"; [p] (pause:200),self::*,name(../..)="punctuated",name(../../../..)="tensor",../../@role="rightsuper"'.split(","),'Rule,choice,default,[t] "Choice Quantity"; [p] (pause:200),self::line,@role="binomial",parent::*/parent::vector,count(preceding-sibling::*)=0'.split(","),'Rule,select,default,[t] "Selection Quantity"; [p] (pause:200),self::line,@role="binomial",parent::*/parent::vector,count(preceding-sibling::*)=1'.split(","),["Rule","row","default",'[t] CSFordinalPosition; [t] "Row"; [p] (pause:200)',"self::row"],["Aliases","row","self::line"],'Rule{cell{default{[n] ../..; [t] CSFordinalPosition; [t] "Column"; [p] (pause:200){self::cell{contains(@grammar,"depth")'.split("{"),["Rule","cell","default",'[t] CSFordinalPosition; [t] "Column"; [p] (pause:200)',"self::cell"]]},sre.PrefixSpanish={locale:"es",modality:"prefix",domain:"default",functions:[["CSF","CSFordinalPosition",sre.NumbersUtil.ordinalPosition]],rules:['Rule,numerator,default,[t] "numerador"; [p] (pause:200),self::*,name(../..)="fraction",count(preceding-sibling::*)=0'.split(","),'Rule,denominator,default,[t] "denominador"; [p] (pause:200),self::*,name(../..)="fraction",count(preceding-sibling::*)=1'.split(","),'Rule,base,default,[t] "base"; [p] (pause:200),self::*,name(../..)="superscript" or name(../..)="subscript" or name(../..)="overscore" or name(../..)="underscore" or name(../..)="tensor",count(preceding-sibling::*)=0'.split(","),'Rule,exponent,default,[t] "exponente"; [p] (pause:200),self::*,name(../..)="superscript",count(preceding-sibling::*)=1'.split(","),'Rule,subscript,default,[t] "subíndice"; [p] (pause:200),self::*,name(../..)="subscript",count(preceding-sibling::*)=1'.split(","),'Rule,overscript,default,[t] "sobreíndice"; [p] (pause:200),self::*,name(../..)="overscore",count(preceding-sibling::*)=1'.split(","),'Rule,underscript,default,[t] "bajoíndice"; [p] (pause:200),self::*,name(../..)="underscore",count(preceding-sibling::*)=1'.split(","),'Rule,radicand,default,[t] "radicand"; [p] (pause:200),self::*,name(../..)="sqrt"'.split(","),'Rule,radicand,default,[t] "radicand"; [p] (pause:200),self::*,name(../..)="root",count(preceding-sibling::*)=1'.split(","),'Rule,index,default,[t] "índice"; [p] (pause:200),self::*,name(../..)="root",count(preceding-sibling::*)=0'.split(","),'Rule,leftsub,default,[t] "subíndice izquierdo"; [p] (pause:200),self::*,name(../..)="tensor",@role="leftsub"'.split(","),'Rule,leftsub,default,[t] CSFordinalPosition (grammar:gender="male"); [t] "subíndice izquierdo"; [p] (pause:200),self::*,name(../..)="punctuated",name(../../../..)="tensor",../../@role="leftsub"'.split(","),'Rule,leftsuper,default,[t] "superíndice izquierdo"; [p] (pause:200),self::*,name(../..)="tensor",@role="leftsuper"'.split(","),'Rule,leftsuper,default,[t] CSFordinalPosition (grammar:gender="male"); [t] "superíndice izquierdo"; [p] (pause:200),self::*,name(../..)="punctuated",name(../../../..)="tensor",../../@role="leftsuper"'.split(","),'Rule,rightsub,default,[t] "subíndice derecho"; [p] (pause:200),self::*,name(../..)="tensor",@role="rightsub"'.split(","),'Rule,rightsub,default,[t] CSFordinalPosition (grammar:gender="male"); [t] "subíndice derecho"; [p] (pause:200),self::*,name(../..)="punctuated",name(../../../..)="tensor",../../@role="rightsub"'.split(","),'Rule,rightsuper,default,[t] "superíndice derecho"; [p] (pause:200),self::*,name(../..)="tensor",@role="rightsuper"'.split(","),'Rule,rightsuper,default,[t] CSFordinalPosition (grammar:gender="male"); [t] "superíndice derecho"; [p] (pause:200),self::*,name(../..)="punctuated",name(../../../..)="tensor",../../@role="rightsuper"'.split(","),'Rule,choice,default,[t] "cantidad de elección"; [p] (pause:200),self::line,@role="binomial",parent::*/parent::vector,count(preceding-sibling::*)=0'.split(","),'Rule,select,default,[t] "cantidad de selección"; [p] (pause:200),self::line,@role="binomial",parent::*/parent::vector,count(preceding-sibling::*)=1'.split(","),["Rule","row","default",'[t] CSFordinalPosition (grammar:gender="female"); [t] "fila"; [p] (pause:200)',"self::row"],["Aliases","row","self::line"],'Rule{cell{default{[n] ../..; [t] CSFordinalPosition (grammar:gender="female"); [t] "columna"; [p] (pause:200){self::cell{contains(@grammar,"depth")'.split("{"),["Rule","cell","default",'[t] CSFordinalPosition (grammar:gender="female"); [t] "columna"; [p] (pause:200)',"self::cell"]]},sre.SemanticTreeRules={domain:"default",functions:[["CTXF","CTXFnodeCounter",sre.StoreUtil.nodeCounter],["CTXF","CTXFcontentIterator",sre.StoreUtil.contentIterator]],rules:['Rule{collapsed{default{[t] "collapsed"; [n] . (engine:modality=summary,grammar:collapsed){self::*{@alternative{not(contains(@grammar, "collapsed")){self::*{self::*{self::*{self::*{self::*'.split("{"),["Rule","stree","default","[n] ./*[1]","self::stree"],'Rule;factorial;default;[t] "factorial";self::punctuation;text()="!";name(preceding-sibling::*[1])!="text"'.split(";"),["Rule","multrel","default",'[t] "multirelation"; [m] children/* (sepFunc:CTXFcontentIterator)',"self::multirel"],'Rule{variable-equality{default{[t] "equation sequence"; [m] children/* (context:"part",ctxtFunc:CTXFnodeCounter,sepFunc:CTXFcontentIterator){self::relseq[@role="equality"]{count(./children/*)>2{./children/punctuation[@role="ellipsis"]'.split("{"),'Rule{multi-equality{default{[t] "equation sequence"; [m] children/* (context:"part",ctxtFunc:CTXFnodeCounter,sepFunc:CTXFcontentIterator){self::relseq[@role="equality"]{count(./children/*)>2'.split("{"),'Rule,equality,default,[n] children/*[1]; [p] (pause:200); [n] content/*[1] (pause:200);[n] children/*[2],self::relseq[@role="equality"],count(./children/*)=2'.split(","),'Rule,simple-equality,default,[n] children/*[1]; [p] (pause:200); [n] content/*[1] (pause:200);[n] children/*[2],self::relseq[@role="equality"],count(./children/*)=2,./children/identifier or ./children/number'.split(","),'Rule,simple-equality2,default,[n] children/*[1]; [p] (pause:200); [n] content/*[1] (pause:200);[n] children/*[2],self::relseq[@role="equality"],count(./children/*)=2,./children/function or ./children/appl'.split(","),["Rule","relseq","default","[m] children/* (sepFunc:CTXFcontentIterator)","self::relseq"],["Rule","binary-operation","default","[m] children/* (sepFunc:CTXFcontentIterator);","self::infixop"],'Rule,variable-addition,default,[t] "sum with variable number of summands";[p] (pause:400); [m] children/* (sepFunc:CTXFcontentIterator),self::infixop[@role="addition"],count(children/*)>2,children/punctuation[@role="ellipsis"]'.split(","),'Rule,multi-addition,default,[t] "sum with"; [t] count(./children/*); [t] "summands";[p] (pause:400); [m] children/* (sepFunc:CTXFcontentIterator),self::infixop[@role="addition"],count(./children/*)>2'.split(","),["Rule","prefix","default",'[t] "prefix"; [m] content/* (pause 150);[n] children/*[1]',"self::prefixop"],'Rule,negative,default,[t] "negative"; [n] children/*[1],self::prefixop,self::prefixop[@role="negative"]'.split(","),["Rule","postfix","default",'[n] children/*[1]; [t] "postfix"; [m] content/* (pause 300)',"self::postfixop"],["Rule","identifier","default","[n] text()","self::identifier"],["Rule","number","default","[n] text()","self::number"],'Rule,mixed-number,default,[n] children/*[1]; [t] "and"; [n] children/*[2]; ,self::number,@role="mixed"'.split(","),'Rule{font{default{[t] @font (grammar:localFont); [n] . (grammar:ignoreFont=@font){self::*{@font{not(contains(@grammar, "ignoreFont")){@font!="normal"'.split("{"),'Rule{font-identifier-short{default{[t] @font (grammar:localFont); [n] . (grammar:ignoreFont=@font){self::identifier{string-length(text())=1{@font{not(contains(@grammar, "ignoreFont")){@font="normal"{""=translate(text(), "abcdefghijklmnopqrstuvwxyzαβγδεζηθικλμνξοπρςστυφχψωABCDEFGHIJKLMNOPQRSTUVWXYZΑΒΓΔΕΖΗΘΙΚΛΜΝΞΟΠΡΣΣΤΥΦΧΨΩ", ""){@role!="unit"'.split("{"),'Rule{font-identifier{default{[t] @font (grammar:localFont); [n] . (grammar:ignoreFont=@font){self::identifier{string-length(text())=1{@font{@font="normal"{not(contains(@grammar, "ignoreFont")){@role!="unit"'.split("{"),'Rule;omit-font;default;[n] . (grammar:ignoreFont=@font);self::identifier;string-length(text())=1;@font;not(contains(@grammar, "ignoreFont"));@font="italic"'.split(";"),["Rule","fraction","default",'[p] (pause:250); [n] children/*[1] (rate:0.35); [p] (pause:250); [t] "divided by"; [n] children/*[2] (rate:-0.35); [p] (pause:400)',"self::fraction"],["Rule","superscript","default",'[n] children/*[1]; [t] "super"; [n] children/*[2] (pitch:0.35);[p] (pause:300)',"self::superscript"],["Rule","subscript","default",'[n] children/*[1]; [t] "sub"; [n] children/*[2] (pitch:-0.35);[p] (pause:300)',"self::subscript"],'Rule,ellipsis,default,[p] (pause:200); [t] "ellipsis"; [p] (pause:300),self::punctuation,self::punctuation[@role="ellipsis"]'.split(","),'Rule;fence-single;default;[n] text();self::punctuation;self::punctuation[@role="openfence"]'.split(";"),["Aliases","fence-single","self::punctuation",'self::punctuation[@role="closefence"]'],["Aliases","fence-single","self::punctuation",'self::punctuation[@role="vbar"]'],["Aliases","fence-single","self::punctuation",'self::punctuation[@role="application"]'],["Rule","omit-empty","default","[p] (pause:100)","self::empty"],'Rule,fences-open-close,default,[p] (pause:100); [n] content/*[1]; [n] children/*[1]; [n] content/*[2]; [p] (pause:100),self::fenced,@role="leftright"'.split(","),'Rule,fences-open-close-in-appl,default,[p] (pause:200); [n] children/*[1]; [p] (pause:200);,self::fenced[@role="leftright"],./parent::children/parent::appl'.split(","),'Rule,fences-neutral,default,[p] (pause:100); [t] "absolute value of"; [n] children/*[1];[p] (pause:350);,self::fenced,self::fenced[@role="neutral"]'.split(","),["Rule","omit-fences","default","[p] (pause:500); [n] children/*[1]; [p] (pause:200);","self::fenced"],["Rule","matrix","default",'[t] "matrix"; [m] children/* (ctxtFunc:CTXFnodeCounter,context:"row",pause:100)',"self::matrix"],["Rule","matrix-row","default",'[m] children/* (ctxtFunc:CTXFnodeCounter,context:"column",pause:100)','self::row[@role="matrix"]'],["Rule","matrix-cell","default","[n] children/*[1]",'self::cell[@role="matrix"]'],["Rule","vector","default",'[t] "vector"; [m] children/* (ctxtFunc:CTXFnodeCounter,context:"element",pause:100)',"self::vector"],["Rule","cases","default",'[t] "case statement"; [m] children/* (ctxtFunc:CTXFnodeCounter,context:"case",pause:100)',"self::cases"],["Rule","cases-row","default","[m] children/*",'self::row[@role="cases"]'],["Rule","cases-cell","default","[n] children/*[1]",'self::cell[@role="cases"]'],["Rule","row","default",'[m] ./* (ctxtFunc:CTXFnodeCounter,context:"column",pause:100)',"self::row"],'Rule{cases-end{default{[t] "case statement"; [m] children/* (ctxtFunc:CTXFnodeCounter,context:"case",pause:100);[t] "end cases"{self::cases{following-sibling::*'.split("{"),["Rule","multiline","default",'[t] "multiline equation";[m] children/* (ctxtFunc:CTXFnodeCounter,context:"line",pause:100)',"self::multiline"],'Rule{multiline-ineq{default{[t] "multiline inequality";[m] children/* (ctxtFunc:CTXFnodeCounter,context:"row",pause:100){self::multiline{@role="inequality"'.split("{"),["Rule","line","default","[m] children/*","self::line"],["Rule","table","default",'[t] "multiline equation";[m] children/* (ctxtFunc:CTXFnodeCounter,context:"row",pause:200)',"self::table"],'Rule{table-ineq{default{[t] "multiline inequality";[m] children/* (ctxtFunc:CTXFnodeCounter,context:"row",pause:200){self::table{@role="inequality"'.split("{"),["Rule","table-row","default","[m] children/* (pause:100)",'self::row[@role="table"]'],["Aliases","cases-cell",'self::cell[@role="table"]'],'Rule;empty-cell;default;[t] "Blank";self::cell;count(children/*)=0'.split(";"),'Rule,end-punct,default,[m] children/*; [p] (pause:300),self::punctuated,@role="endpunct"'.split(","),'Rule,start-punct,default,[n] content/*[1]; [p] (pause:200); [m] children/*[position()>1],self::punctuated,@role="startpunct"'.split(","),'Rule,integral-punct,default,[n] children/*[1] (rate:0.2); [n] children/*[3] (rate:0.2),self::punctuated,@role="integral"'.split(","),["Rule","punctuated","default","[m] children/* (pause:100)","self::punctuated"],["Rule","function","default","[n] text()","self::function"],["Rule","appl","default","[n] children/*[1]; [n] content/*[1]; [n] children/*[2]","self::appl"],'Rule,sum-only,default,[n] children/*[1]; [t] "from"; [n] children/*[2]; [t] "to";[n] children/*[3],self::limboth,self::limboth[@role="sum"]'.split(","),["Rule","limboth","default",'[n] children/*[1]; [p] (pause 100); [t] "over"; [n] children/*[2];[t] "under"; [n] children/*[3]; [p] (pause 250);',"self::limboth"],["Rule","limlower","default",'[n] children/*[1]; [t] "over"; [n] children/*[2];',"self::limlower"],["Rule","limupper","default",'[n] children/*[1]; [t] "under"; [n] children/*[2];',"self::limupper"],["Rule","largeop","default","[n] text()","self::largeop"],["Rule","bigop","default",'[n] children/*[1]; [p] (pause 100); [t] "over"; [n] children/*[2];[p] (pause 250);',"self::bigop"],["Rule","integral","default","[n] children/*[1]; [p] (pause 100); [n] children/*[2];[p] (pause 200); [n] children/*[3] (rate:0.35);","self::integral"],["Rule","sqrt","default",'[t] "Square root of"; [n] children/*[1] (rate:0.35); [p] (pause:400)',"self::sqrt"],'Rule,square,default,[n] children/*[1]; [t] "squared" (pitch:0.35); [p] (pause:300),self::superscript,children/*[2][text()=2],name(./children/*[1])!="text"'.split(","),'Rule,cube,default,[n] children/*[1]; [t] "cubed" (pitch:0.35); [p] (pause:300),self::superscript,children/*[2][text()=3],name(./children/*[1])!="text"'.split(","),["Rule","root","default",'[t] "root of order"; [n] children/*[1];[t] "over"; [n] children/*[2] (rate:0.35); [p] (pause:400)',"self::root"],["Rule","text","default","[n] text(); [p] (pause:200)","self::text"],'Rule;unit;default;[t] text() (grammar:annotation="unit":translate:plural);self::identifier;@role="unit"'.split(";"),'Rule,unit-square,default,[t] "square"; [n] children/*[1],self::superscript,@role="unit",children/*[2][text()=2],name(children/*[1])="identifier"'.split(","),'Rule,unit-cubic,default,[t] "cubic"; [n] children/*[1],self::superscript,@role="unit",children/*[2][text()=3],name(children/*[1])="identifier"'.split(","),'Rule,reciprocal,default,[t] "reciprocal"; [n] children/*[1],self::superscript,@role="unit",name(children/*[1])="identifier",name(children/*[2])="prefixop",children/*[2][@role="negative"],children/*[2]/children/*[1][text()=1],count(preceding-sibling::*)=0 or preceding-sibling::*[@role!="unit"]'.split(","),'Rule,reciprocal,default,[t] "per"; [n] children/*[1],self::superscript,@role="unit",name(children/*[1])="identifier",name(children/*[2])="prefixop",children/*[2][@role="negative"],children/*[2]/children/*[1][text()=1],preceding-sibling::*[@role="unit"]'.split(","),'Rule;unit-combine;default;[m] children/*;self::infixop;@role="unit"'.split(";"),'Rule,unit-divide,default,[n] children/*[1] (pitch:0.3); [t] "per"; [n] children/*[2] (pitch:-0.3),self::fraction,@role="unit"'.split(",")]},sre.SummaryFrench={locale:"fr",modality:"summary",rules:[["Rule","collapsed-masculine","default.masculine",'[t] "compressé"','contains(@grammar, "collapsed")'],["Rule","collapsed-feminine","default.feminine",'[t] "compressée"','contains(@grammar, "collapsed")'],["Rule","no-collapsed","default.masculine",'[t] ""','not(contains(@grammar, "collapsed"))'],["Rule","no-collapsed","default.feminine",'[t] ""','not(contains(@grammar, "collapsed"))'],["Rule","stree","default.default","[n] ./*[1]","self::stree"],'Rule{abstr-identifier{default.default{[t] "identifiant long"; [n] . (engine:style=masculine){self::identifier{contains(@grammar, "collapsed")'.split("{"),["Rule","abstr-identifier","default.default",'[t] "identifiant"; [n] . (engine:style=masculine)',"self::identifier"],'Rule{abstr-number{default.default{[t] "nombre long"; [n] . (engine:style=masculine){self::number{contains(@grammar, "collapsed")'.split("{"),["Rule","abstr-number","default.default",'[t] "nombre"; [n] . (engine:style=masculine)',"self::number"],'Rule{abstr-mixed-number{default.default{[t] "nombre fractionnaire long"; [n] . (engine:style=masculine){self::number{@role="mixed"{contains(@grammar, "collapsed")'.split("{"),'Rule,abstr-mixed-number,default.default,[t] "nombre fractionnaire"; [n] . (engine:style=masculine),self::number,@role="mixed"'.split(","),["Rule","abstr-text","default.default",'[t] "texte"; [n] . (engine:style=masculine)',"self::text"],["Rule","abstr-function","default.default",'[t] "expression fonctionnelle"; [n] . (engine:style=feminine)',"self::function"],["Rule","abstr-function","mathspeak.brief",'[t] "fonction"; [n] . (engine:style=feminine)',"self::function"],["SpecializedRule","abstr-function","mathspeak.brief","mathspeak.sbrief"],'Rule,abstr-lim,default.default,[t] "fonction de limitation"; [n] . (engine:style=feminine),self::function,@role="limit function"'.split(","),'Rule,abstr-lim,mathspeak.brief,[t] "lim"; [n] . (engine:style=feminine),self::function,@role="limit function"'.split(","),["SpecializedRule","abstr-lim","mathspeak.brief","mathspeak.sbrief"],["Rule","abstr-fraction","default.default",'[t] "fraction"; [n] . (engine:style=feminine)',"self::fraction"],["Rule","abstr-fraction","mathspeak.brief",'[t] "frac"; [n] . (engine:style=feminine)',"self::fraction"],["SpecializedRule","abstr-fraction","mathspeak.brief","mathspeak.sbrief"],'Rule,abstr-continued-fraction,default.default,[t] "fraction continue"; [n] . (engine:style=feminine),self::fraction,children/*[2]/descendant-or-self::*[@role="ellipsis"]'.split(","),'Rule,abstr-continued-fraction,mathspeak.brief,[t] "frac continue"; [n] . (engine:style=feminine),self::fraction,children/*[2]/descendant-or-self::*[@role="ellipsis"]'.split(","),["SpecializedRule","abstr-continued-fraction","mathspeak.brief","mathspeak.sbrief"],["Rule","abstr-sqrt","default.default",'[t] "racine carrée"; [n] . (engine:style=feminine)',"self::sqrt"],'Rule,abstr-sqrt-nested,default.default,[t] "racine carrée imbriquée"; [n] . (engine:style=feminine),self::sqrt,children/*/descendant-or-self::sqrt or children/*/descendant-or-self::root'.split(","),`Rule{abstr-root{default.default{[t] "racine d'indice"; [n] children/*[1] (engine:modality="speech"); [t] "fin indice"; [n] . (engine:style=feminine);{self::root{contains(@grammar, "collapsed"){following-sibling::* or ancestor::*/following-sibling::*`.split("{"),["Rule","abstr-root","default.default",`[t] "racine d'indice"; [n] children/*[1] (engine:modality=speech); [n] . (engine:style=feminine)`,"self::root"],["Rule","abstr-root","mathspeak.brief",'[t] "racine"; [n] . (engine:style=feminine)',"self::root"],["SpecializedRule","abstr-root","mathspeak.brief","mathspeak.sbrief"],`Rule{abstr-root-nested{default.default{[t] "racine imbriquée d'indice"; [n] children/*[1] (engine:modality=speech); [t] "fin indice"; [n] . (engine:style=feminine);{self::root{contains(@grammar, "collapsed"){children/*/descendant-or-self::sqrt or children/*/descendant-or-self::root{following-sibling::* or ancestor::*/following-sibling::*`.split("{"),`Rule,abstr-root-nested,default.default,[t] "racine imbriquée d'indice"; [n] children/*[1] (engine:modality=speech); [n] . (engine:style=feminine),self::root,children/*/descendant-or-self::sqrt or children/*/descendant-or-self::root`.split(","),'Rule,abstr-root-nested,mathspeak.brief,[t] "racine imbriquée"; [n] . (engine:style=feminine),self::root,children/*/descendant-or-self::sqrt or children/*/descendant-or-self::root'.split(","),["SpecializedRule","abstr-root-nested","mathspeak.brief","mathspeak.sbrief"],["Rule","abstr-superscript","default.default",'[t] "puissance"; [n] . (engine:style=feminine)',"self::superscript"],["Rule","abstr-subscript","default.default",'[t] "indice"; [n] . (engine:style=masculine)',"self::subscript"],'Rule,abstr-subsup,default.default,[t] "puissance avec index"; [n] . (engine:style=feminine),self::superscript,name(children/*[1])="subscript"'.split(","),["Rule","abstr-infixop","default.default",'[t] @role (grammar:localRole); [t] "avec"; [t] count(./children/*); [t] "éléments"; [n] . (engine:style=masculine)',"self::infixop"],`Rule,abstr-infixop,default.default,[t] @role (grammar:localRole); [t] "avec un nombre d'éléments variable"; [n] . (engine:style=masculine),self::infixop,count(./children/*)>2,./children/punctuation[@role="ellipsis"]`.split(","),["Rule","abstr-infixop","mathspeak.brief","[t] @role (grammar:localRole); [n] . (engine:style=masculine)","self::infixop"],["SpecializedRule","abstr-infixop","mathspeak.brief","mathspeak.sbrief"],'Rule,abstr-addition,default.default,[t] "somme avec"; [t] count(./children/*); [t] "opérandes"; [n] . (engine:style=feminine),self::infixop,@role="addition"'.split(","),'Rule,abstr-addition,mathspeak.brief,[t] "somme"; [n] . (engine:style=feminine),self::infixop,@role="addition"'.split(","),["SpecializedRule","abstr-addition","mathspeak.brief","mathspeak.sbrief"],`Rule,abstr-var-addition,default.default,[t] "somme avec un nombre variable d'opérandes"; [n] . (engine:style=feminine),self::infixop,@role="addition",count(./children/*)>2,./children/punctuation[@role="ellipsis"]`.split(","),'Rule,abstr-multiplication,default.default,[t] "produit avec"; [t] count(./children/*); [t] "facteurs"; [n] . (engine:style=masculine);,self::infixop,@role="multiplication"'.split(","),'Rule,abstr-multiplication,mathspeak.brief,[t] "produit"; [n] . (engine:style=masculine),self::infixop,@role="multiplication"'.split(","),["SpecializedRule","abstr-multiplication","mathspeak.brief","mathspeak.sbrief"],["Aliases","abstr-multiplication","self::infixop",'@role="implicit"'],'Rule,abstr-var-multiplication,default.default,[t] "produit avec un nombre de facteurs variable"; [n] . (engine:style=masculine),self::infixop,@role="multiplication",count(./children/*)>2,./children/punctuation[@role="ellipsis"]'.split(","),'Aliases abstr-var-multiplication self::infixop @role="implicit" count(./children/*)>2 ./children/punctuation[@role="ellipsis"]'.split(" "),["Rule","abstr-vector","default.default",'[t] "vecteur de dimension"; [t] count(./children/*); [n] . (engine:style=masculine)',"self::vector"],["Rule","abstr-vector","mathspeak.brief",'[t] "vecteur"; [n] . (engine:style=masculine)',"self::vector"],["SpecializedRule","abstr-vector","mathspeak.brief","mathspeak.sbrief"],'Rule,abstr-var-vector,default.default,[t] "vecteur colonne de dimension n"; [n] . (engine:style=masculine),self::vector,./children/*/children/punctuation[@role="ellipsis"]'.split(","),'Rule,abstr-binomial,default.default,[t] "binomial"; [n] . (engine:style=masculine),self::vector,@role="binomial"'.split(","),["SpecializedRule","abstr-binomial","default.default","mathspeak.brief"],["SpecializedRule","abstr-binomial","default.default","mathspeak.sbrief"],'Rule,abstr-determinant,default.default,[t] "déterminant de dimension"; [t] count(./children/*); [n] . (engine:style=masculine),self::matrix,@role="determinant"'.split(","),'Rule,abstr-determinant,mathspeak.brief,[t] "déterminant"; [n] . (engine:style=masculine),self::matrix,@role="determinant"'.split(","),["SpecializedRule","abstr-determinant","mathspeak.brief","mathspeak.sbrief"],'Rule,abstr-var-determinant,default.default,[t] "déterminant de dimension n"; [n] . (engine:style=masculine),self::matrix,@role="determinant",./children/*/children/*/children/punctuation[@role="ellipsis"]'.split(","),'Rule,abstr-squarematrix,default.default,[t] "matrice carrée de dimension"; [t] count(./children/*); [n] . (engine:style=feminine),self::matrix,@role="squarematrix"'.split(","),'Rule,abstr-squarematrix,mathspeak.brief,[t] "matrice carrée"; [n] . (engine:style=feminine),self::matrix,@role="squarematrix"'.split(","),["SpecializedRule","abstr-squarematrix","mathspeak.brief","mathspeak.sbrief"],'Rule,abstr-rowvector,default.default,[t] "vecteur ligne de dimension"; [t] count(./children/row/children/*); [n] . (engine:style=masculine),self::matrix,@role="rowvector"'.split(","),'Rule,abstr-rowvector,mathspeak.brief,[t] "vecteur ligne"; [n] . (engine:style=masculine),self::matrix,@role="rowvector"'.split(","),["SpecializedRule","abstr-rowvector","mathspeak.brief","mathspeak.sbrief"],'Rule;abstr-var-matrix;default.default;[t] "vecteur ligne de dimension n";self::matrix;@role="rowvector";./children/*/children/*/children/punctuation[@role="ellipsis"]'.split(";"),["Rule","abstr-matrix","default.default",'[t] "matrice"; [t] count(children/*);  [t] "par";[t] count(children/*[1]/children/*); [n] . (engine:style=feminine)',"self::matrix"],["Rule","abstr-matrix","mathspeak.brief",'[t] "matrice"; [n] . (engine:style=feminine)',"self::matrix"],["SpecializedRule","abstr-matrix","mathspeak.brief","mathspeak.sbrief"],'Rule,abstr-var-matrix,default.default,[t] "matrice de dimension n par m"; [n] . (engine:style=feminine),self::matrix,./children/*/children/*/children/punctuation[@role="ellipsis"]'.split(","),["Rule","abstr-cases","default.default",'[t] "déclaration de cas";[t] "avec"; [t] count(children/*); [t] "cas"; [n] . (engine:style=feminine)',"self::cases"],["Rule","abstr-cases","mathspeak.brief",'[t] "déclaration de cas"; [n] . (engine:style=feminine)',"self::cases"],["SpecializedRule","abstr-cases","mathspeak.brief","mathspeak.sbrief"],'Rule,abstr-var-cases,default.default,[t] "déclaration de cas variable"; [n] . (engine:style=feminine),self::cases,./children/row/children/cell/children/punctuation[@role="ellipsis"]or ./children/line/children/punctuation[@role="ellipsis"]'.split(","),["Rule","abstr-punctuated","default.default",'[t] "liste de longueur"; [t] count(children/*) - count(content/*); [t] "séparée par des"; [n] content/*[1] (join:""); [t] "s"; [n] . (engine:style=feminine)',"self::punctuated"],["Rule","abstr-punctuated","mathspeak.brief",'[t] "liste séparée par des"; [n] content/*[1] (join:""); [t] "s"; [n] . (engine:style=feminine)',"self::punctuated"],["SpecializedRule","abstr-punctuated","mathspeak.brief","mathspeak.sbrief"],'Rule,abstr-var-punctuated,default.default,[t] "liste de longueur variable séparée par des"; [n] content/*[1] (join:""); [t] "s"; [n] . (engine:style=feminine),self::punctuated,./children/punctuation[@role="ellipsis"]'.split(","),["Rule","abstr-bigop","default.default","[n] content/*[1]; [n] . (engine:style=masculine)","self::bigop"],["Rule","abstr-integral","default.default",'[t] "intégrale"; [n] . (engine:style=feminine)','@role="integral"'],"Rule,abstr-relation,default.default,[t] @role (grammar:localRole); [n] . (engine:style=masculine);,self::relseq,count(./children/*)=2".split(","),'Rule,abstr-relation-seq,default.default,[t] @role (grammar:localRole); [t] "séquence"; [t] "avec"; [t] count(./children/*); [t] "éléments"; [n] . (engine:style=feminine),self::relseq,count(./children/*)>2'.split(","),'Rule,abstr-relation-seq,mathspeak.brief,[t] @role (grammar:localRole); [t] "séquence"; [n] . (engine:style=feminine),self::relseq,count(./children/*)>2'.split(","),["SpecializedRule","abstr-relation-seq","mathspeak.brief","mathspeak.sbrief"],'Rule,abstr-var-relation,default.default,[t] @role (grammar:localRole); [t] "séquence"; [t] "avec un nombre de éléments variable"; [n] . (engine:style=feminine),self::relseq,count(./children/*)>2,./children/punctuation[@role="ellipsis"]'.split(","),'UniqueAlias abstr-relation default.default self::multirel @role!="unknown" count(./children/*)>2'.split(" "),'Aliases abstr-var-relation self::multirel @role!="unknown" count(./children/*)>2 ./children/punctuation[@role="ellipsis"]'.split(" "),'Rule,abstr-multirel,default.default,[t] "séquence de relation"; [t] "avec"; [t] count(./children/*); [t] "éléments"; [n] . (engine:style=feminine),self::multirel,count(./children/*)>2'.split(","),'Rule,abstr-multirel,mathspeak.brief,[t] "séquence de relation"; [n] . (engine:style=feminine),self::multirel,count(./children/*)>2'.split(","),["SpecializedRule","abstr-multirel","mathspeak.brief","mathspeak.sbrief"],'Rule,abstr-var-multirel,default.default,[t] "séquence de relation avec un nombre de éléments variable"; [n] . (engine:style=feminine),self::multirel,count(./children/*)>2,./children/punctuation[@role="ellipsis"]'.split(","),["Rule","abstr-table","default.default",'[t] "table avec"; [t] count(children/*); [t] "lignes et";[t] count(children/*[1]/children/*); [t] "colonnes"; [n] . (engine:style=feminine);',"self::table"],["Rule","abstr-line","default.default",'[t] "dans"; [t] @role (grammar:localRole); [n] . (engine:style=masculine)',"self::line"],["Rule","abstr-row","default.default",'[t] "dans"; [t] @role (grammar:localRole);[t] count(preceding-sibling::..); [t] "avec";[t] count(children/*); [t] "colonnes"; [n] . (engine:style=feminine)',"self::row"],["Rule","abstr-cell","default.default",'[t] "dans"; [t] @role (grammar:localRole); [n] . (engine:style=feminine);',"self::cell"]]},sre.SummaryGerman={modality:"summary",locale:"de",rules:['Rule;abstr-identifier;default.default;[t] "langer Bezeichner";self::identifier;contains(@grammar, "collapsed")'.split(";"),["Rule","abstr-identifier","default.default",'[t] "Bezeichner"',"self::identifier"],'Rule;abstr-number;default.default;[t] "lange Zahl";self::number;contains(@grammar, "collapsed")'.split(";"),["Rule","abstr-number","default.default",'[t] "Zahl"',"self::number"],'Rule;abstr-mixed-number;default.default;[t] "langer gemischter Bruch";self::number;@role="mixed";contains(@grammar, "collapsed")'.split(";"),'Rule;abstr-mixed-number;default.default;[t] "gemischter Bruch";self::number;@role="mixed"'.split(";"),["Rule","abstr-text","default.default",'[t] "Text"',"self::text"],["Rule","abstr-function","default.default",'[t] "Funktionsausdruck"',"self::function"],["Rule","abstr-function","mathspeak.brief",'[t] "Funktion"',"self::function"],["SpecializedRule","abstr-function","mathspeak.brief","mathspeak.sbrief"],'Rule;abstr-lim;default.default;[t] "Grenzwertfunktion";self::function;@role="limit function"'.split(";"),'Rule;abstr-lim;mathspeak.brief;[t] "Grenzwert";self::function;@role="limit function"'.split(";"),["SpecializedRule","abstr-lim","mathspeak.brief","mathspeak.sbrief"],["Rule","abstr-fraction","default.default",'[t] "Bruch"',"self::fraction"],'Rule;abstr-continued-fraction;default.default;[t] "Kettenbruch";self::fraction;children/*[2]/descendant-or-self::*[@role="ellipsis"]'.split(";"),["Rule","abstr-sqrt","default.default",'[t] "Quadratwurzel"',"self::sqrt"],'Rule;abstr-sqrt-nested;default.default;[t] "verschachtelte Quadratwurzel";self::sqrt;children/*/descendant-or-self::sqrt or children/*/descendant-or-self::root'.split(";"),'Rule{abstr-root{default.default{[t] "Wurzel mit Exponent"; [n] children/*[1] (engine:modality=speech); [t] "Exponentende"{self::root{contains(@grammar, "collapsed"){following-sibling::* or ancestor::*/following-sibling::*'.split("{"),["Rule","abstr-root","default.default",'[t] "Wurzel mit Exponent"; [n] children/*[1] (engine:modality=speech)',"self::root"],["Rule","abstr-root","mathspeak.brief",'[t] "Wurzel"',"self::root"],["SpecializedRule","abstr-root","mathspeak.brief","mathspeak.sbrief"],'Rule{abstr-root-nested{default.default{[t] "verschachtelte Wurzel mit Wurzelexponent"; [n] children/*[1] (engine:modality="speech"); [t] "Ende Wurzelexponent"{self::root{contains(@grammar, "collapsed"){children/*/descendant-or-self::sqrt or children/*/descendant-or-self::root{following-sibling::* or ancestor::*/following-sibling::*'.split("{"),'Rule,abstr-root-nested,default.default,[t] "verschachtelte Wurzel mit Exponent"; [n] children/*[1] (engine:modality="speech"),self::root,children/*/descendant-or-self::sqrt or children/*/descendant-or-self::root'.split(","),'Rule;abstr-root-nested;mathspeak.brief;[t] "verschachtelte Wurzel";self::root;children/*/descendant-or-self::sqrt or children/*/descendant-or-self::root'.split(";"),["SpecializedRule","abstr-root-nested","mathspeak.brief","mathspeak.sbrief"],["Rule","abstr-superscript","default.default",'[t] "Potenz"',"self::superscript"],["Rule","abstr-subscript","default.default",'[t] "Index"',"self::subscript"],'Rule;abstr-subsup;default.default;[t] "Potenz mit Index";self::superscript;name(children/*[1])="subscript"'.split(";"),["Rule","abstr-infixop","default.default",'[t] @role (grammar:localRole); [t] "mit"; [t] count(./children/*); [t] "Elementen"',"self::infixop"],'Rule,abstr-infixop,default.default,[t] @role (grammar:localRole); [t] "mit veränderlicher Anzahl an Elementen",self::infixop,count(./children/*)>2,./children/punctuation[@role="ellipsis"]'.split(","),["Rule","abstr-infixop","mathspeak.brief","[t] @role (grammar:localRole)","self::infixop"],["SpecializedRule","abstr-infixop","mathspeak.brief","mathspeak.sbrief"],'Rule,abstr-addition,default.default,[t] "Summe mit"; [t] count(./children/*); [t] "Summanden",self::infixop,@role="addition"'.split(","),'Rule;abstr-addition;mathspeak.brief;[t] "Summe";self::infixop;@role="addition"'.split(";"),["SpecializedRule","abstr-addition","mathspeak.brief","mathspeak.sbrief"],'Rule;abstr-var-addition;default.default;[t] "Summe mit veränderlicher Anzahl an Summanden";self::infixop;@role="addition";count(./children/*)>2;./children/punctuation[@role="ellipsis"]'.split(";"),'Rule,abstr-multiplication,default.default,[t] "Produkt mit"; [t] count(./children/*); [t] "Faktoren",self::infixop,@role="multiplication"'.split(","),'Rule;abstr-multiplication;mathspeak.brief;[t] "Produkt";self::infixop;@role="multiplication"'.split(";"),["SpecializedRule","abstr-multiplication","mathspeak.brief","mathspeak.sbrief"],["Aliases","abstr-multiplication","self::infixop",'@role="implicit"'],'Rule;abstr-var-multiplication;default.default;[t] "Produkt mit veränderlicher Anzahl an Faktoren";self::infixop;@role="multiplication";count(./children/*)>2;./children/punctuation[@role="ellipsis"]'.split(";"),'Aliases abstr-var-multiplication self::infixop @role="implicit" count(./children/*)>2 ./children/punctuation[@role="ellipsis"]'.split(" "),["Rule","abstr-vector","default.default",'[t] count(./children/*) ; [t] "dimensionaler Vektor"',"self::vector"],["Rule","abstr-vector","mathspeak.brief",'[t] "Vektor"',"self::vector"],["SpecializedRule","abstr-vector","mathspeak.brief","mathspeak.sbrief"],'Rule;abstr-var-vector;default.default;[t] "n dimensionaler Vektor";self::vector;./children/*/children/punctuation[@role="ellipsis"]'.split(";"),'Rule;abstr-binomial;default.default;[t] "Binomialkoeffizient";self::vector;@role="binomial"'.split(";"),["SpecializedRule","abstr-binomial","default.default","mathspeak.brief"],["SpecializedRule","abstr-binomial","default.default","mathspeak.sbrief"],'Rule,abstr-determinant,default.default,[t] count(./children/*); [t] "dimensionale Determinante",self::matrix,@role="determinant"'.split(","),'Rule;abstr-determinant;mathspeak.brief;[t] "Determinante";self::matrix;@role="determinant"'.split(";"),["SpecializedRule","abstr-determinant","mathspeak.brief","mathspeak.sbrief"],'Rule;abstr-var-determinant;default.default;[t] "n dimensionale Determinante";self::matrix;@role="determinant";./children/*/children/*/children/punctuation[@role="ellipsis"]'.split(";"),'Rule,abstr-squarematrix,default.default,[t] count(./children/*); [t] "dimensionale quadratische Matrize",self::matrix,@role="squarematrix"'.split(","),'Rule;abstr-squarematrix;mathspeak.brief;[t] "quadratische Matrize";self::matrix;@role="squarematrix"'.split(";"),["SpecializedRule","abstr-squarematrix","mathspeak.brief","mathspeak.sbrief"],'Rule,abstr-rowvector,default.default,[t] count(./children/row/children/*); [t] "dimensionaler Zeilenvektor",self::matrix,@role="rowvector"'.split(","),'Rule;abstr-rowvector;mathspeak.brief;[t] "Zeilenvektor";self::matrix;@role="rowvector"'.split(";"),["SpecializedRule","abstr-rowvector","mathspeak.brief","mathspeak.sbrief"],'Rule;abstr-var-matrix;default.default;[t] "n dimensionaler Zeilenvektor";self::matrix;@role="rowvector";./children/*/children/*/children/punctuation[@role="ellipsis"]'.split(";"),["Rule","abstr-matrix","default.default",'[t] count(children/*);  [t] "mal";[t] count(children/*[1]/children/*); [t] "Matrize"',"self::matrix"],["Rule","abstr-matrix","mathspeak.brief",'[t] "Matrize"',"self::matrix"],["SpecializedRule","abstr-matrix","mathspeak.brief","mathspeak.sbrief"],'Rule;abstr-var-matrix;default.default;[t] "n mal m dimensionale Matrize";self::matrix;./children/*/children/*/children/punctuation[@role="ellipsis"]'.split(";"),["Rule","abstr-cases","default.default",'[t] "Fallunterscheidung";[t] "mit"; [t] count(children/*); [t] "Fällen"',"self::cases"],["Rule","abstr-cases","mathspeak.brief",'[t] "Fallunterscheidung"',"self::cases"],["SpecializedRule","abstr-cases","mathspeak.brief","mathspeak.sbrief"],'Rule;abstr-var-cases;default.default;[t] "Fallunterscheidung mit veränderlicher Anzahl an Fällen";self::cases;./children/row/children/cell/children/punctuation[@role="ellipsis"]or ./children/line/children/punctuation[@role="ellipsis"]'.split(";"),["Rule","abstr-punctuated","default.default",'[t] "mit"; [n] content/*[1]; [t] "getrennte Liste der Länge"; [t] count(children/*) - count(content/*)',"self::punctuated"],["Rule","abstr-punctuated","mathspeak.brief",'[t] "mit"; [n] content/*[1]; [t] "getrennte Liste";',"self::punctuated"],["SpecializedRule","abstr-punctuated","mathspeak.brief","mathspeak.sbrief"],'Rule,abstr-var-punctuated,default.default,[t] "mit"; [n] content/*[1]; [t] "getrennte Liste";[t] "veränderlicher Länge",self::punctuated,./children/punctuation[@role="ellipsis"]'.split(","),["Rule","abstr-bigop","default.default","[n] content/*[1]","self::bigop"],["Rule","abstr-integral","default.default",'[t] "Integral"','@role="integral"'],"Rule,abstr-relation,default.default,[t] @role (grammar:localRole);,self::relseq,count(./children/*)=2".split(","),'Rule{abstr-relation-seq{default.default{[t] @role (grammar:localRole, join:""); [t] "ssequenz"; [t] "mit"; [t] count(./children/*); [t] "Elementen"{self::relseq{count(./children/*)>2'.split("{"),'Rule{abstr-relation-seq{mathspeak.brief{[t] @role (grammar:localRole, join:""); [t] "ssequenz"{self::relseq{count(./children/*)>2'.split("{"),["SpecializedRule","abstr-relation-seq","mathspeak.brief","mathspeak.sbrief"],'Rule{abstr-var-relation{default.default{[t] @role (grammar:localRole, join:""); [t] "ssequenz";[t] "mit veränderlicher Anzahl an Elementen"{self::relseq{count(./children/*)>2{./children/punctuation[@role="ellipsis"]'.split("{"),'UniqueAlias abstr-relation default.default self::multirel @role!="unknown" count(./children/*)>2'.split(" "),'Aliases abstr-var-relation self::multirel @role!="unknown" count(./children/*)>2 ./children/punctuation[@role="ellipsis"]'.split(" "),'Rule,abstr-multirel,default.default,[t] "Relationsequenz"; [t] "mit"; [t] count(./children/*); [t] "Elementen",self::multirel,count(./children/*)>2'.split(","),'Rule;abstr-multirel;mathspeak.brief;[t] "Relationsequenz";self::multirel;count(./children/*)>2'.split(";"),["SpecializedRule","abstr-multirel","mathspeak.brief","mathspeak.sbrief"],'Rule;abstr-var-multirel;default.default;[t] "Relationsequenz mit veränderlicher Anzahl an Elementen";self::multirel;count(./children/*)>2;./children/punctuation[@role="ellipsis"]'.split(";"),["Rule","abstr-table","default.default",'[t] "Tabelle mit"; [t] count(children/*); [t] "Zeilen und";[t] count(children/*[1]/children/*); [t] "Spalten"',"self::table"],["Rule","abstr-line","default.default",'[t] "in"; [t] @role (grammar:localRole);',"self::line"],["Rule","abstr-row","default.default",'[t] "in"; [t] @role (grammar:localRole);[t] count(preceding-sibling::..); [t] "mit";[t] count(children/*); [t] "Spalten"',"self::row"],["Rule","abstr-cell","default.default",'[t] "in"; [t] @role (grammar:localRole);',"self::cell"]]},sre.SummaryRules={modality:"summary",rules:['Rule;abstr-identifier;default.default;[t] "long identifier";self::identifier;contains(@grammar, "collapsed")'.split(";"),["Rule","abstr-identifier","default.default",'[t] "identifier"',"self::identifier"],'Rule;abstr-number;default.default;[t] "long number";self::number;contains(@grammar, "collapsed")'.split(";"),["Rule","abstr-number","default.default",'[t] "number"',"self::number"],'Rule;abstr-mixed-number;default.default;[t] "long mixed number";self::number;@role="mixed";contains(@grammar, "collapsed")'.split(";"),'Rule;abstr-mixed-number;default.default;[t] "mixed number";self::number;@role="mixed"'.split(";"),["Rule","abstr-text","default.default",'[t] "text"',"self::text"],["Rule","abstr-function","default.default",'[t] "functional expression"',"self::function"],["Rule","abstr-function","mathspeak.brief",'[t] "function"',"self::function"],["SpecializedRule","abstr-function","mathspeak.brief","mathspeak.sbrief"],'Rule;abstr-lim;default.default;[t] "limit function";self::function;@role="limit function"'.split(";"),'Rule;abstr-lim;mathspeak.brief;[t] "lim";self::function;@role="limit function"'.split(";"),["SpecializedRule","abstr-lim","mathspeak.brief","mathspeak.sbrief"],["Rule","abstr-fraction","default.default",'[t] "fraction"',"self::fraction"],["Rule","abstr-fraction","mathspeak.brief",'[t] "frac"',"self::fraction"],["SpecializedRule","abstr-fraction","mathspeak.brief","mathspeak.sbrief"],'Rule;abstr-continued-fraction;default.default;[t] "continued fraction";self::fraction;children/*[2]/descendant-or-self::*[@role="ellipsis"]'.split(";"),'Rule;abstr-continued-fraction;mathspeak.brief;[t] "continued frac";self::fraction;children/*[2]/descendant-or-self::*[@role="ellipsis"]'.split(";"),["SpecializedRule","abstr-continued-fraction","mathspeak.brief","mathspeak.sbrief"],["Rule","abstr-sqrt","default.default",'[t] "square root"',"self::sqrt"],'Rule;abstr-sqrt-nested;default.default;[t] "nested square root";self::sqrt;children/*/descendant-or-self::sqrt or children/*/descendant-or-self::root'.split(";"),'Rule{abstr-root{default.default{[t] "root of index"; [n] children/*[1] (engine:modality="speech"); [t] "endindex"{self::root{contains(@grammar, "collapsed"){following-sibling::* or ancestor::*/following-sibling::*'.split("{"),["Rule","abstr-root","default.default",'[t] "root of index"; [n] children/*[1] (engine:modality=speech)',"self::root"],["Rule","abstr-root","mathspeak.brief",'[t] "root"',"self::root"],["SpecializedRule","abstr-root","mathspeak.brief","mathspeak.sbrief"],'Rule{abstr-root-nested{default.default{[t] "nested root of index"; [n] children/*[1] (engine:modality="speech"); [t] "endindex"{self::root{contains(@grammar, "collapsed"){children/*/descendant-or-self::sqrt or children/*/descendant-or-self::root{following-sibling::* or ancestor::*/following-sibling::*'.split("{"),'Rule,abstr-root-nested,default.default,[t] "nested root of index"; [n] children/*[1] (engine:modality="speech"),self::root,children/*/descendant-or-self::sqrt or children/*/descendant-or-self::root'.split(","),'Rule;abstr-root-nested;mathspeak.brief;[t] "nested root";self::root;children/*/descendant-or-self::sqrt or children/*/descendant-or-self::root'.split(";"),["SpecializedRule","abstr-root-nested","mathspeak.brief","mathspeak.sbrief"],["Rule","abstr-superscript","default.default",'[t] "power"',"self::superscript"],["Rule","abstr-subscript","default.default",'[t] "subscript"',"self::subscript"],'Rule;abstr-subsup;default.default;[t] "power with subscript";self::superscript;name(children/*[1])="subscript"'.split(";"),["Rule","abstr-infixop","default.default",'[t] @role (grammar:localRole); [t] "with"; [t] count(./children/*); [t] "elements"',"self::infixop"],'Rule,abstr-infixop,default.default,[t] @role (grammar:localRole); [t] "with variable number of elements",self::infixop,count(./children/*)>2,./children/punctuation[@role="ellipsis"]'.split(","),["Rule","abstr-infixop","mathspeak.brief","[t] @role (grammar:localRole)","self::infixop"],["SpecializedRule","abstr-infixop","mathspeak.brief","mathspeak.sbrief"],'Rule,abstr-addition,default.default,[t] "sum with"; [t] count(./children/*); [t] "summands",self::infixop,@role="addition"'.split(","),'Rule;abstr-addition;mathspeak.brief;[t] "sum";self::infixop;@role="addition"'.split(";"),["SpecializedRule","abstr-addition","mathspeak.brief","mathspeak.sbrief"],'Rule;abstr-var-addition;default.default;[t] "sum with variable number of summands";self::infixop;@role="addition";count(./children/*)>2;./children/punctuation[@role="ellipsis"]'.split(";"),'Rule,abstr-multiplication,default.default,[t] "product with"; [t] count(./children/*); [t] "factors",self::infixop,@role="multiplication"'.split(","),'Rule;abstr-multiplication;mathspeak.brief;[t] "product";self::infixop;@role="multiplication"'.split(";"),["SpecializedRule","abstr-multiplication","mathspeak.brief","mathspeak.sbrief"],["Aliases","abstr-multiplication","self::infixop",'@role="implicit"'],'Rule;abstr-var-multiplication;default.default;[t] "product with variable number of factors";self::infixop;@role="multiplication";count(./children/*)>2;./children/punctuation[@role="ellipsis"]'.split(";"),'Aliases abstr-var-multiplication self::infixop @role="implicit" count(./children/*)>2 ./children/punctuation[@role="ellipsis"]'.split(" "),["Rule","abstr-vector","default.default",'[t] count(./children/*) ; [t] "dimensional vector"',"self::vector"],["Rule","abstr-vector","mathspeak.brief",'[t] "vector"',"self::vector"],["SpecializedRule","abstr-vector","mathspeak.brief","mathspeak.sbrief"],'Rule;abstr-var-vector;default.default;[t] "n dimensional vector";self::vector;./children/*/children/punctuation[@role="ellipsis"]'.split(";"),'Rule;abstr-binomial;default.default;[t] "binomial";self::vector;@role="binomial"'.split(";"),["SpecializedRule","abstr-binomial","default.default","mathspeak.brief"],["SpecializedRule","abstr-binomial","default.default","mathspeak.sbrief"],'Rule,abstr-determinant,default.default,[t] count(./children/*); [t] "dimensional determinant",self::matrix,@role="determinant"'.split(","),'Rule;abstr-determinant;mathspeak.brief;[t] "determinant";self::matrix;@role="determinant"'.split(";"),["SpecializedRule","abstr-determinant","mathspeak.brief","mathspeak.sbrief"],'Rule;abstr-var-determinant;default.default;[t] "n dimensional determinant";self::matrix;@role="determinant";./children/*/children/*/children/punctuation[@role="ellipsis"]'.split(";"),'Rule,abstr-squarematrix,default.default,[t] count(./children/*); [t] "dimensional square matrix",self::matrix,@role="squarematrix"'.split(","),'Rule;abstr-squarematrix;mathspeak.brief;[t] "square matrix";self::matrix;@role="squarematrix"'.split(";"),["SpecializedRule","abstr-squarematrix","mathspeak.brief","mathspeak.sbrief"],'Rule,abstr-rowvector,default.default,[t] count(./children/row/children/*); [t] "dimensional row vector",self::matrix,@role="rowvector"'.split(","),'Rule;abstr-rowvector;mathspeak.brief;[t] "row vector";self::matrix;@role="rowvector"'.split(";"),["SpecializedRule","abstr-rowvector","mathspeak.brief","mathspeak.sbrief"],'Rule;abstr-var-matrix;default.default;[t] "n dimensional row vector";self::matrix;@role="rowvector";./children/*/children/*/children/punctuation[@role="ellipsis"]'.split(";"),["Rule","abstr-matrix","default.default",'[t] count(children/*);  [t] "by";[t] count(children/*[1]/children/*); [t] "matrix"',"self::matrix"],["Rule","abstr-matrix","mathspeak.brief",'[t] "matrix"',"self::matrix"],["SpecializedRule","abstr-matrix","mathspeak.brief","mathspeak.sbrief"],'Rule;abstr-var-matrix;default.default;[t] "n by m dimensional matrix";self::matrix;./children/*/children/*/children/punctuation[@role="ellipsis"]'.split(";"),["Rule","abstr-cases","default.default",'[t] "case statement";[t] "with"; [t] count(children/*); [t] "cases"',"self::cases"],["Rule","abstr-cases","mathspeak.brief",'[t] "case statement"',"self::cases"],["SpecializedRule","abstr-cases","mathspeak.brief","mathspeak.sbrief"],'Rule;abstr-var-cases;default.default;[t] "case statement with variable number of cases";self::cases;./children/row/children/cell/children/punctuation[@role="ellipsis"]or ./children/line/children/punctuation[@role="ellipsis"]'.split(";"),["Rule","abstr-punctuated","default.default",'[n] content/*[1]; [t] "separated list"; [t] "of length"; [t] count(children/*) - count(content/*)',"self::punctuated"],["Rule","abstr-punctuated","mathspeak.brief",'[n] content/*[1]; [t] "separated list"',"self::punctuated"],["SpecializedRule","abstr-punctuated","mathspeak.brief","mathspeak.sbrief"],'Rule,abstr-var-punctuated,default.default,[n] content/*[1]; [t] "separated list";[t] "of variable length",self::punctuated,./children/punctuation[@role="ellipsis"]'.split(","),["Rule","abstr-bigop","default.default","[n] content/*[1]","self::bigop"],["Rule","abstr-integral","default.default",'[t] "integral"','@role="integral"'],"Rule,abstr-relation,default.default,[t] @role (grammar:localRole);,self::relseq,count(./children/*)=2".split(","),'Rule,abstr-relation-seq,default.default,[t] @role (grammar:localRole); [t] "sequence"; [t] "with"; [t] count(./children/*); [t] "elements",self::relseq,count(./children/*)>2'.split(","),'Rule,abstr-relation-seq,mathspeak.brief,[t] @role (grammar:localRole); [t] "sequence",self::relseq,count(./children/*)>2'.split(","),["SpecializedRule","abstr-relation-seq","mathspeak.brief","mathspeak.sbrief"],'Rule,abstr-var-relation,default.default,[t] @role (grammar:localRole); [t] "sequence"; [t] "with variable number of elements",self::relseq,count(./children/*)>2,./children/punctuation[@role="ellipsis"]'.split(","),'UniqueAlias abstr-relation default.default self::multirel @role!="unknown" count(./children/*)>2'.split(" "),'Aliases abstr-var-relation self::multirel @role!="unknown" count(./children/*)>2 ./children/punctuation[@role="ellipsis"]'.split(" "),'Rule,abstr-multirel,default.default,[t] "relation sequence"; [t] "with"; [t] count(./children/*); [t] "elements",self::multirel,count(./children/*)>2'.split(","),'Rule;abstr-multirel;mathspeak.brief;[t] "relation sequence";self::multirel;count(./children/*)>2'.split(";"),["SpecializedRule","abstr-multirel","mathspeak.brief","mathspeak.sbrief"],'Rule;abstr-var-multirel;default.default;[t] "relation sequence with variable number of elements";self::multirel;count(./children/*)>2;./children/punctuation[@role="ellipsis"]'.split(";"),["Rule","abstr-table","default.default",'[t] "table with"; [t] count(children/*); [t] "rows and";[t] count(children/*[1]/children/*); [t] "columns"',"self::table"],["Rule","abstr-line","default.default",'[t] "in"; [t] @role (grammar:localRole);',"self::line"],["Rule","abstr-row","default.default",'[t] "in"; [t] @role (grammar:localRole);[t] count(preceding-sibling::..); [t] "with";[t] count(children/*); [t] "columns"',"self::row"],["Rule","abstr-cell","default.default",'[t] "in"; [t] @role (grammar:localRole);',"self::cell"]]},sre.SummarySpanish={locale:"es",modality:"summary",rules:[["Rule","stree","default.default","[n] ./*[1]","self::stree"],'Rule;abstr-identifier;default.default;[t] "identificador largo";self::identifier;contains(@grammar, "collapsed")'.split(";"),["Rule","abstr-identifier","default.default",'[t] "identificador"',"self::identifier"],'Rule;abstr-number;default.default;[t] "número largo";self::number;contains(@grammar, "collapsed")'.split(";"),["Rule","abstr-number","default.default",'[t] "número"',"self::number"],'Rule;abstr-mixed-number;default.default;[t] "número largo mixto";self::number;@role="mixed";contains(@grammar, "collapsed")'.split(";"),'Rule;abstr-mixed-number;default.default;[t] "número mixto";self::number;@role="mixed"'.split(";"),["Rule","abstr-text","default.default",'[t] "texto"',"self::text"],["Rule","abstr-function","default.default",'[t] "expresión funcional"',"self::function"],["Rule","abstr-function","mathspeak.brief",'[t] "función"',"self::function"],["SpecializedRule","abstr-function","mathspeak.brief","mathspeak.sbrief"],'Rule;abstr-lim;default.default;[t] "función de límite";self::function;@role="limit function"'.split(";"),'Rule;abstr-lim;mathspeak.brief;[t] "límite";self::function;@role="limit function"'.split(";"),["SpecializedRule","abstr-lim","mathspeak.brief","mathspeak.sbrief"],["Rule","abstr-fraction","default.default",'[t] "fracción"',"self::fraction"],["Rule","abstr-fraction","mathspeak.brief",'[t] "frac"',"self::fraction"],["SpecializedRule","abstr-fraction","mathspeak.brief","mathspeak.sbrief"],'Rule;abstr-continued-fraction;default.default;[t] "fracción continua";self::fraction;children/*[2]/descendant-or-self::*[@role="ellipsis"]'.split(";"),'Rule;abstr-continued-fraction;mathspeak.brief;[t] "frac continua";self::fraction;children/*[2]/descendant-or-self::*[@role="ellipsis"]'.split(";"),["SpecializedRule","abstr-continued-fraction","mathspeak.brief","mathspeak.sbrief"],["Rule","abstr-sqrt","default.default",'[t] "raíz cuadrada"',"self::sqrt"],'Rule;abstr-sqrt-nested;default.default;[t] "raíz cuadrada anidada";self::sqrt;children/*/descendant-or-self::sqrt or children/*/descendant-or-self::root'.split(";"),'Rule{abstr-root{default.default{[t] "raíz del índice"; [n] children/*[1] (engine:modality="speech"); [t] "finalizar de índice"{self::root{contains(@grammar, "collapsed"){following-sibling::* or ancestor::*/following-sibling::*'.split("{"),["Rule","abstr-root","default.default",'[t] "raíz del índice"; [n] children/*[1] (engine:modality=speech)',"self::root"],["Rule","abstr-root","mathspeak.brief",'[t] "raíz"',"self::root"],["SpecializedRule","abstr-root","mathspeak.brief","mathspeak.sbrief"],'Rule{abstr-root-nested{default.default{[t] "raíz anidada del índice"; [n] children/*[1] (engine:modality="speech"); [t] "finalizar de índice"{self::root{contains(@grammar, "collapsed"){children/*/descendant-or-self::sqrt or children/*/descendant-or-self::root{following-sibling::* or ancestor::*/following-sibling::*'.split("{"),'Rule,abstr-root-nested,default.default,[t] "raíz anidada del índice"; [n] children/*[1] (engine:modality="speech"),self::root,children/*/descendant-or-self::sqrt or children/*/descendant-or-self::root'.split(","),'Rule;abstr-root-nested;mathspeak.brief;[t] "raíz anidada";self::root;children/*/descendant-or-self::sqrt or children/*/descendant-or-self::root'.split(";"),["SpecializedRule","abstr-root-nested","mathspeak.brief","mathspeak.sbrief"],["Rule","abstr-superscript","default.default",'[t] "potencia"',"self::superscript"],["Rule","abstr-subscript","default.default",'[t] "subíndice"',"self::subscript"],'Rule;abstr-subsup;default.default;[t] "potencia con subíndice";self::superscript;name(children/*[1])="subscript"'.split(";"),["Rule","abstr-infixop","default.default",'[t] @role (grammar:localRole); [t] "con"; [t] count(./children/*); [t] "elementos"',"self::infixop"],'Rule,abstr-infixop,default.default,[t] @role (grammar:localRole); [t] "con una cantidad variable de elementos",self::infixop,count(./children/*)>2,./children/punctuation[@role="ellipsis"]'.split(","),["Rule","abstr-infixop","mathspeak.brief","[t] @role (grammar:localRole)","self::infixop"],["SpecializedRule","abstr-infixop","mathspeak.brief","mathspeak.sbrief"],'Rule,abstr-addition,default.default,[t] "suma con"; [t] count(./children/*); [t] "sumandos",self::infixop,@role="addition"'.split(","),'Rule;abstr-addition;mathspeak.brief;[t] "suma";self::infixop;@role="addition"'.split(";"),["SpecializedRule","abstr-addition","mathspeak.brief","mathspeak.sbrief"],'Rule;abstr-var-addition;default.default;[t] "suma con número variable de sumandos";self::infixop;@role="addition";count(./children/*)>2;./children/punctuation[@role="ellipsis"]'.split(";"),'Rule,abstr-multiplication,default.default,[t] "producto con"; [t] count(./children/*); [t] "factores",self::infixop,@role="multiplication"'.split(","),'Rule;abstr-multiplication;mathspeak.brief;[t] "producto";self::infixop;@role="multiplication"'.split(";"),["SpecializedRule","abstr-multiplication","mathspeak.brief","mathspeak.sbrief"],["Aliases","abstr-multiplication","self::infixop",'@role="implicit"'],'Rule;abstr-var-multiplication;default.default;[t] "producto con una cantidad variable de factores";self::infixop;@role="multiplication";count(./children/*)>2;./children/punctuation[@role="ellipsis"]'.split(";"),'Aliases abstr-var-multiplication self::infixop @role="implicit" count(./children/*)>2 ./children/punctuation[@role="ellipsis"]'.split(" "),["Rule","abstr-vector","default.default",'[t] "vector de dimensión"; [t] count(./children/*)',"self::vector"],["Rule","abstr-vector","mathspeak.brief",'[t] "vector"',"self::vector"],["SpecializedRule","abstr-vector","mathspeak.brief","mathspeak.sbrief"],'Rule;abstr-var-vector;default.default;[t] "vector de dimensión n";self::vector;./children/*/children/punctuation[@role="ellipsis"]'.split(";"),'Rule;abstr-binomial;default.default;[t] "binomio";self::vector;@role="binomial"'.split(";"),["SpecializedRule","abstr-binomial","default.default","mathspeak.brief"],["SpecializedRule","abstr-binomial","default.default","mathspeak.sbrief"],'Rule,abstr-determinant,default.default,[t] "determinante de dimensión"; [t] count(./children/*),self::matrix,@role="determinant"'.split(","),'Rule;abstr-determinant;mathspeak.brief;[t] "determinante";self::matrix;@role="determinant"'.split(";"),["SpecializedRule","abstr-determinant","mathspeak.brief","mathspeak.sbrief"],'Rule;abstr-var-determinant;default.default;[t] "determinante de dimensión n";self::matrix;@role="determinant";./children/*/children/*/children/punctuation[@role="ellipsis"]'.split(";"),'Rule,abstr-squarematrix,default.default,[t] "matriz cuadrada de dimensión"; [t] count(./children/*),self::matrix,@role="squarematrix"'.split(","),'Rule;abstr-squarematrix;mathspeak.brief;[t] "matriz cuadrada";self::matrix;@role="squarematrix"'.split(";"),["SpecializedRule","abstr-squarematrix","mathspeak.brief","mathspeak.sbrief"],'Rule,abstr-rowvector,default.default,[t] "vector fila de dimensión"; [t] count(./children/row/children/*),self::matrix,@role="rowvector"'.split(","),'Rule;abstr-rowvector;mathspeak.brief;[t] "vector fila";self::matrix;@role="rowvector"'.split(";"),["SpecializedRule","abstr-rowvector","mathspeak.brief","mathspeak.sbrief"],'Rule;abstr-var-matrix;default.default;[t] "vector fila de dimensión n";self::matrix;@role="rowvector";./children/*/children/*/children/punctuation[@role="ellipsis"]'.split(";"),["Rule","abstr-matrix","default.default",'[t] count(children/*);  [t] "por";[t] count(children/*[1]/children/*); [t] "matriz"',"self::matrix"],["Rule","abstr-matrix","mathspeak.brief",'[t] "matriz"',"self::matrix"],["SpecializedRule","abstr-matrix","mathspeak.brief","mathspeak.sbrief"],'Rule;abstr-var-matrix;default.default;[t] "matriz de dimensión n por m";self::matrix;./children/*/children/*/children/punctuation[@role="ellipsis"]'.split(";"),["Rule","abstr-cases","default.default",'[t] "declaración de caso";[t] "con"; [t] count(children/*); [t] "casos"',"self::cases"],["Rule","abstr-cases","mathspeak.brief",'[t] "declaración de caso"',"self::cases"],["SpecializedRule","abstr-cases","mathspeak.brief","mathspeak.sbrief"],'Rule;abstr-var-cases;default.default;[t] "declaración de caso con número variable de casos";self::cases;./children/row/children/cell/children/punctuation[@role="ellipsis"]or ./children/line/children/punctuation[@role="ellipsis"]'.split(";"),["Rule","abstr-punctuated","default.default",'[t] "lista separada por"; [n] content/*[1]; [t] "de longitud"; [t] count(children/*) - count(content/*)',"self::punctuated"],["Rule","abstr-punctuated","mathspeak.brief",'[t] "lista separada por"; [n] content/*[1]',"self::punctuated"],["SpecializedRule","abstr-punctuated","mathspeak.brief","mathspeak.sbrief"],'Rule,abstr-var-punctuated,default.default,[t] "lista separada por"; [n] content/*[1],[t] "de longitud variable",self::punctuated,./children/punctuation[@role="ellipsis"]'.split(","),["Rule","abstr-bigop","default.default","[n] content/*[1]","self::bigop"],["Rule","abstr-integral","default.default",'[t] "integral"','@role="integral"'],"Rule,abstr-relation,default.default,[t] @role (grammar:localRole);,self::relseq,count(./children/*)=2".split(","),'Rule,abstr-relation-seq,default.default,[t] "secuencia de"; [t] @role (grammar:localRole); [t] "con"; [t] count(./children/*); [t] "elementos",self::relseq,count(./children/*)>2'.split(","),'Rule,abstr-relation-seq,mathspeak.brief,[t] "secuencia de"; [t] @role (grammar:localRole),self::relseq,count(./children/*)>2'.split(","),["SpecializedRule","abstr-relation-seq","mathspeak.brief","mathspeak.sbrief"],'Rule,abstr-var-relation,default.default,[t] "secuencia de"; [t] @role (grammar:localRole); [t] "con una cantidad variable de elementos",self::relseq,count(./children/*)>2,./children/punctuation[@role="ellipsis"]'.split(","),'UniqueAlias abstr-relation default.default self::multirel @role!="unknown" count(./children/*)>2'.split(" "),'Aliases abstr-var-relation self::multirel @role!="unknown" count(./children/*)>2 ./children/punctuation[@role="ellipsis"]'.split(" "),'Rule,abstr-multirel,default.default,[t] "secuencia de relación"; [t] "con"; [t] count(./children/*); [t] "elementos",self::multirel,count(./children/*)>2'.split(","),'Rule;abstr-multirel;mathspeak.brief;[t] "secuencia de relación";self::multirel;count(./children/*)>2'.split(";"),["SpecializedRule","abstr-multirel","mathspeak.brief","mathspeak.sbrief"],'Rule;abstr-var-multirel;default.default;[t] "secuencia de relación con número variable de elementos";self::multirel;count(./children/*)>2;./children/punctuation[@role="ellipsis"]'.split(";"),["Rule","abstr-table","default.default",'[t] "mesa con"; [t] count(children/*); [t] "filas y";[t] count(children/*[1]/children/*); [t] "columnas"',"self::table"],["Rule","abstr-line","default.default",'[t] "en"; [t] @role (grammar:localRole);',"self::line"],["Rule","abstr-row","default.default",'[t] "en"; [t] @role (grammar:localRole);[t] count(preceding-sibling::..); [t] "con";[t] count(children/*); [t] "columnas"',"self::row"],["Rule","abstr-cell","default.default",'[t] "en"; [t] @role (grammar:localRole);',"self::cell"]]},sre.SpeechRuleStores={},sre.SpeechRuleStores.RULE_SETS_={SemanticTreeRules:sre.SemanticTreeRules,MathspeakFrench:sre.MathspeakFrench,MathspeakGerman:sre.MathspeakGerman,MathspeakRules:sre.MathspeakRules,MathspeakSpanish:sre.MathspeakSpanish,NemethRules:sre.NemethRules,ClearspeakFrench:sre.ClearspeakFrench,ClearspeakGerman:sre.ClearspeakGerman,ClearspeakRules:sre.ClearspeakRules,EmacspeakRules:sre.EmacspeakRules,SummaryFrench:sre.SummaryFrench,SummaryGerman:sre.SummaryGerman,SummaryRules:sre.SummaryRules,SummarySpanish:sre.SummarySpanish,PrefixFrench:sre.PrefixFrench,PrefixGerman:sre.PrefixGerman,PrefixRules:sre.PrefixRules,PrefixSpanish:sre.PrefixSpanish},sre.SpeechRuleStores.availableSets=function(){return Object.keys(sre.SpeechRuleStores.RULE_SETS_)},sre.SpeechRuleStores.getConstructor=function(e){return(e=sre.SpeechRuleStores.RULE_SETS_[e])||null},sre.SpeechRuleEngine=function(){this.activeStore_=null,this.cache_={},this.ready_=!0,this.combinedStores_={},this.evaluators_={},this.ruleSets_={},sre.Engine.registerTest(goog.bind(function(){return this.ready_},this))},goog.addSingletonGetter(sre.SpeechRuleEngine),sre.SpeechRuleEngine.prototype.parameterize=function(e){for(var t,n,s,o={},i=0,a=e.length;i<a;i++)t=e[i],this.ruleSets_[t]?o[t]=this.ruleSets_[t]:(n=sre.SpeechRuleStores.getConstructor(t),n&&n.getInstance?(o[t]=n.getInstance(),this.ruleSets_[t]=n.getInstance()):n&&(s=this.storeFactory_(n.modality),s.parse(n),this.ruleSets_[t]=s,o[t]=s));this.parameterize_(o)},sre.SpeechRuleEngine.prototype.storeFactory_=function(e){return new({braille:sre.BrailleStore,speech:sre.MathStore}[e]||sre.MathStore)},sre.SpeechRuleEngine.prototype.parameterize_=function(e){try{this.activeStore_=this.combineStores_(e)}catch(e){if("StoreError"==e.name)console.error("Store Error:",e.message);else throw e}this.updateEngine()},sre.SpeechRuleEngine.prototype.clearCache=function(){this.cache_={}},sre.SpeechRuleEngine.prototype.forCache=function(e){for(var t in this.cache_)e(t,this.cache_[t])},sre.SpeechRuleEngine.prototype.getCacheForNode_=function(e){return!e||!e.getAttribute?null:(e=e.getAttribute("id"),"undefined"===e||""===e?null:this.getCache(e))},sre.SpeechRuleEngine.prototype.getCache=function(e){return(e=this.cache_[e])&&this.cloneCache(e)},sre.SpeechRuleEngine.prototype.cloneCache=function(e){return e.map(function(e){return e.clone()})},sre.SpeechRuleEngine.prototype.pushCache_=function(e,t){sre.Engine.getInstance().cache&&e.getAttribute&&(e=e.getAttribute("id"))&&(this.cache_[e]=this.cloneCache(t))},sre.SpeechRuleEngine.prototype.evaluateNode=function(e){var t,n=(new Date).getTime();return e=this.evaluateNode_(e),t=(new Date).getTime(),sre.Debugger.getInstance().output("Time:",t-n),e},sre.SpeechRuleEngine.prototype.evaluateNode_=function(e){return e?(this.updateConstraint_(),this.evaluateTree_(e)):[]},sre.SpeechRuleEngine.prototype.evaluateTree_=function(e){if(a=sre.Engine.getInstance(),sre.Debugger.getInstance().output(a.mode!==sre.Engine.Mode.HTTP?e.toString():e),a.cache&&(t=this.getCacheForNode_(e),t))return e.attributes&&this.addPersonality_(t,{},!1,e),t;if(sre.Grammar.getInstance().setAttribute(e),c=this.activeStore_.lookupRule(e,a.dynamicCstr),!c)return a.strict?[]:(t=this.getEvaluator(a.locale,a.modality)(e),e.attributes&&this.addPersonality_(t,{},!1,e),this.pushCache_(e,t),t);sre.Debugger.getInstance().generateOutput(goog.bind(function(){return["Apply Rule:",c.name,c.dynamicCstr.toString(),a.mode!==sre.Engine.Mode.HTTP?e.toString():e]},this)),i=c.context||this.activeStore_.context,f=c.action.components,t=[];for(d=0;r=f[d];d++){var t,i,a,r,c,l,d,u,m,f,o=[],s=r.content||"",n=r.attributes||{},h=!1;switch(r.grammar&&this.processGrammar(i,e,r.grammar),l=null,u=null,n.engine&&(l=sre.Engine.getInstance().dynamicCstr.getComponents(),m=sre.Grammar.parseInput(n.engine),u=this.cache_,this.clearCache(),sre.Engine.getInstance().setDynamicCstr(m)),r.type){case sre.SpeechRule.Type.NODE:(s=i.applyQuery(e,s))&&(o=this.evaluateTree_(s));break;case sre.SpeechRule.Type.MULTI:h=!0,s=i.applySelector(e,s),0<s.length&&(o=this.evaluateNodeList_(i,s,n.sepFunc,i.constructString(e,n.separator),n.ctxtFunc,i.constructString(e,n.context)));break;case sre.SpeechRule.Type.TEXT:(s=i.constructString(e,s))&&(o=[sre.AuditoryDescription.create({text:s},{adjust:!0})]);break;default:o=[sre.AuditoryDescription.create({text:s})]}o[0]&&!h&&(n.context&&(o[0].context=i.constructString(e,n.context)+(o[0].context||"")),n.annotation&&(o[0].annotation=n.annotation)),r.grammar&&sre.Grammar.getInstance().popState(),t=t.concat(this.addPersonality_(o,n,h,e)),l&&(this.cache_=u,sre.Engine.getInstance().setDynamicCstr(l))}return this.pushCache_(e,t),t},sre.SpeechRuleEngine.prototype.evaluateNodeList_=function(e,t,n,s,o,i){if(t==[])return[];var a=s||"",r=i||"";s=(s=e.contextFunctions.lookup(o))?s(t,r):function(){return r},e=(e=e.contextFunctions.lookup(n))?e(t,a):function(){return sre.AuditoryDescription.create({text:a},{translate:!0})},n=[];for(o=0;i=t[o];o++)i=this.evaluateTree_(i),0<i.length&&(i[0].context=s()+(i[0].context||""),n=n.concat(i),o<t.length-1&&(i=e(),n=n.concat(i)));return n},sre.SpeechRuleEngine.prototype.addPersonality_=function(e,t,n,s){var o,i,a,r={};for(o in sre.Engine.personalityProps)i=t[sre.Engine.personalityProps[o]],"undefined"!=typeof i&&(a=parseFloat(i),r[sre.Engine.personalityProps[o]]=isNaN(a)?'"'==i.charAt(0)?i.slice(1,-1):i:a);for(t=0;o=e[t];t++)this.addRelativePersonality_(o,r),this.addExternalAttributes_(o,s);return n&&e.length&&delete e[e.length-1].personality[sre.Engine.personalityProps.JOIN],e},sre.SpeechRuleEngine.prototype.addExternalAttributes_=function(e,t){if(t.hasAttributes()){t=t.attributes;for(var n,s=t.length-1;0<=s;s--)n=t[s].name,!e.attributes[n]&&n.match(/^ext/)&&(e.attributes[n]=t[s].value)}},sre.SpeechRuleEngine.prototype.addRelativePersonality_=function(e,t){if(!e.personality)return e.personality=t,e;var n,s=e.personality;for(n in t)s[n]=s[n]&&"number"==typeof s[n]&&"number"==typeof t[n]?s[n]+t[n]:t[n];return e},sre.SpeechRuleEngine.prototype.toString=function(){return this.activeStore_.findAllRules(function(){return!0}).map(function(e){return e.toString()}).join(`
`)},sre.SpeechRuleEngine.debugSpeechRule=function(e,t){var n=sre.SpeechRuleEngine.getInstance().activeStore_;n&&n.debugSpeechRule(e,t)},sre.SpeechRuleEngine.debugNamedSpeechRule=function(e,t){if(n=sre.SpeechRuleEngine.getInstance().activeStore_,n)for(var n,s,i=n.findAllRules(function(t){return t.name==e}),o=0;s=i[o];o++)sre.Debugger.getInstance().output("Rule",e,"DynamicCstr:",s.dynamicCstr.toString(),"number",o),n.debugSpeechRule(s,t)},sre.SpeechRuleEngine.prototype.runInSetting=function(e,t){var n,s=sre.Engine.getInstance(),o={},i=null;for(n in e)"rules"===n?(i=this.activeStore_,s.ruleSets=e[n],this.parameterize(s.ruleSets)):(o[n]=s[n],s[n]=e[n]);s.setDynamicCstr(),e=t();for(n in o)s[n]=o[n];return i&&(this.activeStore_=i),s.setDynamicCstr(),e},sre.SpeechRuleEngine.prototype.combineStores_=function(e){var n,s,t=this.cachedStore_(e);if(t)return t;t=new sre.MathStore;for(s in e)n=e[s],n.initialize(),n.getSpeechRules().forEach(function(e){t.trie.addRule(e)}),this.addEvaluator(n);return t.setSpeechRules(t.trie.collectRules()),this.combinedStores_[this.combinedStoreName_(Object.keys(e))]=t},sre.SpeechRuleEngine.prototype.combinedStoreName_=function(e){return e.sort().join("-")},sre.SpeechRuleEngine.prototype.cachedStore_=function(e){var t=Object.keys(e);return t.some(function(t){return!e[t].initialized})?null:this.combinedStores_[this.combinedStoreName_(t)]},sre.SpeechRuleEngine.prototype.updateEngine=function(){this.ready_=!0;var e=sre.MathMap.getInstance();sre.Engine.isReady()?sre.Engine.getInstance().evaluator=goog.bind(e.store.lookupString,e.store):(this.ready_=!1,setTimeout(goog.bind(this.updateEngine,this),250))},sre.SpeechRuleEngine.prototype.processGrammar=function(e,t,n){var s,o,i={};for(o in n)s=n[o],i[o]="string"==typeof s?e.constructString(t,s):s;sre.Grammar.getInstance().pushState(i)},sre.SpeechRuleEngine.prototype.updateConstraint_=function(){var a,r,s=sre.Engine.getInstance().dynamicCstr,c=sre.Engine.getInstance().strict,i=this.activeStore_.trie,o={},t=s.getValue(sre.DynamicCstr.Axis.LOCALE),e=s.getValue(sre.DynamicCstr.Axis.MODALITY),n=s.getValue(sre.DynamicCstr.Axis.DOMAIN);i.hasSubtrie([t,e,n])||(t=sre.DynamicCstr.DEFAULT_VALUES[sre.DynamicCstr.Axis.LOCALE],i.hasSubtrie([t,e,n])||(e=sre.DynamicCstr.DEFAULT_VALUES[sre.DynamicCstr.Axis.MODALITY],i.hasSubtrie([t,e,n])||(n=sre.DynamicCstr.DEFAULT_VALUES[sre.DynamicCstr.Axis.DOMAIN]))),o[sre.DynamicCstr.Axis.LOCALE]=[t],o[sre.DynamicCstr.Axis.MODALITY]=["summary"!==e?e:sre.DynamicCstr.DEFAULT_VALUES[sre.DynamicCstr.Axis.MODALITY]],o[sre.DynamicCstr.Axis.DOMAIN]=["speech"!==e?sre.DynamicCstr.DEFAULT_VALUES[sre.DynamicCstr.Axis.DOMAIN]:n],i=s.getOrder();for(t=0;e=i[t];t++)o[e]||(n=s.getValue(e),a=this.makeSet_(n,s.preference),r=sre.DynamicCstr.DEFAULT_VALUES[e],c||n===r||a.push(r),o[e]=a);s.updateProperties(o)},sre.SpeechRuleEngine.prototype.makeSet_=function(e,t){return t&&Object.keys(t).length?e.split(":"):[e]},sre.SpeechRuleEngine.prototype.addEvaluator=function(e){var n=goog.bind(e.evaluateDefault,e),t=this.evaluators_[e.locale];t?t[e.modality]=n:(t={},t[e.modality]=n,this.evaluators_[e.locale]=t)},sre.SpeechRuleEngine.prototype.getEvaluator=function(e,t){return(t=(e=this.evaluators_[e])?e[t]:null)||goog.bind(this.activeStore_.evaluateDefault,this.activeStore_)},sre.SpeechRuleEngine.prototype.enumerate=function(e){return this.activeStore_.trie.enumerate(e)},sre.SpeechGeneratorUtil={},sre.SpeechGeneratorUtil.computeSpeech=function(e){var t=sre.SpeechRuleEngine.getInstance();return t.clearCache(),t.evaluateNode(e)},sre.SpeechGeneratorUtil.recomputeSpeech=function(e){return e=sre.SemanticTree.fromNode(e),sre.SpeechRuleEngine.getInstance().evaluateNode(e.xml())},sre.SpeechGeneratorUtil.computeSpeechWithoutCache=function(e){var t=sre.Engine.getInstance().cache;return sre.Engine.getInstance().cache=!1,e=sre.SpeechRuleEngine.getInstance().evaluateNode(e),sre.Engine.getInstance().cache=t,e},sre.SpeechGeneratorUtil.retrieveSpeech=function(e){var t=null;return sre.Engine.getInstance().cache&&(t=sre.SpeechRuleEngine.getInstance().getCache(e.id.toString())),t||(t=sre.SpeechGeneratorUtil.recomputeSpeech(e)),sre.AuralRendering.getInstance().markup(t)},sre.SpeechGeneratorUtil.addSpeech=function(e,t,n){t=sre.SpeechGeneratorUtil.retrieveSpeech(t),e.setAttribute(n||sre.EnrichMathml.Attribute.SPEECH,t)},sre.SpeechGeneratorUtil.addPrefix=function(e,t){(t=sre.SpeechGeneratorUtil.retrievePrefix(t))&&e.setAttribute(sre.EnrichMathml.Attribute.PREFIX,t)},sre.SpeechGeneratorUtil.retrievePrefix=function(e){return e=sre.SpeechGeneratorUtil.computePrefix_(e),sre.AuralRendering.getInstance().markup(e)},sre.SpeechGeneratorUtil.computePrefix_=function(e){var n=sre.SemanticTree.fromRoot(e),t=sre.XpathUtil.evalXPath('.//*[@id="'+e.id+'"]',n.xml())[0];return t?sre.SpeechRuleEngine.getInstance().runInSetting({modality:"prefix",domain:"default",style:"default",strict:!0,cache:!1,speech:!0},function(){return sre.SpeechRuleEngine.getInstance().evaluateNode(t)}):[]},sre.SpeechGeneratorUtil.connectMactions=function(e,t,n){t=sre.DomUtil.querySelectorAll(t,"maction");for(var s,o,i,a,r=0;s=t[r];r++)i=s.getAttribute("id"),(i=sre.DomUtil.querySelectorAllByAttrValue(e,"id",i)[0])&&(a=s.childNodes[1],s=a.getAttribute(sre.EnrichMathml.Attribute.ID),o=sre.WalkerUtil.getBySemanticId(e,s),o&&"dummy"!==o.getAttribute(sre.EnrichMathml.Attribute.TYPE)||(o=i.childNodes[0],o.getAttribute("sre-highlighter-added")||((i=a.getAttribute(sre.EnrichMathml.Attribute.PARENT))&&o.setAttribute(sre.EnrichMathml.Attribute.PARENT,i),o.setAttribute(sre.EnrichMathml.Attribute.TYPE,"dummy"),o.setAttribute(sre.EnrichMathml.Attribute.ID,s),sre.DomUtil.querySelectorAllByAttrValue(n,"id",s)[0].setAttribute("alternative",s))))},sre.SpeechGeneratorUtil.connectAllMactions=function(e,t){e=sre.DomUtil.querySelectorAll(e,"maction");for(var n,s=0;n=e[s];s++)n=n.childNodes[1].getAttribute(sre.EnrichMathml.Attribute.ID),sre.DomUtil.querySelectorAllByAttrValue(t,"id",n)[0].setAttribute("alternative",n)},sre.SpeechGeneratorUtil.retrieveSummary=function(e){return e=sre.SpeechGeneratorUtil.computeSummary_(e),sre.AuralRendering.getInstance().markup(e)},sre.SpeechGeneratorUtil.computeSummary_=function(e){return e?sre.SpeechRuleEngine.getInstance().runInSetting({modality:"summary",strict:!1,cache:!1,speech:!0},function(){return sre.SpeechRuleEngine.getInstance().evaluateNode(e)}):[]},sre.AbstractSpeechGenerator=function(){this.rebuilt_=null,this.options_={},this.modality=sre.EnrichMathml.addPrefix("speech")},sre.AbstractSpeechGenerator.prototype.getRebuilt=function(){return this.rebuilt_},sre.AbstractSpeechGenerator.prototype.setRebuilt=function(e){this.rebuilt_=e},sre.AbstractSpeechGenerator.prototype.setOptions=function(e){this.options_=e||{},this.modality=sre.EnrichMathml.addPrefix(this.options_.modality||"speech")},sre.AbstractSpeechGenerator.prototype.getOptions=function(){return this.options_},sre.AbstractSpeechGenerator.prototype.getSpeech=goog.abstractMethod,sre.AbstractSpeechGenerator.prototype.start=function(){},sre.AbstractSpeechGenerator.prototype.end=function(){},sre.AbstractSpeechGenerator.prototype.generateSpeech=function(e,t){return this.rebuilt_||(this.rebuilt_=new sre.RebuildStree(t)),sre.System.getInstance().setupEngine(this.options_),e=sre.SpeechGeneratorUtil.computeSpeech(this.getRebuilt().xml),sre.AuralRendering.getInstance().markup(e)},sre.AdhocSpeechGenerator=function(){sre.AbstractSpeechGenerator.call(this)},goog.inherits(sre.AdhocSpeechGenerator,sre.AbstractSpeechGenerator),sre.AdhocSpeechGenerator.prototype.getSpeech=function(e,t){return t=this.generateSpeech(e,t),e.setAttribute(this.modality,t),t},sre.ColorGenerator=function(){sre.AbstractSpeechGenerator.call(this),this.modality=sre.EnrichMathml.addPrefix("foreground"),this.contrast=new sre.ContrastPicker},goog.inherits(sre.ColorGenerator,sre.AbstractSpeechGenerator),sre.ColorGenerator.prototype.getSpeech=function(e){return sre.WalkerUtil.getAttribute(e,this.modality)},sre.ColorGenerator.prototype.generateSpeech=function(e){return this.getRebuilt()||this.setRebuilt(new sre.RebuildStree(e)),this.colorLeaves_(e),sre.WalkerUtil.getAttribute(e,this.modality)},sre.ColorGenerator.prototype.colorLeaves_=function(e){var t,n,o,i=this,s=[];sre.ColorGenerator.visitStree_(this.getRebuilt().streeRoot,s,{}),n={},s=$jscomp.makeIterator(s);for(t=s.next();!t.done;n={$jscomp$loop$prop$color$5:n.$jscomp$loop$prop$color$5},t=s.next())t=t.value,n.$jscomp$loop$prop$color$5=this.contrast.generate(),o=!1,(o=Array.isArray(t)?t.map(function(t){return function(n){return i.colorLeave_(e,n,t.$jscomp$loop$prop$color$5)}}(n)).reduce(function(e,t){return e||t},!1):this.colorLeave_(e,t,n.$jscomp$loop$prop$color$5))&&this.contrast.increment()},sre.ColorGenerator.prototype.colorLeave_=function(e,t,n){return!!(e=sre.WalkerUtil.getBySemanticId(e,t))&&(e.setAttribute(this.modality,n),!0)},sre.ColorGenerator.visitStree_=function(e,t,n){if(e.childNodes.length){if(e.contentNodes.length&&("punctuated"===e.type&&e.contentNodes.forEach(function(e){return n[e.id]=!0}),"implicit"!==e.role&&t.push(e.contentNodes.map(function(e){return e.id}))),e.childNodes.length)if("implicit"===e.role){var s,o,a=[],i=[];e=$jscomp.makeIterator(e.childNodes);for(o=e.next();!o.done;o=e.next())s=[],sre.ColorGenerator.visitStree_(o.value,s,n),2>=s.length&&a.push(s.shift()),i=i.concat(s);t.push(a),i.forEach(function(e){return t.push(e)})}else e.childNodes.forEach(function(e){return sre.ColorGenerator.visitStree_(e,t,n)})}else n[e.id]||t.push(e.id)},sre.DirectSpeechGenerator=function(){sre.AbstractSpeechGenerator.call(this)},goog.inherits(sre.DirectSpeechGenerator,sre.AbstractSpeechGenerator),sre.DirectSpeechGenerator.prototype.getSpeech=function(e){return sre.WalkerUtil.getAttribute(e,this.modality)},sre.DummySpeechGenerator=function(){sre.AbstractSpeechGenerator.call(this)},goog.inherits(sre.DummySpeechGenerator,sre.AbstractSpeechGenerator),sre.DummySpeechGenerator.prototype.getSpeech=function(){return""},sre.TreeSpeechGenerator=function(){sre.AbstractSpeechGenerator.call(this)},goog.inherits(sre.TreeSpeechGenerator,sre.AbstractSpeechGenerator),sre.TreeSpeechGenerator.prototype.getSpeech=function(e,t){s=this.generateSpeech(e,t),e.setAttribute(this.modality,s),o=this.getRebuilt().nodeDict;for(n in o){var n,s,o,a=o[n],r=sre.WalkerUtil.getBySemanticId(t,n),i=sre.WalkerUtil.getBySemanticId(e,n);r&&i&&(sre.SpeechGeneratorUtil.addSpeech(i,a,this.modality),this.modality===sre.EnrichMathml.Attribute.SPEECH&&sre.SpeechGeneratorUtil.addPrefix(i,a))}return s},sre.NodeSpeechGenerator=function(){sre.TreeSpeechGenerator.call(this)},goog.inherits(sre.NodeSpeechGenerator,sre.TreeSpeechGenerator),sre.NodeSpeechGenerator.prototype.getSpeech=function(e,t){var n=sre.WalkerUtil.getAttribute(e,this.modality);return n||sre.NodeSpeechGenerator.superClass_.getSpeech.call(this,e,t)},sre.SummarySpeechGenerator=function(){sre.AbstractSpeechGenerator.call(this)},goog.inherits(sre.SummarySpeechGenerator,sre.AbstractSpeechGenerator),sre.SummarySpeechGenerator.prototype.getSpeech=function(e,t){return sre.SpeechGeneratorUtil.connectAllMactions(t,this.getRebuilt().xml),this.generateSpeech(e,t)},sre.SpeechGeneratorFactory={},sre.SpeechGeneratorFactory.generator=function(e){return new(sre.SpeechGeneratorFactory.generatorMapping_[e]||sre.SpeechGeneratorFactory.generatorMapping_.Direct)},sre.SpeechGeneratorFactory.generatorMapping_={Adhoc:sre.AdhocSpeechGenerator,Color:sre.ColorGenerator,Direct:sre.DirectSpeechGenerator,Dummy:sre.DummySpeechGenerator,Node:sre.NodeSpeechGenerator,Summary:sre.SummarySpeechGenerator,Tree:sre.TreeSpeechGenerator},sre.EventUtil={},sre.EventUtil.KeyCode={ENTER:13,ESC:27,SPACE:32,PAGE_UP:33,PAGE_DOWN:34,END:35,HOME:36,LEFT:37,UP:38,RIGHT:39,DOWN:40,TAB:9,LESS:188,GREATER:190,DASH:189,0:48,1:49,2:50,3:51,4:52,5:53,6:54,7:55,8:56,9:57,A:65,B:66,C:67,D:68,E:69,F:70,G:71,H:72,I:73,J:74,K:75,L:76,M:77,N:78,O:79,P:80,Q:81,R:82,S:83,T:84,U:85,V:86,W:87,X:88,Y:89,Z:90},sre.EventUtil.Move=function(){var e,t={};for(e in sre.EventUtil.KeyCode)t[sre.EventUtil.KeyCode[e]]=e;return t}(),sre.EventUtil.EventType={CLICK:"click",DBLCLICK:"dblclick",MOUSEDOWN:"mousedown",MOUSEUP:"mouseup",MOUSEOVER:"mouseover",MOUSEOUT:"mouseout",MOUSEMOVE:"mousemove",SELECTSTART:"selectstart",KEYPRESS:"keypress",KEYDOWN:"keydown",KEYUP:"keyup",TOUCHSTART:"touchstart",TOUCHMOVE:"touchmove",TOUCHEND:"touchend",TOUCHCANCEL:"touchcancel"},sre.EventUtil.Event=function(e,t,n){this.src=e,this.type=t,this.callback=n},sre.EventUtil.Event.prototype.add=function(){this.src.addEventListener(this.type,this.callback)},sre.EventUtil.Event.prototype.remove=function(){this.src.removeEventListener(this.type,this.callback)},sre.Focus=function(e,t){this.semanticNodes_=e,this.semanticPrimary_=t,this.domNodes_=[],this.domPrimary_=null,this.allNodes_=[]},sre.Focus.prototype.getSemanticPrimary=function(){return this.semanticPrimary_},sre.Focus.prototype.getSemanticNodes=function(){return this.semanticNodes_},sre.Focus.prototype.getNodes=function(){return this.allNodes_},sre.Focus.prototype.getDomNodes=function(){return this.domNodes_},sre.Focus.prototype.getDomPrimary=function(){return this.domPrimary_},sre.Focus.prototype.toString=function(){return"Primary:"+this.domPrimary_+" Nodes:"+this.domNodes_},sre.Focus.prototype.clone=function(){var e=new sre.Focus(this.semanticNodes_,this.semanticPrimary_);return e.domNodes_=this.domNodes_,e.domPrimary_=this.domPrimary_,e.allNodes_=this.allNodes_,e},sre.Focus.factory=function(e,t,n,s){var a,o=function(e){return sre.WalkerUtil.getBySemanticId(s,e)},i=n.nodeDict;return n=o(e),o=t.map(o),a=t.map(function(e){return i[e]}),e=new sre.Focus(a,i[e]),e.domNodes_=o,e.domPrimary_=n,e.allNodes_=sre.Focus.generateAllVisibleNodes_(t,o,i,s),e},sre.Focus.generateAllVisibleNodes_=function(e,t,n,s){for(var o,r,c=function(e){return sre.WalkerUtil.getBySemanticId(s,e)},a=[],i=0,l=e.length;i<l;i++)t[i]?a.push(t[i]):(o=n[e[i]],o&&(o=o.childNodes.map(function(e){return e.id.toString()}),r=o.map(c),a=a.concat(sre.Focus.generateAllVisibleNodes_(o,r,n,s))));return a},sre.Levels=function(){this.level_=[]},sre.Levels.prototype.push=function(e){this.level_.push(e)},sre.Levels.prototype.pop=function(){return this.level_.pop()},sre.Levels.prototype.peek=function(){return this.level_[this.level_.length-1]||null},sre.Levels.prototype.indexOf=function(e){var t=this.peek();return t?t.indexOf(e):null},sre.Levels.prototype.find=function(e){if(t=this.peek(),!t)return null;for(var t,n=0,s=t.length;n<s;n++)if(e(t[n]))return t[n];return null},sre.Levels.prototype.get=function(e){var t=this.peek();return!t||0>e||e>=t.length?null:t[e]},sre.Levels.prototype.depth=function(){return this.level_.length},sre.Levels.prototype.clone=function(){var e=new sre.Levels;return e.level_=this.level_.slice(0),e},sre.Levels.prototype.toString=function(){for(var e,t="",n=0;e=this.level_[n];n++)t+=`
`+e.map(function(e){return e.toString()});return t},sre.Walker=function(){},sre.Walker.prototype.isActive=function(){},sre.Walker.prototype.activate=function(){},sre.Walker.prototype.deactivate=function(){},sre.Walker.prototype.speech=function(){},sre.Walker.prototype.getXml=function(){},sre.Walker.prototype.getRebuilt=function(){},sre.Walker.prototype.getFocus=function(){},sre.Walker.prototype.setFocus=function(){},sre.Walker.prototype.getDepth=function(){},sre.Walker.prototype.move=function(){},sre.Walker.prototype.update=function(){},sre.Walker.move={UP:"up",DOWN:"down",LEFT:"left",RIGHT:"right",REPEAT:"repeat",DEPTH:"depth",ENTER:"enter",EXPAND:"expand",HOME:"home",SUMMARY:"summary",DETAIL:"detail",ROW:"row",CELL:"cell"},sre.Walker.STATE_={},sre.Walker.resetState=function(e){delete sre.Walker.STATE_[e]},sre.Walker.setState=function(e,t){sre.Walker.STATE_[e]=t},sre.Walker.getState=function(e){return sre.Walker.STATE_[e]},sre.AbstractWalker=function(e,t,n,s){this.node=e,this.node.id?this.id=this.node.id:this.node.hasAttribute(sre.AbstractWalker.SRE_ID_ATTR)?this.id=this.node.getAttribute(sre.AbstractWalker.SRE_ID_ATTR):(this.node.setAttribute(sre.AbstractWalker.SRE_ID_ATTR,sre.AbstractWalker.ID_COUNTER),this.id=sre.AbstractWalker.ID_COUNTER++),this.generator=t,this.highlighter=n,this.rootNode=sre.WalkerUtil.getSemanticRoot(e),this.rootId=this.rootNode.getAttribute(sre.EnrichMathml.Attribute.ID),this.xmlString_=s,this.focus_=this.rebuilt_=this.xml_=null,this.keyMapping={},this.keyMapping[sre.EventUtil.KeyCode.UP]=goog.bind(this.up,this),this.keyMapping[sre.EventUtil.KeyCode.DOWN]=goog.bind(this.down,this),this.keyMapping[sre.EventUtil.KeyCode.RIGHT]=goog.bind(this.right,this),this.keyMapping[sre.EventUtil.KeyCode.LEFT]=goog.bind(this.left,this),this.keyMapping[sre.EventUtil.KeyCode.TAB]=goog.bind(this.repeat,this),this.keyMapping[sre.EventUtil.KeyCode.DASH]=goog.bind(this.expand,this),this.keyMapping[sre.EventUtil.KeyCode.SPACE]=goog.bind(this.depth,this),this.keyMapping[sre.EventUtil.KeyCode.HOME]=goog.bind(this.home,this),this.keyMapping[sre.EventUtil.KeyCode.X]=goog.bind(this.summary,this),this.keyMapping[sre.EventUtil.KeyCode.Z]=goog.bind(this.detail,this),this.keyMapping[sre.EventUtil.KeyCode.V]=goog.bind(this.virtualize,this),this.keyMapping[sre.EventUtil.KeyCode.P]=goog.bind(this.previous,this),this.keyMapping[sre.EventUtil.KeyCode.U]=goog.bind(this.undo,this),this.keyMapping[sre.EventUtil.KeyCode.LESS]=goog.bind(this.previousRules,this),this.keyMapping[sre.EventUtil.KeyCode.GREATER]=goog.bind(this.nextRules,this),this.active_=!1,this.moved=sre.Walker.move.ENTER,this.cursors=[]},sre.AbstractWalker.prototype.getXml=function(){return this.xml_||(this.xml_=sre.DomUtil.parseInput(this.xmlString_)),this.xml_},sre.AbstractWalker.prototype.getRebuilt=function(){return this.rebuilt_||(this.rebuilt_=this.rebuildStree()),this.rebuilt_},sre.AbstractWalker.ID_COUNTER=0,sre.AbstractWalker.SRE_ID_ATTR="sre-explorer-id",sre.AbstractWalker.prototype.isActive=function(){return this.active_},sre.AbstractWalker.prototype.toggleActive_=function(){this.active_=!this.active_},sre.AbstractWalker.prototype.activate=function(){this.isActive()||(this.generator.start(),this.toggleActive_())},sre.AbstractWalker.prototype.deactivate=function(){this.isActive()&&(sre.Walker.setState(this.id,this.primaryId()),this.generator.end(),this.toggleActive_())},sre.AbstractWalker.prototype.getFocus=function(e){return this.focus_||(this.focus_=sre.Focus.factory(this.rootId,[this.rootId],this.getRebuilt(),this.node)),e&&this.updateFocus(),this.focus_},sre.AbstractWalker.prototype.setFocus=function(e){this.focus_=e},sre.AbstractWalker.prototype.getDepth=function(){return this.levels.depth()-1},sre.AbstractWalker.prototype.isSpeech=function(){return this.generator.modality===sre.EnrichMathml.Attribute.SPEECH},sre.AbstractWalker.prototype.speech=function(){if(t=this.getFocus().getDomNodes(),!t.length)return"";if(e=this.specialMove(),null!==e)return e;switch(this.moved){case sre.Walker.move.DEPTH:return this.depth_();case sre.Walker.move.SUMMARY:return this.summary_();case sre.Walker.move.DETAIL:return this.detail_();default:e=[];for(var e,t,s,o,i=this.getFocus().getSemanticNodes(),n=0,a=t.length;n<a;n++)s=t[n],o=i[n],e.push(s?this.generator.getSpeech(s,this.getXml()):sre.SpeechGeneratorUtil.retrieveSpeech(o));return this.mergePrefix_(e)}},sre.AbstractWalker.prototype.mergePrefix_=function(e,t){t=t||[];var n=this.isSpeech()?this.prefix_():"",s=sre.AuralRendering.getInstance();return n&&e.unshift(n),s.finalize(s.merge(t.concat(e)))},sre.AbstractWalker.prototype.prefix_=function(){var e=this.getFocus().getDomNodes(),t=this.getFocus().getSemanticNodes();return e[0]?sre.WalkerUtil.getAttribute(e[0],sre.EnrichMathml.Attribute.PREFIX):sre.SpeechGeneratorUtil.retrievePrefix(t[0])},sre.AbstractWalker.prototype.move=function(e){return e=this.keyMapping[e],e?(e=e(),!!e&&e!==this.getFocus()&&(this.setFocus(e),this.moved===sre.Walker.move.HOME&&(this.levels=this.initLevels()),!0)):null},sre.AbstractWalker.prototype.up=function(){return this.moved=sre.Walker.move.UP,this.getFocus()},sre.AbstractWalker.prototype.down=function(){return this.moved=sre.Walker.move.DOWN,this.getFocus()},sre.AbstractWalker.prototype.left=function(){return this.moved=sre.Walker.move.LEFT,this.getFocus()},sre.AbstractWalker.prototype.right=function(){return this.moved=sre.Walker.move.RIGHT,this.getFocus()},sre.AbstractWalker.prototype.repeat=function(){return this.moved=sre.Walker.move.REPEAT,this.getFocus().clone()},sre.AbstractWalker.prototype.depth=function(){return this.moved=this.isSpeech()?sre.Walker.move.DEPTH:sre.Walker.move.REPEAT,this.getFocus().clone()},sre.AbstractWalker.prototype.depth_=function(){n=sre.Grammar.getInstance().getParameter("depth"),sre.Grammar.getInstance().setParameter("depth",!0);var n,e=this.getFocus().getDomPrimary(),e=this.expandable(e)&&[sre.Messages.NAVIGATE.EXPANDABLE]||this.collapsible(e)&&[sre.Messages.NAVIGATE.COLLAPSIBLE]||[],s=[sre.AuralRendering.getInstance().markup([new sre.AuditoryDescription({text:sre.Messages.NAVIGATE.LEVEL+" "+this.getDepth(),personality:{}})])],t=this.getFocus().getSemanticNodes(),t=sre.SpeechGeneratorUtil.retrievePrefix(t[0]),o=sre.AuralRendering.getInstance();return t&&s.push(t),sre.Grammar.getInstance().setParameter("depth",n),o.finalize(o.merge(s.concat(e)))},sre.AbstractWalker.prototype.home=function(){return this.moved=sre.Walker.move.HOME,sre.Focus.factory(this.rootId,[this.rootId],this.getRebuilt(),this.node)},sre.AbstractWalker.prototype.getBySemanticId=function(e){return sre.WalkerUtil.getBySemanticId(this.node,e)},sre.AbstractWalker.prototype.primaryId=function(){return this.getFocus().getSemanticPrimary().id.toString()},sre.AbstractWalker.prototype.expand=function(){var e=this.getFocus().getDomPrimary(),e=this.actionable_(e);return e?(this.moved=sre.Walker.move.EXPAND,e.dispatchEvent(new Event("click")),this.getFocus().clone()):this.getFocus()},sre.AbstractWalker.prototype.actionable_=function(e){return e&&e.parentNode&&this.highlighter.isMactionNode(e.parentNode)?e.parentNode:null},sre.AbstractWalker.prototype.expandable=function(e){return!!this.actionable_(e)&&0===e.childNodes.length},sre.AbstractWalker.prototype.collapsible=function(e){return!!this.actionable_(e)&&0<e.childNodes.length},sre.AbstractWalker.prototype.restoreState=function(){if(this.highlighter){var e,t=sre.Walker.getState(this.id);if(t){e=this.getRebuilt().nodeDict[t];for(t=[];e;)t.push(e.id),e=e.parent;for(t.pop();0<t.length;){if(this.down(),e=t.pop(),e=this.findFocusOnLevel(e),!e)break;this.setFocus(e)}this.moved=sre.Walker.move.ENTER}}},sre.AbstractWalker.prototype.updateFocus=function(){this.setFocus(sre.Focus.factory(this.getFocus().getSemanticPrimary().id.toString(),this.getFocus().getSemanticNodes().map(function(e){return e.id}),this.getRebuilt(),this.node))},sre.AbstractWalker.prototype.findFocusOnLevel=goog.abstractMethod,sre.AbstractWalker.prototype.initLevels=goog.abstractMethod,sre.AbstractWalker.prototype.rebuildStree=function(){var e=new sre.RebuildStree(this.getXml());return this.rootId=e.stree.root.id.toString(),this.generator.setRebuilt(e),this.focus_=sre.Focus.factory(this.rootId,[this.rootId],e,this.node),this.levels=this.initLevels(),sre.SpeechGeneratorUtil.connectMactions(this.node,this.getXml(),e.xml),e},sre.AbstractWalker.prototype.previousLevel=function(){var e=this.getFocus().getDomPrimary();return e?sre.WalkerUtil.getAttribute(e,sre.EnrichMathml.Attribute.PARENT):this.getFocus().getSemanticPrimary().parent.id.toString()},sre.AbstractWalker.prototype.nextLevel=function(){if(e=this.getFocus().getDomPrimary(),e){var e,s=sre.WalkerUtil.splitAttribute(sre.WalkerUtil.getAttribute(e,sre.EnrichMathml.Attribute.CHILDREN)),t=sre.WalkerUtil.splitAttribute(sre.WalkerUtil.getAttribute(e,sre.EnrichMathml.Attribute.CONTENT)),n=sre.WalkerUtil.getAttribute(e,sre.EnrichMathml.Attribute.TYPE);return e=sre.WalkerUtil.getAttribute(e,sre.EnrichMathml.Attribute.ROLE),this.combineContentChildren(n,e,t,s)}return t=function(e){return e.id.toString()},n=this.getRebuilt().nodeDict[this.primaryId()],s=n.childNodes.map(t),t=n.contentNodes.map(t),0===s.length?[]:this.combineContentChildren(n.type,n.role,t,s)},sre.AbstractWalker.prototype.combineContentChildren=goog.abstractMethod,sre.AbstractWalker.prototype.singletonFocus=function(e){return this.focusFromId(e,[e])},sre.AbstractWalker.prototype.focusFromId=function(e,t){return sre.Focus.factory(e,t,this.getRebuilt(),this.node)},sre.AbstractWalker.prototype.summary=function(){return this.moved=this.isSpeech()?sre.Walker.move.SUMMARY:sre.Walker.move.REPEAT,this.getFocus().clone()},sre.AbstractWalker.prototype.summary_=function(){var e=this.getFocus().getSemanticPrimary().id.toString(),e=this.getRebuilt().xml.getAttribute("id")===e?this.getRebuilt().xml:sre.DomUtil.querySelectorAllByAttrValue(this.getRebuilt().xml,"id",e)[0],e=sre.SpeechGeneratorUtil.retrieveSummary(e);return this.mergePrefix_([e])},sre.AbstractWalker.prototype.detail=function(){return this.moved=this.isSpeech()?sre.Walker.move.DETAIL:sre.Walker.move.REPEAT,this.getFocus().clone()},sre.AbstractWalker.prototype.detail_=function(){var t,e=this.getFocus().getSemanticPrimary().id.toString(),e=this.getRebuilt().xml.getAttribute("id")===e?this.getRebuilt().xml:sre.DomUtil.querySelectorAllByAttrValue(this.getRebuilt().xml,"id",e)[0],n=e.getAttribute("alternative");return e.removeAttribute("alternative"),t=sre.SpeechGeneratorUtil.computeSpeechWithoutCache(e),t=sre.AuralRendering.getInstance().markup(t),t=this.mergePrefix_([t]),e.setAttribute("alternative",n),t},sre.AbstractWalker.prototype.specialMove=function(){return null},sre.AbstractWalker.prototype.virtualize=function(e){return this.cursors.push({focus:this.getFocus(),levels:this.levels,undo:e||!this.cursors.length}),this.levels=this.levels.clone(),this.getFocus().clone()},sre.AbstractWalker.prototype.previous=function(){var e=this.cursors.pop();return e?(this.levels=e.levels,e.focus):this.getFocus()},sre.AbstractWalker.prototype.undo=function(){do var e=this.cursors.pop();while(e&&!e.undo)return e?(this.levels=e.levels,e.focus):this.getFocus()},sre.AbstractWalker.prototype.update=function(e){this.generator.setOptions(e),sre.System.getInstance().setupEngine(e),sre.SpeechGeneratorFactory.generator("Tree").getSpeech(this.node,this.getXml())},sre.AbstractWalker.prototype.nextRules=function(){var e=this.generator.getOptions();return"speech"!==e.modality?this.getFocus():(sre.Engine.DOMAIN_TO_STYLES[e.domain]=e.style,e.domain="mathspeak"===e.domain?"clearspeak":"mathspeak",e.style=sre.Engine.DOMAIN_TO_STYLES[e.domain],this.update(e),this.moved=sre.Walker.move.REPEAT,this.getFocus().clone())},sre.AbstractWalker.prototype.nextStyle=function(e,t){if("mathspeak"===e){e=["default","brief","sbrief"];var s,n=e.indexOf(t);return-1===n?t:n>=e.length-1?e[0]:e[n+1]}return"clearspeak"===e?(s=sre.ClearspeakPreferences.getLocalePreferences().en,s?(e=sre.ClearspeakPreferences.relevantPreferences(this.getFocus().getSemanticPrimary()),n=sre.ClearspeakPreferences.findPreference(t,e),s=s[e].map(function(e){return e.split("_")[1]}),n=s.indexOf(n),-1===n?t:sre.ClearspeakPreferences.addPreference(t,e,n>=s.length-1?s[0]:s[n+1])):"default"):t},sre.AbstractWalker.prototype.previousRules=function(){var e=this.generator.getOptions();return"speech"!==e.modality?this.getFocus():(e.style=this.nextStyle(e.domain,e.style),this.update(e),this.moved=sre.Walker.move.REPEAT,this.getFocus().clone())},sre.DummyWalker=function(e,t,n,s){sre.AbstractWalker.call(this,e,t,n,s)},goog.inherits(sre.DummyWalker,sre.AbstractWalker),sre.DummyWalker.prototype.up=function(){},sre.DummyWalker.prototype.down=function(){},sre.DummyWalker.prototype.left=function(){},sre.DummyWalker.prototype.right=function(){},sre.DummyWalker.prototype.repeat=function(){},sre.DummyWalker.prototype.depth=function(){},sre.DummyWalker.prototype.home=function(){},sre.DummyWalker.prototype.getDepth=function(){return 0},sre.DummyWalker.prototype.initLevels=function(){},sre.SemanticWalker=function(e,t,n,s){sre.AbstractWalker.call(this,e,t,n,s),this.levels=null,this.restoreState()},goog.inherits(sre.SemanticWalker,sre.AbstractWalker),sre.SemanticWalker.prototype.initLevels=function(){var e=new sre.Levels;return e.push([this.getFocus()]),e},sre.SemanticWalker.prototype.up=function(){sre.SemanticWalker.superClass_.up.call(this);var e=this.previousLevel();return e?(this.levels.pop(),this.levels.find(function(t){return t.getSemanticNodes().some(function(t){return t.id.toString()===e})})):null},sre.SemanticWalker.prototype.down=function(){sre.SemanticWalker.superClass_.down.call(this);var e=this.nextLevel();return 0===e.length?null:(this.levels.push(e),e[0])},sre.SemanticWalker.prototype.combineContentChildren=function(e,t,n,s){switch(e){case sre.SemanticAttr.Type.RELSEQ:case sre.SemanticAttr.Type.INFIXOP:case sre.SemanticAttr.Type.MULTIREL:return this.makePairList(s,n);case sre.SemanticAttr.Type.PREFIXOP:return[this.focusFromId(s[0],n.concat(s))];case sre.SemanticAttr.Type.POSTFIXOP:return[this.focusFromId(s[0],s.concat(n))];case sre.SemanticAttr.Type.MATRIX:case sre.SemanticAttr.Type.VECTOR:case sre.SemanticAttr.Type.FENCED:return[this.focusFromId(s[0],[n[0],s[0],n[1]])];case sre.SemanticAttr.Type.CASES:return[this.focusFromId(s[0],[n[0],s[0]])];case sre.SemanticAttr.Type.PUNCTUATED:return t===sre.SemanticAttr.Role.TEXT?s.map(goog.bind(this.singletonFocus,this)):s.length===n.length?n.map(goog.bind(this.singletonFocus,this)):this.combinePunctuations(s,n,[],[]);case sre.SemanticAttr.Type.APPL:return[this.focusFromId(s[0],[s[0],n[0]]),this.singletonFocus(s[1])];case sre.SemanticAttr.Type.ROOT:return[this.singletonFocus(s[1]),this.singletonFocus(s[0])];default:return s.map(goog.bind(this.singletonFocus,this))}},sre.SemanticWalker.prototype.combinePunctuations=function(e,t,n,s){if(0===e.length)return s;var o=e.shift(),i=t.shift();return o===i?(n.push(i),this.combinePunctuations(e,t,n,s)):(t.unshift(i),n.push(o),e.length===t.length?(s.push(this.focusFromId(o,n.concat(t))),s):(s.push(this.focusFromId(o,n)),this.combinePunctuations(e,t,[],s)))},sre.SemanticWalker.prototype.makePairList=function(e,t){if(0===e.length)return[];if(1===e.length)return[this.singletonFocus(e[0])];for(var s=[this.singletonFocus(e.shift())],n=0,o=e.length;n<o;n++)s.push(this.focusFromId(e[n],[t[n],e[n]]));return s},sre.SemanticWalker.prototype.left=function(){sre.SemanticWalker.superClass_.left.call(this);var e=this.levels.indexOf(this.getFocus());return null===e?null:(e=this.levels.get(e-1))||null},sre.SemanticWalker.prototype.right=function(){sre.SemanticWalker.superClass_.right.call(this);var e=this.levels.indexOf(this.getFocus());return null===e?null:(e=this.levels.get(e+1))||null},sre.SemanticWalker.prototype.findFocusOnLevel=function(e){return this.levels.find(function(t){return t.getSemanticPrimary().id===e})},sre.SyntaxWalker=function(e,t,n,s){sre.AbstractWalker.call(this,e,t,n,s),this.levels=null,this.restoreState()},goog.inherits(sre.SyntaxWalker,sre.AbstractWalker),sre.SyntaxWalker.prototype.initLevels=function(){var e=new sre.Levels;return e.push([this.primaryId()]),e},sre.SyntaxWalker.prototype.up=function(){sre.SyntaxWalker.superClass_.up.call(this);var e=this.previousLevel();return e?(this.levels.pop(),this.singletonFocus(e)):null},sre.SyntaxWalker.prototype.down=function(){sre.SyntaxWalker.superClass_.down.call(this);var e,t=this.nextLevel();return 0===t.length?null:(e=this.singletonFocus(t[0]),e&&this.levels.push(t),e)},sre.SyntaxWalker.prototype.combineContentChildren=function(e,t,n,s){switch(e){case sre.SemanticAttr.Type.RELSEQ:case sre.SemanticAttr.Type.INFIXOP:case sre.SemanticAttr.Type.MULTIREL:return sre.BaseUtil.interleaveLists(s,n);case sre.SemanticAttr.Type.PREFIXOP:return n.concat(s);case sre.SemanticAttr.Type.POSTFIXOP:return s.concat(n);case sre.SemanticAttr.Type.MATRIX:case sre.SemanticAttr.Type.VECTOR:case sre.SemanticAttr.Type.FENCED:return s.unshift(n[0]),s.push(n[1]),s;case sre.SemanticAttr.Type.CASES:return s.unshift(n[0]),s;case sre.SemanticAttr.Type.PUNCTUATED:return t===sre.SemanticAttr.Role.TEXT?sre.BaseUtil.interleaveLists(s,n):s;case sre.SemanticAttr.Type.APPL:return[s[0],n[0],s[1]];case sre.SemanticAttr.Type.ROOT:return[s[1],s[0]];default:return s}},sre.SyntaxWalker.prototype.left=function(){sre.SyntaxWalker.superClass_.left.call(this);var e=this.levels.indexOf(this.primaryId());return null===e?null:(e=this.levels.get(e-1))?this.singletonFocus(e):null},sre.SyntaxWalker.prototype.right=function(){sre.SyntaxWalker.superClass_.right.call(this);var e=this.levels.indexOf(this.primaryId());return null===e?null:(e=this.levels.get(e+1))?this.singletonFocus(e):null},sre.SyntaxWalker.prototype.findFocusOnLevel=function(e){return this.singletonFocus(e.toString())},sre.TableWalker=function(e,t,n,s){sre.SyntaxWalker.call(this,e,t,n,s),this.modifier=!1,this.keyMapping[sre.EventUtil.KeyCode[0]]=goog.bind(this.jumpCell,this),this.keyMapping[sre.EventUtil.KeyCode[1]]=goog.bind(this.jumpCell,this),this.keyMapping[sre.EventUtil.KeyCode[2]]=goog.bind(this.jumpCell,this),this.keyMapping[sre.EventUtil.KeyCode[3]]=goog.bind(this.jumpCell,this),this.keyMapping[sre.EventUtil.KeyCode[4]]=goog.bind(this.jumpCell,this),this.keyMapping[sre.EventUtil.KeyCode[5]]=goog.bind(this.jumpCell,this),this.keyMapping[sre.EventUtil.KeyCode[6]]=goog.bind(this.jumpCell,this),this.keyMapping[sre.EventUtil.KeyCode[7]]=goog.bind(this.jumpCell,this),this.keyMapping[sre.EventUtil.KeyCode[8]]=goog.bind(this.jumpCell,this),this.keyMapping[sre.EventUtil.KeyCode[9]]=goog.bind(this.jumpCell,this),this.key_=null,this.row_=0,this.firstJump=this.currentTable_=null},goog.inherits(sre.TableWalker,sre.SyntaxWalker),sre.TableWalker.prototype.move=function(e){return this.key_=e,e=sre.TableWalker.superClass_.move.call(this,e),this.modifier=!1,e},sre.TableWalker.prototype.up=function(){return this.moved=sre.Walker.move.UP,this.eligibleCell_()?this.verticalMove_(!1):sre.TableWalker.superClass_.up.call(this)},sre.TableWalker.prototype.down=function(){return this.moved=sre.Walker.move.DOWN,this.eligibleCell_()?this.verticalMove_(!0):sre.TableWalker.superClass_.down.call(this)},sre.TableWalker.ELIGIBLE_CELL_ROLES=[sre.SemanticAttr.Role.DETERMINANT,sre.SemanticAttr.Role.ROWVECTOR,sre.SemanticAttr.Role.BINOMIAL,sre.SemanticAttr.Role.SQUAREMATRIX,sre.SemanticAttr.Role.MULTILINE,sre.SemanticAttr.Role.MATRIX,sre.SemanticAttr.Role.VECTOR,sre.SemanticAttr.Role.CASES,sre.SemanticAttr.Role.TABLE],sre.TableWalker.ELIGIBLE_TABLE_TYPES=[sre.SemanticAttr.Type.MULTILINE,sre.SemanticAttr.Type.MATRIX,sre.SemanticAttr.Type.VECTOR,sre.SemanticAttr.Type.CASES,sre.SemanticAttr.Type.TABLE],sre.TableWalker.prototype.eligibleCell_=function(){var e=this.getFocus().getSemanticPrimary();return this.modifier&&e.type===sre.SemanticAttr.Type.CELL&&-1!==sre.TableWalker.ELIGIBLE_CELL_ROLES.indexOf(e.role)},sre.TableWalker.prototype.verticalMove_=function(e){if(t=this.previousLevel(),!t)return null;var o=this.getFocus(),n=this.levels.indexOf(this.primaryId()),s=this.levels.pop(),t=this.levels.indexOf(t);return e=this.levels.get(e?t+1:t-1),e?(this.setFocus(this.singletonFocus(e)),e=this.nextLevel(),e[n]?(this.levels.push(e),this.singletonFocus(e[n])):(this.setFocus(o),this.levels.push(s),null)):(this.levels.push(s),null)},sre.TableWalker.prototype.jumpCell=function(){if(!this.isInTable_()||null===this.key_)return this.getFocus();if(this.moved===sre.Walker.move.ROW){this.moved=sre.Walker.move.CELL;var e=this.key_-sre.EventUtil.KeyCode[0];return this.isLegalJump_(this.row_,e)?this.jumpCell_(this.row_,e):this.getFocus()}return e=this.key_-sre.EventUtil.KeyCode[0],e>this.currentTable_.childNodes.length?this.getFocus():(this.row_=e,this.moved=sre.Walker.move.ROW,this.getFocus().clone())},sre.TableWalker.prototype.jumpCell_=function(e,t){this.firstJump?this.virtualize(!1):(this.firstJump=this.getFocus(),this.virtualize(!0));var n,s=this.currentTable_.id.toString();do n=this.levels.pop();while(-1===n.indexOf(s))return this.levels.push(n),this.setFocus(this.singletonFocus(s)),this.levels.push(this.nextLevel()),e=this.currentTable_.childNodes[e-1],this.setFocus(this.singletonFocus(e.id.toString())),this.levels.push(this.nextLevel()),this.singletonFocus(e.childNodes[t-1].id.toString())},sre.TableWalker.prototype.isLegalJump_=function(e,t){var n=sre.DomUtil.querySelectorAllByAttrValue(this.getRebuilt().xml,"id",this.currentTable_.id.toString())[0];return!!n&&!n.hasAttribute("alternative")&&(e=this.currentTable_.childNodes[e-1],!!e&&(n=sre.DomUtil.querySelectorAllByAttrValue(n,"id",e.id.toString())[0],!!n&&!n.hasAttribute("alternative")&&!!e&&!!e.childNodes[t-1]))},sre.TableWalker.prototype.isInTable_=function(){for(var e=this.getFocus().getSemanticPrimary();e;){if(-1!==sre.TableWalker.ELIGIBLE_TABLE_TYPES.indexOf(e.type))return this.currentTable_=e,!0;e=e.parent}return!1},sre.TableWalker.prototype.undo=function(){var e=sre.TableWalker.superClass_.undo.call(this);return e===this.firstJump&&(this.firstJump=null),e},sre.WalkerFactory={},sre.WalkerFactory.walker=function(e,t,n,s,o){return new(sre.WalkerFactory.walkerMapping_[e.toLowerCase()]||sre.WalkerFactory.walkerMapping_.dummy)(t,n,s,o)},sre.WalkerFactory.walkerMapping_={dummy:sre.DummyWalker,semantic:sre.SemanticWalker,syntax:sre.SyntaxWalker,table:sre.TableWalker},sre.ProcessorFactory={},sre.ProcessorFactory.PROCESSORS_={},sre.ProcessorFactory.get_=function(e){var t=sre.ProcessorFactory.PROCESSORS_[e.toLowerCase()];if(!t)throw new sre.Engine.Error("Unknown processor "+e);return t},sre.ProcessorFactory.process=function(e,t){return sre.ProcessorFactory.get_(e).processor(t)},sre.ProcessorFactory.print=function(e,t){return e=sre.ProcessorFactory.get_(e),sre.Engine.getInstance().pprint?e.pprint(t):e.print(t)},sre.ProcessorFactory.output=function(e,t){return e=sre.ProcessorFactory.get_(e),t=e.processor(t),sre.Engine.getInstance().pprint?e.pprint(t):e.print(t)},sre.ProcessorFactory.keypress=function(e,t){return e=sre.ProcessorFactory.get_(e),t=e.key?e.key(t):t,t=e.processor(t),sre.Engine.getInstance().pprint?e.pprint(t):e.print(t)},sre.Processor=function(e,t){this.name=e,this.processor=t.processor,this.print=t.print||sre.Processor.stringify_,this.pprint=t.pprint||this.print,sre.ProcessorFactory.PROCESSORS_[this.name]=this},sre.KeyProcessor=function(e,t){sre.Processor.call(this,e,t),this.key=t.key||sre.KeyProcessor.getKey_},goog.inherits(sre.KeyProcessor,sre.Processor),sre.KeyProcessor.getKey_=function(e){return"string"==typeof e?sre.EventUtil.KeyCode[e.toUpperCase()]:e},sre.Processor.LocalState_={walker:null,speechGenerator:null,highlighter:null},sre.Processor.stringify_=function(e){return e&&e.toString()},new sre.Processor("semantic",{processor:function(e){return e=sre.DomUtil.parseInput(e),sre.Semantic.xmlTree(e)},pprint:function(e){return sre.DomUtil.formatXml(e.toString())}}),new sre.Processor("speech",{processor:function(e){e=sre.DomUtil.parseInput(e),e=sre.Semantic.xmlTree(e),e=sre.SpeechGeneratorUtil.computeSpeech(e);var t=sre.AuralRendering.getInstance();return t.finalize(t.markup(e))},pprint:function(e){return e=e.toString(),sre.AuralRendering.ofType(sre.XmlRenderer)?sre.DomUtil.formatXml(e):e}}),new sre.Processor("json",{processor:function(e){return e=sre.DomUtil.parseInput(e,sre.Engine.Error),sre.Semantic.getTree(e).toJson()},print:function(e){return JSON.stringify(e)},pprint:function(e){return JSON.stringify(e,null,2)}}),new sre.Processor("description",{processor:function(e){return e=sre.DomUtil.parseInput(e),e=sre.Semantic.xmlTree(e),sre.SpeechGeneratorUtil.computeSpeech(e)},print:function(e){return JSON.stringify(e)},pprint:function(e){return JSON.stringify(e,null,2)}}),new sre.Processor("enriched",{processor:function(e){e=sre.Enrich.semanticMathmlSync(e);var t,n=sre.WalkerUtil.getSemanticRoot(e);switch(sre.Engine.getInstance().speech){case sre.Engine.Speech.SHALLOW:t=sre.SpeechGeneratorFactory.generator("Adhoc"),t.getSpeech(n,e);break;case sre.Engine.Speech.DEEP:t=sre.SpeechGeneratorFactory.generator("Tree"),t.getSpeech(n,e)}return e},pprint:function(e){return sre.DomUtil.formatXml(e.toString())}}),new sre.Processor("walker",{processor:function(e){var t,n=sre.SpeechGeneratorFactory.generator("Node");return sre.Processor.LocalState_.speechGenerator=n,sre.Processor.LocalState_.highlighter=sre.HighlighterFactory.highlighter({color:"black"},{color:"white"},{renderer:"NativeMML"}),e=sre.ProcessorFactory.process("enriched",e),t=sre.ProcessorFactory.print("enriched",e),sre.Processor.LocalState_.walker=sre.WalkerFactory.walker(sre.Engine.getInstance().walker,e,n,sre.Processor.LocalState_.highlighter,t),sre.Processor.LocalState_.walker},print:function(){return sre.Processor.LocalState_.walker.speech()}}),new sre.KeyProcessor("move",{processor:function(e){return sre.Processor.LocalState_.walker?!1===sre.Processor.LocalState_.walker.move(e)?sre.AuralRendering.getInstance().error(e):sre.Processor.LocalState_.walker.speech():null}}),sre.System=function(){this.version=sre.Variables.VERSION},goog.addSingletonGetter(sre.System),sre.System.prototype.setupEngine=function(e){var t=sre.Engine.getInstance(),n=function(n){t[n]=e[n]||t[n]};n("mode"),sre.System.prototype.configBlocks_(e),sre.Engine.BINARY_FEATURES.forEach(function(n){"undefined"!=typeof e[n]&&(t[n]=!!e[n])}),sre.Engine.STRING_FEATURES.forEach(n),e.json&&(sre.SystemExternal.jsonPath=sre.BaseUtil.makePath(e.json)),e.xpath&&(sre.SystemExternal.WGXpath=e.xpath),t.setupBrowsers(),t.ruleSets=e.rules?e.rules:sre.SpeechRuleStores.availableSets(),sre.SpeechRuleEngine.getInstance().parameterize(t.ruleSets),t.setDynamicCstr(),sre.L10n.setLocale()},sre.System.prototype.configBlocks_=function(e){if(!sre.Engine.getInstance().config&&sre.Engine.getInstance().mode===sre.Engine.Mode.HTTP){sre.Engine.getInstance().config=!0;for(var t,n,s,i=document.documentElement.querySelectorAll('script[type="text/x-sre-config"]'),o=0,a=i.length;o<a;o++)try{t=i[o].innerHTML,n=JSON.parse(t);for(s in n)e[s]=n[s]}catch{sre.Debugger.getInstance().output("Illegal configuration ",t)}}},sre.System.setAsync=function(){sre.Engine.isReady()||setTimeout(sre.System.setAsync,500),sre.System.getInstance().setupEngine({mode:sre.Engine.Mode.ASYNC})},sre.System.prototype.engineSetup=function(){var n=["mode"].concat(sre.Engine.STRING_FEATURES,sre.Engine.BINARY_FEATURES),t=sre.Engine.getInstance(),e={};return n.forEach(function(n){e[n]=t[n]}),e.json=sre.SystemExternal.jsonPath,e.xpath=sre.SystemExternal.WGXpath,e.rules=t.ruleSets.slice(),e},sre.System.prototype.engineReady=function(){return sre.Engine.isReady()},sre.System.prototype.toSpeech=function(e){return sre.System.getInstance().processString("speech",e)},sre.System.prototype.toSemantic=function(e){return sre.System.getInstance().processString("semantic",e)},sre.System.prototype.toJson=function(e){return sre.System.getInstance().processString("json",e)},sre.System.prototype.toDescription=function(e){return sre.System.getInstance().processString("description",e)},sre.System.prototype.toEnriched=function(e){return sre.System.getInstance().processString("enriched",e)},sre.System.prototype.processString=function(e,t){return sre.ProcessorFactory.process(e,t)},sre.System.prototype.fileToSpeech=function(e,t){sre.System.getInstance().processFile("speech",e,t)},sre.System.prototype.fileToSemantic=function(e,t){sre.System.getInstance().processFile("semantic",e,t)},sre.System.prototype.fileToJson=function(e,t){sre.System.getInstance().processFile("json",e,t)},sre.System.prototype.fileToDescription=function(e,t){sre.System.getInstance().processFile("description",e,t)},sre.System.prototype.fileToEnriched=function(e,t){sre.System.getInstance().processFile("enriched",e,t)},sre.System.prototype.processFile=function(e,t,n){sre.Engine.isReady()?sre.Engine.getInstance().mode===sre.Engine.Mode.SYNC?this.processFileSync_(e,t,n):this.processFileAsync_(e,t,n):setTimeout(goog.bind(function(){this.processFile(e,t,n)},this),100)},sre.System.prototype.inputFileSync_=function(e){try{var t=sre.SystemExternal.fs.readFileSync(e,{encoding:"utf8"})}catch{throw new sre.Engine.Error("Can not open file: "+e)}return t},sre.System.prototype.processFileSync_=function(e,t,n){if(t=sre.System.getInstance().inputFileSync_(t),e=sre.ProcessorFactory.output(e,t),n)try{sre.SystemExternal.fs.writeFileSync(n,e)}catch{throw new sre.Engine.Error("Can not write to file: "+n)}else console.info(e)},sre.System.prototype.inputFileAsync_=function(e,t){sre.SystemExternal.fs.readFile(e,{encoding:"utf8"},goog.bind(function(n,s){if(n)throw new sre.Engine.Error("Can not open file: "+e);t(s)},this))},sre.System.prototype.processFileAsync_=function(e,t,n){sre.System.getInstance().inputFileAsync_(t,goog.bind(function(t){t=sre.ProcessorFactory.output(e,t),n?sre.SystemExternal.fs.writeFile(n,t,function(e){if(e)throw new sre.Engine.Error("Can not write to file: "+n)}):console.info(t)},this))},sre.System.prototype.walk=function(e){return sre.ProcessorFactory.output("walker",e)},sre.System.prototype.move=function(e){return sre.ProcessorFactory.keypress("move",e)},sre.Browser={},sre.System.getInstance().setupEngine({mode:sre.Engine.Mode.HTTP,domain:"mathspeak",style:"default"}),SRE=sre.System.getInstance()