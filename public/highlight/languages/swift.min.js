/*! `swift` grammar compiled for Highlight.js 11.6.0 */(()=>{var e=(()=>{"use strict";function h(e){return e?"string"==typeof e?e:e.source:null}function s(t){return e("(?=",t,")")}function e(...e){return e.map(e=>h(e)).join("")}function t(...e){const t=(e=>{const t=e[e.length-1];return"object"==typeof t&&t.constructor===Object?(e.splice(e.length-1,1),t):{}})(e);return"("+(t.capture?"":"?:")+e.map(e=>h(e)).join("|")+")"}const r=t=>e(/\b/,t,/\w$/.test(t)?/\b/:/\B/),g=["Protocol","Type"].map(r),l=["init","self"].map(r),j=["Any","Self"],i=["actor","any","associatedtype","async","await",/as\?/,/as!/,"as","break","case","catch","class","continue","convenience","default","defer","deinit","didSet","distributed","do","dynamic","else","enum","extension","fallthrough",/fileprivate\(set\)/,"fileprivate","final","for","func","get","guard","if","import","indirect","infix",/init\?/,/init!/,"inout",/internal\(set\)/,"internal","in","is","isolated","nonisolated","lazy","let","mutating","nonmutating",/open\(set\)/,"open","operator","optional","override","postfix","precedencegroup","prefix",/private\(set\)/,"private","protocol",/public\(set\)/,"public","repeat","required","rethrows","return","set","some","static","struct","subscript","super","switch","throws","throw",/try\?/,/try!/,"try","typealias",/unowned\(safe\)/,/unowned\(unsafe\)/,"unowned","var","weak","where","while","willSet"],u=["false","nil","true"],b=["assignment","associativity","higherThan","left","lowerThan","none","right"],v=["#colorLiteral","#column","#dsohandle","#else","#elseif","#endif","#error","#file","#fileID","#fileLiteral","#filePath","#function","#if","#imageLiteral","#keyPath","#line","#selector","#sourceLocation","#warn_unqualified_access","#warning"],m=["abs","all","any","assert","assertionFailure","debugPrint","dump","fatalError","getVaList","isKnownUniquelyReferenced","max","min","numericCast","pointwiseMax","pointwiseMin","precondition","preconditionFailure","print","readLine","repeatElement","sequence","stride","swap","swift_unboxFromSwiftValueWithType","transcode","type","unsafeBitCast","unsafeDowncast","withExtendedLifetime","withUnsafeMutablePointer","withUnsafePointer","withVaList","withoutActuallyEscaping","zip"],f=t(/[/=\-+!*%<>&|^~?]/,/[\u00A1-\u00A7]/,/[\u00A9\u00AB]/,/[\u00AC\u00AE]/,/[\u00B0\u00B1]/,/[\u00B6\u00BB\u00BF\u00D7\u00F7]/,/[\u2016-\u2017]/,/[\u2020-\u2027]/,/[\u2030-\u203E]/,/[\u2041-\u2053]/,/[\u2055-\u205E]/,/[\u2190-\u23FF]/,/[\u2500-\u2775]/,/[\u2794-\u2BFF]/,/[\u2E00-\u2E7F]/,/[\u3001-\u3003]/,/[\u3008-\u3020]/,/[\u3030]/),p=t(f,/[\u0300-\u036F]/,/[\u1DC0-\u1DFF]/,/[\u20D0-\u20FF]/,/[\uFE00-\uFE0F]/,/[\uFE20-\uFE2F]/),c=e(f,p,"*"),d=t(/[a-zA-Z_]/,/[\u00A8\u00AA\u00AD\u00AF\u00B2-\u00B5\u00B7-\u00BA]/,/[\u00BC-\u00BE\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u00FF]/,/[\u0100-\u02FF\u0370-\u167F\u1681-\u180D\u180F-\u1DBF]/,/[\u1E00-\u1FFF]/,/[\u200B-\u200D\u202A-\u202E\u203F-\u2040\u2054\u2060-\u206F]/,/[\u2070-\u20CF\u2100-\u218F\u2460-\u24FF\u2776-\u2793]/,/[\u2C00-\u2DFF\u2E80-\u2FFF]/,/[\u3004-\u3007\u3021-\u302F\u3031-\u303F\u3040-\uD7FF]/,/[\uF900-\uFD3D\uFD40-\uFDCF\uFDF0-\uFE1F\uFE30-\uFE44]/,/[\uFE47-\uFEFE\uFF00-\uFFFD]/),o=t(d,/\d/,/[\u0300-\u036F\u1DC0-\u1DFF\u20D0-\u20FF\uFE20-\uFE2F]/),n=e(d,o,"*"),a=e(/[A-Z]/,o,"*"),y=["autoclosure",e(/convention\(/,t("swift","block","c"),/\)/),"discardableResult","dynamicCallable","dynamicMemberLookup","escaping","frozen","GKInspectable","IBAction","IBDesignable","IBInspectable","IBOutlet","IBSegueAction","inlinable","main","nonobjc","NSApplicationMain","NSCopying","NSManaged",e(/objc\(/,n,/\)/),"objc","objcMembers","propertyWrapper","requires_stored_property_inits","resultBuilder","testable","UIApplicationMain","unknown","usableFromInline"],_=["iOS","iOSApplicationExtension","macOS","macOSApplicationExtension","macCatalyst","macCatalystApplicationExtension","watchOS","watchOSApplicationExtension","tvOS","tvOSApplicationExtension","swift"];return d=>{const L={match:/\s+/,relevance:0},$=d.COMMENT("/\\*","\\*/",{contains:["self"]}),f=[d.C_LINE_COMMENT_MODE,$],V={match:[/\./,t(...g,...l)],className:{2:"keyword"}},B={match:e(/\./,t(...i)),relevance:0},U=i.filter(e=>"string"==typeof e).concat(["_|0"]),K={variants:[{className:"keyword",match:t(...i.filter(e=>"string"!=typeof e).concat(j).map(r),...l)}]},O={$pattern:t(/\b\w+/,/#\w+/),keyword:U.concat(v),literal:u},x=[V,B,K],F=[{match:e(/\./,t(...m)),relevance:0},{className:"built_in",match:e(/\b/,t(...m),/(?=\()/)}],R={match:/->/,relevance:0},E=[R,{className:"operator",relevance:0,variants:[{match:c},{match:`\\.(\\.|${p})+`}]}],H="([0-9a-fA-F]_*)+",C={className:"number",relevance:0,variants:[{match:"\\b(([0-9]_*)+)(\\.(([0-9]_*)+))?([eE][+-]?(([0-9]_*)+))?\\b"},{match:`\\b0x(${H})(\\.(${H}))?([pP][+-]?(([0-9]_*)+))?\\b`},{match:/\b0o([0-7]_*)+\b/},{match:/\b0b([01]_*)+\b/}]},D=(t="")=>({className:"subst",variants:[{match:e(/\\/,t,/[0\\tnr"']/)},{match:e(/\\/,t,/u\{[0-9a-fA-F]{1,8}\}/)}]}),q=(t="")=>({className:"subst",match:e(/\\/,t,/[\t ]*(?:[\r\n]|\r\n)/)}),T=(t="")=>({className:"subst",label:"interpol",begin:e(/\\/,t,/\(/),end:/\)/}),S=(t="")=>({begin:e(t,/"""/),end:e(/"""/,t),contains:[D(t),q(t),T(t)]}),A=(t="")=>({begin:e(t,/"/),end:e(/"/,t),contains:[D(t),T(t)]}),w={className:"string",variants:[S(),S("#"),S("##"),S("###"),A(),A("#"),A("##"),A("###")]},I={match:e(/`/,n,/`/)},M=[I,{className:"variable",match:/\$\d+/},{className:"variable",match:`\\$${o}+`}],k=[{match:/(@|#(un)?)available/,className:"keyword",starts:{contains:[{begin:/\(/,end:/\)/,keywords:_,contains:[...E,C,w]}]}},{className:"keyword",match:e(/@/,t(...y))},{className:"meta",match:e(/@/,n)}],h={match:s(/\b[A-Z]/),relevance:0,contains:[{className:"type",match:e(/(AV|CA|CF|CG|CI|CL|CM|CN|CT|MK|MP|MTK|MTL|NS|SCN|SK|UI|WK|XC)/,o,"+")},{className:"type",match:a,relevance:0},{match:/[?!]+/,relevance:0},{match:/\.\.\./,relevance:0},{match:e(/\s+&\s+/,s(a)),relevance:0}]},W={begin:/</,end:/>/,keywords:O,contains:[...f,...x,...k,R,h]};h.contains.push(W);const z={begin:/\(/,end:/\)/,relevance:0,keywords:O,contains:["self",{match:e(n,/\s*:/),keywords:"_|0",relevance:0},...f,...x,...F,...E,C,w,...M,...k,h]},P={begin:/</,end:/>/,contains:[...f,h]},N={begin:/\(/,end:/\)/,keywords:O,contains:[{begin:t(s(e(n,/\s*:/)),s(e(n,/\s+/,n,/\s*:/))),end:/:/,relevance:0,contains:[{className:"keyword",match:/\b_\b/},{className:"params",match:n}]},...f,...x,...E,C,w,...k,h,z],endsParent:!0,illegal:/["']/},Y={match:[/func/,/\s+/,t(I.match,n,c)],className:{1:"keyword",3:"title.function"},contains:[P,N,L],illegal:[/\[/,/%/]},G={match:[/\b(?:subscript|init[?!]?)/,/\s*(?=[<(])/],className:{1:"keyword"},contains:[P,N,L],illegal:/\[|%/},X={match:[/operator/,/\s+/,c],className:{1:"keyword",3:"title"}},Q={begin:[/precedencegroup/,/\s+/,a],className:{1:"keyword",3:"title"},contains:[h],keywords:[...b,...u],end:/}/};for(const n of w.variants){const e=n.contains.find(e=>"interpol"===e.label);e.keywords=O;const t=[...x,...F,...E,C,w,...M];e.contains=[...t,{begin:/\(/,end:/\)/,contains:["self",...t]}]}return{name:"Swift",keywords:O,contains:[...f,Y,G,{beginKeywords:"struct protocol class extension enum actor",end:"\\{",excludeEnd:!0,keywords:O,contains:[d.inherit(d.TITLE_MODE,{className:"title.class",begin:/[A-Za-z$_][\u00C0-\u02B80-9A-Za-z$_]*/}),...x]},X,Q,{beginKeywords:"import",end:/$/,contains:[...f],relevance:0},...x,...F,...E,C,w,...M,...k,h,z]}}})();hljs.registerLanguage("swift",e)})()